#!/usr/bin/env ruby

require 'uri'
require 'csv'
require 'json'

if ARGV.size < 2
  $stderr.puts "Usage posts.csv upto categories.json"
  exit 1
end

CATEGORIES = JSON.parse(File.read(ARGV[2]))

def read_url
  url = nil
  while url.nil?
    print 'URL: '
    url = begin
            input = $stdin.gets.strip
            return nil if input == 'n' # skip

            u = URI.parse(input)
            url = u if u.is_a? URI::HTTP
          rescue URI::InvalidURIError
            nil
          end
  end
  url.to_s
end

def read_categories
  begin
    CATEGORIES.each_with_index do |cat, i|
      puts "#{i + 1}. #{cat['name']}"
    end
    puts
    print 'Categories: '

    categories = $stdin.gets.strip.split(/\s*,\s*/).map(&:to_i).tap{|x| p x }.map do |i|
      raise IndexError if i < 1 || i > CATEGORIES.size

      CATEGORIES[i - 1]['name']
    end
    raise IndexError if categories.empty?

    categories
  rescue IndexError
    retry
  end
end

upto = File.read(ARGV[1]).to_i rescue 0
CSV.open(ARGV[0]) do |csv|
  csv.each do |row|
    next if csv.lineno <= upto

    tweet, url = row
    system('xdg-open', row.compact.first)
    url = read_url if url.nil? || url.empty?

    if url
      categories = read_categories

      command = %w[cargo run --release --bin add-url --]
      command += categories.map { |cat| ['-t', cat] }.flatten
      command += ['-w', tweet] if tweet
      command << url

      puts command.join(' ')
      print 'Run? [Y/n]: '
      ok = $stdin.gets.strip.downcase
      system(*command) if ok.empty? || ok == 'y'
    end

    upto += 1
    File.write(ARGV[1], upto.to_s)
  end
end
