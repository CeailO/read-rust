<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Read Rust - Security</title><link>https://readrust.net/</link><description>Security posts on Read Rust</description><item><title>Xori - Custom disassembly framework</title><link>https://sites.google.com/secured.org/malwareunicorn/xori</link><description><![CDATA[Xori is an automation-ready disassembly and static analysis library that consumes shellcode or PE binaries and provides triage analysis data.]]></description><guid isPermaLink="false">31c9d3c0-192b-45f2-922e-5b8d188683bc</guid><pubDate>Thu,  9 Aug 2018 08:23:00 +0000</pubDate><dc:creator>Amanda Rousseau and Rich Seymour</dc:creator></item><item><title>Accelerating Edwards Curve Arithmetic with Parallel Formulas</title><link>https://medium.com/@hdevalence/accelerating-edwards-curve-arithmetic-with-parallel-formulas-ac12cf5015be</link><description><![CDATA[The fastest formulas for elliptic curve operations were published by Hisil, Wong, Carter, and Dawson in their 2008 paper Twisted Edwards Curves Revisited. Their paper also describes a parallel version of their formulas, designed to execute four streams of instructions on four independent processors. Until now, these parallel formulas donâ€™t seem to have been implemented in software. But a closer look reveals that slightly modifying the formulas allows the expensive instructions to be executed in uniform, making a vectorized SIMD implementation possible.

I implemented this strategy in Rust, targeting 256-bit wide AVX2 operations. The resulting implementation performs double-base scalar multiplication faster than other Ed25519 implementations I tested, and is even faster than FourQ without endomorphisms]]></description><guid isPermaLink="false">8a924e9f-d803-4e85-b2e8-92b5909c7695</guid><pubDate>Wed,  1 Aug 2018 17:41:42 +0000</pubDate><dc:creator>Henry de Valence</dc:creator></item><item><title>RustSec Advisory Database</title><link>https://rustsec.org/</link><description><![CDATA[Security advisory database for Rust crates published through https://crates.io.]]></description><guid isPermaLink="false">db3cdc15-004b-4a41-9649-6ade4a8407eb</guid><pubDate>Thu, 19 Jul 2018 00:00:00 +0000</pubDate><dc:creator>Rust Project Developers</dc:creator></item></channel></rss>