{
  "version": "https://jsonfeed.org/version/1",
  "title": "Read Rust - DevOps and Deployment",
  "home_page_url": "https://readrust.net/",
  "feed_url": "https://readrust.net/devops-and-deployment/feed.json",
  "description": "DevOps and Deployment posts on Read Rust",
  "author": {
    "name": "Wesley Moore",
    "url": "http://www.wezm.net/"
  },
  "items": [
    {
      "id": "5f84b8db-7379-4c08-9cae-d2a901caaab1",
      "title": "Linux Container Internals (Part II)",
      "content_text": "Containers are moving the world. Each passing day more and more organizations are embracing containers as first-class citizens for distribution and deployment of software components. Containers represent the core of the cloud native paradigm.",
      "url": "https://rabbitstack.github.io/operating%20systems/containers/linux-container-internals-part-ii/",
      "date_published": "2018-07-13T18:10:04+02:00",
      "author": {
        "name": "Nedim Å abiÄ‡",
        "url": "https://rabbitstack.github.io"
      },
      "tags": [
        "DevOps and Deployment"
      ]
    },
    {
      "id": "f53d06d7-6b22-4cb8-95f1-66f8ae0bdb8f",
      "title": "Deploying Rust with Docker and Kubernetes",
      "content_text": "Using a tiny Rust app to demonstrate deploying Rust with Docker and Kubernetes.",
      "url": "https://www.fpcomplete.com/blog/2018/07/deploying-rust-with-docker-and-kubernetes",
      "date_published": "2018-07-17T21:36:08+00:00",
      "author": {
        "name": "Chris Allen",
        "url": "https://www.fpcomplete.com/blog"
      },
      "tags": [
        "DevOps and Deployment"
      ]
    },
    {
      "id": "fbdcd657-aab5-4d28-aa3a-ab04294f49eb",
      "title": "Multi target Rust builds with auto deployment in Travis-CI",
      "content_text": "This is just a small build script to automatically compile and create Rust binaries for your i86 32 and 64 bit machine and your Raspberry Pi(ARM) with Travis-CI. On the right side I added a little explanation of the following script.",
      "url": "https://medium.com/@tyrf/multi-target-rust-builds-with-auto-deployment-in-travis-ci-ab5214fb73ba",
      "date_published": "2018-07-13T18:44:17.418+00:00",
      "author": {
        "name": "Hendrik Teuber",
        "url": "https://medium.com/@tyrf"
      },
      "tags": [
        "DevOps and Deployment",
        "Embedded"
      ]
    },
    {
      "id": "f8a137b7-ce7d-4553-bcec-6170350dc1f2",
      "title": "Rust with Rocket + Elm running on Heroku",
      "content_text": "I had this goal of making a web app that was very fast, stable and easy to deploy. This is what I was hoping to accomplish: strongly typed server-side and client-side languages (Rust & Elm respectively), push-button deployments to the cloud with free hosting initially, and sub-second response times for API calls and page loads. With this setup, I think I'm well on my way to accomplishing each of these.",
      "url": "http://ethanfrei.com/posts/rust-with-rocket-elm-running-on-heroku.html",
      "date_published": "2018-06-24T00:00:00+00:00",
      "author": {
        "name": "Ethan Frei",
        "url": "http://ethanfrei.com/"
      },
      "tags": [
        "Web and Network Services",
        "DevOps and Deployment"
      ]
    },
    {
      "id": "451beac2-903e-4bff-ada5-dc478a19e2c1",
      "title": "Even faster rust builds in Gitlab CI",
      "content_text": "tl;dr - I applied a few patterns Iâ€™ve used on other projects to a Gitlab CI-powered rust project to achieve <2min builds. Basically just caching at different layers â€“ caching via the docker image builder pattern at the docker level, aggressive caching with Gitlab CI at the CI runner level, also one more step of combining some build steps (probably unnecessarily).",
      "url": "https://vadosware.io/post/even-faster-rust-builds-in-gitlab-ci/",
      "date_published": "2018-05-30T17:09:59+09:00",
      "author": {
        "name": "Vados",
        "url": "https://vadosware.io/"
      },
      "tags": [
        "DevOps and Deployment"
      ]
    },
    {
      "id": "5b534e6e-4e12-4860-95d6-1317b8903d4e",
      "title": "Setting up gitlab-ci for Rust",
      "content_text": "We're going to create a multi-stage pipeline based on the one I'm using at work, featuring: a build image, linting, test & release builds, and docker containers",
      "url": "https://not.plhk.ru/gitlab-ci-rust/",
      "date_published": "2018-05-14T00:00:00+00:00",
      "author": {
        "name": "Alexander Polakov",
        "url": "https://not.plhk.ru/"
      },
      "tags": [
        "DevOps and Deployment"
      ]
    },
    {
      "id": "c35de4ff-df45-4774-998f-f56ddb57b5d2",
      "title": "Building and Deploying Rust with VSTS",
      "content_text": "Since I started at Microsoft about 6 months ago, I had to catch up on their (our) tech: Azure, .NET, Visual Studio. Yet as an avid GitHub user I overlooked one thing completely: Visual Studio Team Services! Turns out itâ€™s quite the hidden gem and after a colleague showed me some of its power, I had to look into it more deeply. Turns out itâ€™s an easy and free resource for any project. Can it help your project? Yes! How? Find out below ðŸ˜Š",
      "url": "https://blog.x5ff.xyz/blog/rust-ci-cd-vsts/",
      "date_published": "2018-03-02T00:00:00+00:00",
      "author": {
        "name": "Claus",
        "url": "https://blog.x5ff.xyz/blog"
      },
      "tags": [
        "DevOps and Deployment"
      ]
    },
    {
      "id": "ab076ead-649f-47ff-8fa2-a7c243ba3dca",
      "title": "Docker Multi-Stage Build",
      "content_text": "On June 13, 2017 took place the Paris Container Day. They unveiled a new docker feature: multi-stage build. That's the subject of this article.",
      "url": "https://blog.jawg.io/docker-multi-stage-build/",
      "date_published": "2018-03-01T14:00:00+00:00",
      "author": {
        "name": "Jones Magloire",
        "url": "http://blog.jawg.io/"
      },
      "tags": [
        "Language",
        "DevOps and Deployment"
      ]
    },
    {
      "id": "d001ce02-fbfb-4a08-8389-0f713b09bf72",
      "title": "My Rust Dockerfile",
      "content_text": "Lets deploy small docker images for Rust",
      "url": "https://blog.sedrik.se/posts/my-docker-setup-for-rust/",
      "date_published": "2018-02-26T00:00:00+00:00",
      "author": {
        "name": "Fredrik Park",
        "url": "https://blog.sedrik.se/"
      },
      "tags": [
        "Language",
        "DevOps and Deployment"
      ]
    },
    {
      "id": "2b698c99-99e0-4fad-8716-b58dbd9c255c",
      "title": "Deploying A Rust Server to Google App Engine with Travis CI & Docker",
      "content_text": "I woke up this morning with one goal: to convert my website (morgangallant.com) into a Rust web server. I have been a long time fan ofâ€¦",
      "url": "https://medium.com/@gallantmrgn/deploying-rust-server-to-google-app-engine-with-travis-ci-docker-b80acfce2ce5",
      "date_published": "2018-02-11T00:07:43.579+00:00",
      "author": {
        "name": "Morgan A. Gallant",
        "url": "https://medium.com/@gallantmrgn"
      },
      "tags": [
        "Web and Network Services",
        "DevOps and Deployment"
      ]
    }
  ]
}