<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Read Rust - Rust 2019</title><link>https://readrust.net/</link><description>Rust 2019 posts on Read Rust</description><item><title>Rust 2019 — let us pursue composability</title><link>https://medium.com/@GolDDranks/rust-2019-let-us-pursue-composability-70f1eb2238c3</link><description><![CDATA[We should drive home the goals set in spirit of productivity in 2019. We should also consider composibility as the next overarching theme.]]></description><guid isPermaLink="false">0e733a02-5972-4106-98a7-d0613485cac1</guid><pubDate>Sun,  9 Dec 2018 02:50:51 +0000</pubDate><dc:creator>Pyry Kontio</dc:creator></item><item><title>Rust 2019 – The Road Ahead</title><link>https://llogiq.github.io/2018/12/08/rust.html</link><description><![CDATA[The Rust community team is soliciting blog posts to help plan the 2019 efforts. So here’s my take. I’ll start by looking back at the last year. We’ve seen great and impactful changes in the Rust landscape, such as non-lexical lifetimes, the stabilization of procedural macros and const fn, stable clippy and rustfmt, the further development of powerful IDE integration such as IntelliJ, Atom and VSCode.]]></description><guid isPermaLink="false">57aae12d-0d27-4eec-b3f3-4ff99f294435</guid><pubDate>Sat,  8 Dec 2018 00:00:00 +0000</pubDate><dc:creator>Llogiq</dc:creator></item><item><title>The Fallow Year, my Rust2019 post</title><link>https://www.jonathanturner.org/2018/12/the-fallow-year.html</link><description><![CDATA[Rust is an amazing project. It’s unlike anything I’ve ever seen. Not only are we seeing an ever-growing number of big name users of Rust, we also continue to see leaps in productivity and functionality. Yesterday, the Rust 2018 edition shipped. The culmination of three years of work, it shows off what the community is capable of: new features, backwards compatibility, new ergonomics without sacrificing performance, and the list goes on and on.

Which is why it might comes as a little bit of a surprise that I suggest we let the field rest for the year. More specifically, that we should let one field rest while we plant another. Rather than focusing on new designs, I suggest we turn our attention outside of RFCs to other areas of Rust.]]></description><guid isPermaLink="false">8f026251-f6df-4816-a89f-855741aacbf6</guid><pubDate>Sat,  8 Dec 2018 00:00:00 +0000</pubDate><dc:creator>Jonathan Turner</dc:creator></item><item><title>A simple agenda for the Rust Game Development WG</title><link>https://medium.com/rustgamedev/a-simple-agenda-for-the-rust-game-development-wg-485cfc72b088</link><description><![CDATA[Proposing Amethyst as our flagship project.]]></description><guid isPermaLink="false">e7334cc0-fe8a-4b16-b96f-c25b2073dc52</guid><pubDate>Fri,  7 Dec 2018 23:51:48 +0000</pubDate><dc:creator>Erlend S. Heggen</dc:creator></item><item><title>Rust in the new age</title><link>https://quietmisdreavus.net/code/2018/12/07/rust-in-the-new-age/</link><description><![CDATA[A wishlist of what I would like to accomplish with Rust in 2019.]]></description><guid isPermaLink="false">97627c69-e162-420e-8d30-22c0755d0b76</guid><pubDate>Fri,  7 Dec 2018 17:00:00 -0600</pubDate><dc:creator>QuietMisdreavus</dc:creator></item><item><title>Plans for 2019</title><link>https://pcwalton.github.io/2018/12/07/plans-for-2019.html</link><description><![CDATA[Many people have asked me what I’m working on lately, and I thought I’d give a quick rundown of my status and plans for 2019. I intend to keep this post updated with the status of projects as they progress.]]></description><guid isPermaLink="false">e20c3d81-ce4b-491d-98e1-632aeb5e40a4</guid><pubDate>Fri,  7 Dec 2018 12:49:00 +0000</pubDate><dc:creator>Patrick Walton</dc:creator></item><item><title>Making Rust a perfect fit for high-performance computations</title><link>https://gist.github.com/HadrienG2/e9a875bdf98b528594f4e20f8176bb68</link><description><![CDATA[I think Rust could help at the task of writing performant computational software, because its expressiveness, flexibility and degree of low-level control rivals that of C++, which is the de facto dominant programming language of this community where sophisticated abstractions and high performance are both desired. All the while being vastly easier to learn, and to use correctly and efficiently at the same time.]]></description><guid isPermaLink="false">a3f673ea-49c8-4942-96a3-8565d6191ec5</guid><pubDate>Thu,  6 Dec 2018 21:06:21 +0000</pubDate><dc:creator>Hadrien G.</dc:creator></item><item><title>2019 Roadmap? More like a wishlist</title><link>https://www.reddit.com/r/rust/comments/a3sav1/2019_roadmap_more_like_a_wishlist_finish_and_ship/</link><description><![CDATA[I think there is too much unfinished and unpolished stuff in Rust. My wish for 2019 would be to ship most of this. If I had to choose a theme for Rust 2021 that would be "Reliability", to convey that what is shipped has actually been polished to the point that it does not fail.]]></description><guid isPermaLink="false">efb83d26-14fa-4649-b4f2-e792f0e8a658</guid><pubDate>Fri,  7 Dec 2018 08:06:04 +1100</pubDate><dc:creator>u/0b_0101_001_1010</dc:creator></item><item><title> A call for Rust 2019 Roadmap blog posts</title><link>https://blog.rust-lang.org/2018/12/06/call-for-rust-2019-roadmap-blogposts.html</link><description><![CDATA[Starting today and running until of January 15, we’d like to ask the community to write blogposts reflecting on Rust in 2018 and proposing goals and directions for Rust in 2019.]]></description><guid isPermaLink="false">3234baba-f03d-467c-b032-d7d0dec7a12d</guid><pubDate>Thu,  6 Dec 2018 00:00:00 +0000</pubDate><dc:creator>The Rust Community Team</dc:creator></item></channel></rss>