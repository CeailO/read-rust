<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Read Rust - Rust 2020</title><link>https://readrust.net/</link><description>Rust 2020 posts on Read Rust</description><item><title>My Wishes for Rust 2020</title><link>https://cetra3.github.io/blog/rust-2020/</link><description><![CDATA[2019 was another huge year for rust, but instead of implementing the shiny new thing, it's been a focus on refining existing ideas. Having being using rust professionally for over 3 years, I feel I will very soon be regailing new rust developers of the times before NLL & async, where we had to play lexicon-fu to get things like caches to work in a reasonable fashion, or using super dooper combinator chains and wrestling with futures types (Either::A/B anyone?). So I'd like to make clear my acknowledgement that I am happy with the direction that the rust language is heading in, and these requests are really nice to haves.]]></description><guid isPermaLink="false">96de766f-57ab-48b5-a1ad-97c4fe3d67eb</guid><pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate><dc:creator>Cetra</dc:creator></item><item><title>Rust 2020: exploit dominance in web assembly and no_std</title><link>https://www.reddit.com/r/rust/comments/dp1omc/rust_2020_exploit_dominance_in_web_assembly_and/</link><description><![CDATA[I'm a no name who's just grateful to play around with Rust. The most exciting aspects of Rust is seeing a expressive language go where other languages can barely tread (wasm,linux kernels, microcontrollers). I hope Rust continues to be the bleeding edge tech in web assembly land. I would dream for a world where Rust team works closely with browsers and what new wasm features will drop, and Rust is first to get it. no_std, async, and alloc have added a lot of fascinating new capabilities to the wasm ecosystem, i'd love to see some aspects get stabilized in this realm.]]></description><guid isPermaLink="false">a9a47fee-f918-46f1-bd89-5ddbcbd69f32</guid><pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate><dc:creator>u/richardanaya</dc:creator></item><item><title>Rust 2020 – More Or Less</title><link>https://llogiq.github.io/2019/10/30/rust-2020.html</link><description><![CDATA[The Rust team asked for 2020 roadmap blog posts, so here goes: Let’s do more of what we’ve been doing so far.]]></description><guid isPermaLink="false">71a819be-cc9f-43fc-bc00-a9c182229efc</guid><pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate><dc:creator>Llogiq</dc:creator></item><item><title>Rust 2020: Private enum variants</title><link>https://www.reddit.com/r/rust/comments/dov6ox/rust_2020_private_enum_variants/</link><description><![CDATA[For the 2021 edition of Rust, I'd like to see private enum variants.]]></description><guid isPermaLink="false">1b2c0d1d-3b43-444e-8755-e8e4a60cb2b7</guid><pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate><dc:creator>u/joshlf_</dc:creator></item><item><title>My Rust 2020 blog post</title><link>https://www.reddit.com/r/rust/comments/dot5pk/my_rust_2020_blog_post/</link><description><![CDATA[The 2019 goals for the Rust project were to finish some old language and library features that have had a lot of design but have not been pushed through the finish line.]]></description><guid isPermaLink="false">86590c31-b27d-4d59-b6d8-23eaae5c3dac</guid><pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate><dc:creator>u/0b_0101_001_1010</dc:creator></item><item><title>A call for blogs 2020</title><link>https://www.reddit.com/r/rust/comments/dorinl/a_call_for_blogs_2020/</link><description><![CDATA[Comments on the call for blog posts in 2020 on Reddit, some of which include 2020 wishes.]]></description><guid isPermaLink="false">a32d1a1c-6453-4222-b0a6-9a7f996f6864</guid><pubDate>Wed, 30 Oct 2019 00:00:00 +0000</pubDate><dc:creator>Commenters on Reddit</dc:creator></item><item><title>A call for blogs 2020</title><link>https://blog.rust-lang.org/2019/10/29/A-call-for-blogs-2020.html</link><description><![CDATA[We are accepting ideas about almost anything having to do with Rust: language features, tooling needs, community programs, ecosystem needs... if it's related to Rust, we want to hear about it.

One big question for this year: will there be a Rust 2021 edition? If so, 2020 would be the year to do a lot of associated work and plan the details. What would the edition's theme be?]]></description><guid isPermaLink="false">9dd9b6b4-1ab5-4421-b806-61594b0f5f98</guid><pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate><dc:creator>The Rust Core Team</dc:creator></item></channel></rss>