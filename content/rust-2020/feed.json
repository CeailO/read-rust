{
  "version": "https://jsonfeed.org/version/1",
  "title": "Read Rust - Rust 2020",
  "home_page_url": "https://readrust.net/",
  "feed_url": "https://readrust.net/rust-2020/feed.json",
  "description": "Rust 2020 posts on Read Rust",
  "author": {
    "name": "Wesley Moore",
    "url": "http://www.wezm.net/"
  },
  "items": [
    {
      "id": "96de766f-57ab-48b5-a1ad-97c4fe3d67eb",
      "title": "My Wishes for Rust 2020",
      "content_text": "2019 was another huge year for rust, but instead of implementing the shiny new thing, it's been a focus on refining existing ideas. Having being using rust professionally for over 3 years, I feel I will very soon be regailing new rust developers of the times before NLL & async, where we had to play lexicon-fu to get things like caches to work in a reasonable fashion, or using super dooper combinator chains and wrestling with futures types (Either::A/B anyone?). So I'd like to make clear my acknowledgement that I am happy with the direction that the rust language is heading in, and these requests are really nice to haves.",
      "url": "https://cetra3.github.io/blog/rust-2020/",
      "date_published": "2019-10-30T00:00:00+00:00",
      "author": {
        "name": "Cetra",
        "url": "https://cetra3.github.io/blog/"
      },
      "tags": [
        "Rust 2020"
      ]
    },
    {
      "id": "a9a47fee-f918-46f1-bd89-5ddbcbd69f32",
      "title": "Rust 2020: exploit dominance in web assembly and no_std",
      "content_text": "I'm a no name who's just grateful to play around with Rust. The most exciting aspects of Rust is seeing a expressive language go where other languages can barely tread (wasm,linux kernels, microcontrollers). I hope Rust continues to be the bleeding edge tech in web assembly land. I would dream for a world where Rust team works closely with browsers and what new wasm features will drop, and Rust is first to get it. no_std, async, and alloc have added a lot of fascinating new capabilities to the wasm ecosystem, i'd love to see some aspects get stabilized in this realm.",
      "url": "https://www.reddit.com/r/rust/comments/dp1omc/rust_2020_exploit_dominance_in_web_assembly_and/",
      "date_published": "2019-10-30T00:00:00+00:00",
      "author": {
        "name": "u/richardanaya",
        "url": "https://www.reddit.com/user/richardanaya/"
      },
      "tags": [
        "Rust 2020"
      ]
    },
    {
      "id": "71a819be-cc9f-43fc-bc00-a9c182229efc",
      "title": "Rust 2020 – More Or Less",
      "content_text": "The Rust team asked for 2020 roadmap blog posts, so here goes: Let’s do more of what we’ve been doing so far.",
      "url": "https://llogiq.github.io/2019/10/30/rust-2020.html",
      "date_published": "2019-10-30T00:00:00+00:00",
      "author": {
        "name": "Llogiq",
        "url": "http://llogiq.github.io/"
      },
      "tags": [
        "Rust 2020"
      ]
    },
    {
      "id": "1b2c0d1d-3b43-444e-8755-e8e4a60cb2b7",
      "title": "Rust 2020: Private enum variants",
      "content_text": "For the 2021 edition of Rust, I'd like to see private enum variants.",
      "url": "https://www.reddit.com/r/rust/comments/dov6ox/rust_2020_private_enum_variants/",
      "date_published": "2019-10-30T00:00:00+00:00",
      "author": {
        "name": "u/joshlf_",
        "url": "https://www.reddit.com/user/joshlf_/"
      },
      "tags": [
        "Rust 2020"
      ]
    },
    {
      "id": "86590c31-b27d-4d59-b6d8-23eaae5c3dac",
      "title": "My Rust 2020 blog post",
      "content_text": "The 2019 goals for the Rust project were to finish some old language and library features that have had a lot of design but have not been pushed through the finish line.",
      "url": "https://www.reddit.com/r/rust/comments/dot5pk/my_rust_2020_blog_post/",
      "date_published": "2019-10-30T00:00:00+00:00",
      "author": {
        "name": "u/0b_0101_001_1010",
        "url": "https://www.reddit.com/user/0b_0101_001_1010/"
      },
      "tags": [
        "Rust 2020"
      ]
    },
    {
      "id": "a32d1a1c-6453-4222-b0a6-9a7f996f6864",
      "title": "A call for blogs 2020",
      "content_text": "Comments on the call for blog posts in 2020 on Reddit, some of which include 2020 wishes.",
      "url": "https://www.reddit.com/r/rust/comments/dorinl/a_call_for_blogs_2020/",
      "date_published": "2019-10-30T00:00:00+00:00",
      "author": {
        "name": "Commenters on Reddit",
        "url": "https://www.reddit.com/r/rust/"
      },
      "tags": [
        "Rust 2020"
      ]
    },
    {
      "id": "9dd9b6b4-1ab5-4421-b806-61594b0f5f98",
      "title": "A call for blogs 2020",
      "content_text": "We are accepting ideas about almost anything having to do with Rust: language features, tooling needs, community programs, ecosystem needs... if it's related to Rust, we want to hear about it.\n\nOne big question for this year: will there be a Rust 2021 edition? If so, 2020 would be the year to do a lot of associated work and plan the details. What would the edition's theme be?",
      "url": "https://blog.rust-lang.org/2019/10/29/A-call-for-blogs-2020.html",
      "date_published": "2019-10-29T00:00:00+00:00",
      "author": {
        "name": "The Rust Core Team",
        "url": "https://blog.rust-lang.org/"
      },
      "tags": [
        "Rust 2020"
      ]
    }
  ]
}