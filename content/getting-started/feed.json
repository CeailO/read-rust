{
  "version": "https://jsonfeed.org/version/1",
  "title": "Read Rust - Getting Started",
  "home_page_url": "https://readrust.net/",
  "feed_url": "https://readrust.net/getting-started/feed.json",
  "description": "Getting Started posts on Read Rust",
  "author": {
    "name": "Wesley Moore",
    "url": "http://www.wezm.net/"
  },
  "items": [
    {
      "id": "e1fdb8ec-e1f8-4718-ba5d-bb3bdf897506",
      "title": "Rust for Node developers",
      "content_text": "An introduction to the Rust programming language for Node developers.",
      "url": "https://github.com/Mercateo/rust-for-node-developers",
      "date_published": "2019-01-31T23:59:00+00:00",
      "author": {
        "name": "Donald Pipowitch",
        "url": "https://github.com/Mercateo"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "4f4e3ed0-1852-4954-9cde-1d74c7e54b6f",
      "title": "Learning the Rust Programming Language",
      "content_text": "Rust has been on my radar for some time and I aspire to become proficient with the Rust Programming Language in 2019. Initially, my interest in Rust was sparked by the memory ownership model. With WASM support going mainstream I thought I’d give Rust a deeper look and have enjoyed my experience so far. This post is a living post that will continue to be revised and appended as I learn more about Rust.",
      "url": "https://www.aarongreenlee.com/blog/beginning-to-learn-rust-programming-language-rustlang/",
      "date_published": "2019-01-21T00:00:00+00:00",
      "author": {
        "name": "Aaron Greenlee",
        "url": "https://www.aarongreenlee.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "f941f6bf-eaf1-428a-a5d0-f8e35d504a3a",
      "title": "Supernova: rustfmt",
      "content_text": "I previously wrote about Supernova, and my experience contributing to a project in a language I had never used before. Although my PR is still WIP status (I need to find time to get a solid grasp on Date/Time stuff in Rust, specifically using the chrono crate), I picked up some smaller issues in the interim to stay involved.\n\nMy most recent PR’s involved working off of a previous PR which introduced code linting with clippy, and taking it one step further by introducing rustfmt to help ensure consistent coding style in our CI pipeline.",
      "url": "https://medium.com/@chayadanz/supernova-rustfmt-5c3d0c56831c",
      "date_published": "2019-01-10T04:22:26.772+00:00",
      "author": {
        "name": "Chaya Danzinger",
        "url": "https://medium.com/@chayadanz"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "069e9371-d000-454f-b73d-0b082a92988b",
      "title": "How I learned to love Rust",
      "content_text": "A journey from hating Rust to loving it more than any other language.",
      "url": "https://medium.com/@geis/how-i-learned-to-love-rust-abfac6c1f6d1",
      "date_published": "2019-01-07T21:07:51.883+00:00",
      "author": {
        "name": "Grégoire Geis",
        "url": "https://medium.com/@geis"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "525bee43-14cb-422e-8b91-58322a8d2c63",
      "title": "Rust for algorithms",
      "content_text": "How I decided to challenge myself and solve coding tasks using Rust",
      "url": "https://ilyabiz.com/2018/12/rust-for-algorithms/",
      "date_published": "2018-12-23T20:54:31+00:00",
      "author": {
        "name": "Ilya Bizyaev",
        "url": "https://ilyabiz.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "5bfa329e-1d71-4b98-af03-90c1672ebb8b",
      "title": "How to Become a Rust Super-developer",
      "content_text": "This is an article and a tutorial about stumbling and failing. It is about trying hard, and giving up - just to start all over again. All for the one goal - becoming the master of coding in Rust.",
      "url": "https://hashnode.com/post/how-to-become-a-rust-super-developer-cjpv1ee7e000buhs2aqrdw2ym",
      "date_published": "2018-12-19T00:00:00+00:00",
      "author": {
        "name": "Marco Alka",
        "url": "https://hashnode.com/@maruru"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "f8aa1176-9ae2-447f-b914-a6950612d7f2",
      "title": "8 Lessons from First Days of Advent of Code 2018",
      "content_text": "I’ve got two days of Advent of Code 2018 under my belt and four stars to show for it! But I’ll be the first to admit that I had plenty of help, so I thought it only fair that I write out some of the things I’ve already learned about Rust.",
      "url": "https://sts10.github.io/2018/12/02/lessons-from-first-two-days-of-advent-of-code-2018.html",
      "date_published": "2018-12-02T23:22:00+00:00",
      "author": {
        "name": "Sam Schlinkert",
        "url": "https://sts10.github.io/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "3c8b4f15-959d-40cc-a79c-1a375f498bb0",
      "title": "Rust: Error handling – Learning Rust",
      "content_text": "Welcome Back! This is the fifth post of Learning Rust series. Rust is a well designed language and safety is one of the main focus area of it. Its design decisions have been taken to prevent errors and major issues of systems programs like data races, null pointer exceptions, sensitive data leakage through exceptions and etc. So today, we are going to talk more about the concepts behind Error Handling in Rust.",
      "url": "https://medium.com/learning-rust/rust-error-handling-72a8e036dd3",
      "date_published": "2018-12-06T19:11:01.554+00:00",
      "author": {
        "name": "Dumindu Madunuwan",
        "url": "https://medium.com/@dumindu"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "09e9a0eb-339f-496e-8477-911e89774938",
      "title": "Learning a new language for more than 2 months (feat. Exercism)",
      "content_text": "Usually I take about a week to learn a new language so I can start doing some real work with it. After all a programming language (at least the high level and dynamic ones) is just assignment, calculation, branching, looping and reuse (and in certain cases, concurrency/parallelism, not gonna dive deep in defining the difference though). Well, that was true until I started learning Rust, partly for my own leisure. I still don’t feel comfortable writing a complete Rust code. Though I really like the language.",
      "url": "https://cslai.coolsilon.com/2018/11/06/learning-a-new-language-for-more-than-2-months-feat-exercism/",
      "date_published": "2018-11-06T11:18:35+00:00",
      "author": {
        "name": "Jeffrey04",
        "url": "https://cslai.coolsilon.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "a758c495-92fa-476d-9758-a916dc50c2f9",
      "title": "Summer School With The Rust Compiler",
      "content_text": "Learning Rust is hard for everyone, but it’s even worse for me because I’ve been working with Ruby during past ten years. Switching to Rust from Ruby is leaving an anything-goes hippie commune to a summer school for delinquent programmers run by a sadistic and unforgiving teacher. Why would anyone use a compiler like this? The answer is simple: to learn how to write better code.",
      "url": "http://patshaughnessy.net/2018/10/24/summer-school-with-the-rust-compiler",
      "date_published": "2018-10-24T03:00:00+00:00",
      "author": {
        "name": "Pat Shaughnessy",
        "url": "http://patshaughnessy.net/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "fae7cb69-a7bf-4cb1-9d1d-f5e703312ef7",
      "title": "Rust can be difficult to learn and frustrating, but it’s also the most exciting thing in software development in a long time",
      "content_text": "I recently decided to put serious effort into learning the Rust programming language. I saw it coming up frequently in interesting projects (e.g. ripgrep) and kept hearing good things about it. My hesitation to picking up Rust since its 1.0 release in 2015 came from two fronts. First, I’m completely invested in Go because of InfluxDB. Second, I heard that it was not the easiest thing to learn. While I don’t normally shy away from difficult tasks, I was hesitant because I believe that many developer tools that take off do so because they are easy to use or give developers significant productivity gains. More often than not, I want to invest my time in tools that I think have longevity that will get some critical mass in the market.",
      "url": "https://www.influxdata.com/blog/rust-can-be-difficult-to-learn-and-frustrating-but-its-also-the-most-exciting-thing-in-software-development-in-a-long-time/",
      "date_published": "2018-10-22T18:45:16+00:00",
      "author": {
        "name": "Paul Dix",
        "url": "https://www.influxdata.com/blog/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "60825132-c54b-4297-9f81-936601b76f64",
      "title": "My Experience With Learning Rust",
      "content_text": "Although I didn’t start writing this blog when I started writing in Rust, I remember clearly why I started writing in Rust. From what I had been doing in C#, none of it utilized multiple threads. Multi-threaded programming had always been a sore topic for me. Things like thread synchronization and message passing never really made sense to me. I learned Rust mainly due to its promises for ease of programming for multiple threads. Once hearing that things like parts of Firefox were written using it, and the Mozilla themselves were very strongly invested in Rust, I had more reason to start writing in it. I’d assume that if Mozilla were to invest so much in a programming language, it must have some sort of benefits over your usual C and C++ programming languages. Even further than that, I’ve heard of some game studios adopting Rust in their games and I was pretty much hooked at that point.",
      "url": "https://medium.com/@nathanielbarragan/my-experience-with-learning-rust-bbcb6b7c1063",
      "date_published": "2018-10-22T02:29:02.205+00:00",
      "author": {
        "name": "Nathaniel Barragan",
        "url": "https://medium.com/@nathanielbarragan"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "ceb7c2a6-d905-4b13-8f42-4aa42cd9b3e3",
      "title": "Building a command-line todo app in Rust",
      "content_text": "In this tutorial, we are going to create a simple command-line todo app. By the end of this tutorial, you should have a basic understanding of Rust programming language, building command-line apps in Rust, and performing file-system operations in Rust.",
      "url": "https://medium.com/@devashishdxt/building-a-command-line-todo-app-in-rust-a89bb7af91c3",
      "date_published": "2018-10-12T13:14:56.867+00:00",
      "author": {
        "name": "Devashish Dixit",
        "url": "https://medium.com/@devashishdxt"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "8e066aec-6f09-44df-b763-b4d44b772fb5",
      "title": "Understanding Compilers — For Humans (Version 2)",
      "content_text": "Understanding your compiler internally allows you to use it effectively. Walk through how programming languages and compilers work in this chronological synopsis. Lots of links, example code, and diagrams have been composed to aid in your understanding.\n\nUnderstanding Compilers — For Humans (Version 2) is a successor to my second article on Medium, with over 21 thousand views. I am so glad I could make a positive impact on people’s education, and I am excited to bring a complete rewrite based on the input I received from the original article. I chose Rust as this work’s primary language.",
      "url": "https://towardsdatascience.com/understanding-compilers-for-humans-version-2-157f0edb02dd",
      "date_published": "2018-09-29T16:01:01.807+00:00",
      "author": {
        "name": "Luke Wilson",
        "url": "https://towardsdatascience.com/@aesl"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "e112cc10-746d-4151-b0e4-76832be74e09",
      "title": "Rust: Pass-By-Value or Pass-By-Reference?",
      "content_text": "The other day, a friend of mine who is learning Rust asked if Rust is a pass-by-value or a pass-by-reference language. For the unfamiliar, pass-by-value means that when passing an argument to a function it gets copied into the new function so that the value in the calling function and the value in the called function are two separate values. Changes to one will not in turn result in the same change to the other. Pass-by-reference, on the other hand, means that when passing an argument to a function, it doesn’t copy the value but rather the argument is merely a transparent reference to the original value. This means changes to the value in the called function change the value in the calling function since they are the same value.",
      "url": "https://blog.ryanlevick.com/posts/rust-pass-value-or-reference/",
      "date_published": "2018-09-12T00:00:00+00:00",
      "author": {
        "name": "Ryan Levick",
        "url": "https://blog.ryanlevick.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "6d814a89-7614-47d1-b3f4-b660279b379d",
      "title": "Rust: My first impressions",
      "content_text": "At work I’m seeing more and more embedded software; over the past few years in, among others, coffee machines, forklifts, and cars. Embedded software needs to be fast and extremely efficient with hardware resources. In some cases it not even acceptable to have a tiny break for some garbage collection. So, typical tech stacks for backend development can’t be used, never mind anything that uses browser technologies. Unsurprisingly, almost all embedded software is written in C++, and, in fact, that is also what I used recently for a personal project with a micro-controller.\n\nLooking through the remaining choices, I went past Golang, which uses garbage collection, and set my eyes on Rust. In this post I’ll describe my first impressions, some of the frustrating moments, but also the extremely impressive performance on a larger piece of code.",
      "url": "https://erik.doernenburg.com/2018/09/rust-my-first-impressions/",
      "date_published": "2018-09-07T00:00:00+02:00",
      "author": {
        "name": "Erik Dörnenburg",
        "url": "https://erik.doernenburg.com/blog"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "7b94766b-f2c3-42f6-b215-7b63f07a4e95",
      "title": "Adventures in Rust: Futures and Tokio",
      "content_text": "One of my newer hobbies recently has been learning and toying around with Rust. Recently, as part of this learning process, I've started implementing an IP address lookup service as a small side project. During the course of implementing this project I ran into what turned out to be a bit of a hurdle to tackle, specifically performing reverse dns resolution asynchronously.\n\nMy hope is that through exploring this problem, I can aid others in understanding these concepts which can be initially difficult grasp. This is especially so as the behavior and function of Futures vary wildly between various languages and runtimes.",
      "url": "http://bryangilbert.com/post/code/rust/adventures-futures-tokio-rust/",
      "date_published": "2018-09-04T00:00:00+00:00",
      "author": {
        "name": "Bryan Gilbert",
        "url": "http://bryangilbert.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "e989a06c-ac0a-4a49-9591-8867e574c37b",
      "title": "O(1) sum_of_multiples() in Rust",
      "content_text": "I had been working mostly in Scala for a while, then took a diversion into Swift and Objective C.  I wanted to learn another language after that, and had all but decided on Clojure.  But Rust kept nagging at me — there was something about it. So I watched some videos, then read the book, and then started the Rust track at Exercism.io.",
      "url": "https://nicholassterling.wordpress.com/2018/08/31/o1-sum_of_multiples-in-rust/",
      "date_published": "2018-08-31T05:51:05+00:00",
      "author": {
        "name": "Nicholas Sterling",
        "url": "https://nicholassterling.wordpress.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "8b60e040-4635-4a84-b8a6-3e0f2933f066",
      "title": "Password Generation in Ruby and Rust",
      "content_text": "Writing the same password generator in two different languages to learn more Rust.",
      "url": "https://hur.st/blog/2018/08-25-password-generation-in-ruby-and-rust/",
      "date_published": "2018-08-25T00:00:00+00:00",
      "author": {
        "name": "Thomas Hurst",
        "url": "https://hur.st/"
      },
      "tags": [
        "Tools and Applications",
        "Getting Started"
      ]
    },
    {
      "id": "9f3fb115-f832-421a-bf28-18148cc3bde0",
      "title": "A Beginner’s Guide to Rust Macros ✨",
      "content_text": "Demystifying one of Rust’s most powerful feature.",
      "url": "https://medium.com/@phoomparin/a-beginners-guide-to-rust-macros-5c75594498f1",
      "date_published": "2018-08-18T18:35:50.344+00:00",
      "author": {
        "name": "Phoomparin Mano",
        "url": "https://medium.com/@phoomparin"
      },
      "tags": [
        "Language",
        "Getting Started"
      ]
    },
    {
      "id": "2cac0c52-a34d-4124-ab89-d117f7b69118",
      "title": "In Memes We Rust",
      "content_text": "Learning Rust to make a Mocking SpongeBob text generator",
      "url": "https://medium.com/@glitteringkatie/in-memes-we-rust-5c920b1e9af7",
      "date_published": "2018-07-25T20:11:46.910+00:00",
      "author": {
        "name": "Katie Hughes ✨",
        "url": "https://medium.com/@glitteringkatie"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "d6b87789-dd86-49e2-91b6-692607e32f67",
      "title": "How Rust made me rethink my view about compilers",
      "content_text": "It's funny how universe aligns things, just few days ago I stumbled upon Rust koans. Already familiar way of learning and exercising, patented by Ruby programmers, where you correct tests and make them work. Also whole method of learning was similar to reading 'Little Schemer' fairly popular book among fellow Lispers. So I'll use this blog post to summarize few early impressions about Rust, and let me tell you straight away, I am loving it so far!",
      "url": "https://defphil.com/post/2018/07/15/staying-rusty/",
      "date_published": "2018-07-15T00:00:00+00:00",
      "author": {
        "name": "Filip Miletic",
        "url": "https://defphil.com/"
      },
      "tags": [
        "Language",
        "Getting Started"
      ]
    },
    {
      "id": "b7c9c3df-7ecd-41f3-8c89-5c1d35298b7b",
      "title": "Journey into rust #1: Conway’s Game",
      "content_text": "The language rust has been popping up on my twitter feed and my personal life more and more. It’s been promoted and presented as the ultra safe language, so naturally I decided to check it out. The upcoming series of posts “Journey into rust” will describe and document my experiences using rust, hopefully explaining certain concepts that rust does differently. This will all be written from a C++ programmers standpoint that was thought writing Object Oriented code. I encourage you the reader to think critically and correct where necessary.\n\nOn to the actual first post! After reading “the Rust Programming Language” I wanted to get my hands dirty and actually write some code. I like graphical applications and using low level graphics API’s so I decided to implement a cellular automation in rust. But just implementing cellular automation isn’t very exciting, is it? What if we could do this on the GPU…And off I went on my journey to create Conway’s game of life in rust.",
      "url": "https://jonathansteyfkens.com/rust/opengl/graphics/2018/08/07/rust-conway-game-of-life.html",
      "date_published": "2018-08-07T22:30:01+00:00",
      "author": {
        "name": "Jonathan Steyfkens",
        "url": "https://jonathansteyfkens.com/"
      },
      "tags": [
        "Games and Graphics",
        "Getting Started"
      ]
    },
    {
      "id": "7d6c2d9c-16c8-42be-93d5-d61cc9dac117",
      "title": "Rust Modules In Less Than 5 Minutes",
      "content_text": "When I started learning Rust, the module system did not at first seem to be a shining beacon of intuitive design. The Rust documentation is phenomenal, but there are definitely some areas that I found difficult to follow; this being one such topic. So I thought I might take a stab at writing up a guide that I think would have helped me through the awkward growing pains a bit quicker.",
      "url": "https://medium.com/@erik.tate/rust-modules-in-less-than-5-minutes-9bff7f617798",
      "date_published": "2018-08-05T23:49:43.586+00:00",
      "author": {
        "name": "Erik Tate",
        "url": "https://medium.com/@erik.tate"
      },
      "tags": [
        "Getting Started",
        "Language"
      ]
    },
    {
      "id": "078a2508-9729-477b-915e-3a72fb6f66e9",
      "title": "Learning Rust 02: an ls clone",
      "content_text": "In this post, I’m building an ls clone. It’s pretty similar to the last post’s pwd clone. It’s called rls.",
      "url": "https://routley.io/tech/2018/07/08/learning-rust-02.html",
      "date_published": "2018-07-08T00:00:00+01:00",
      "author": {
        "name": " James Routley",
        "url": "https://routley.io/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "f0e4ab48-bf11-47bf-9267-4da78f78bdcc",
      "title": "Programming Servo: How to match",
      "content_text": "Today, let’s share some lessons learned from contributing to Servo, which is a great way to learn Rust.",
      "url": "https://medium.com/programming-servo/programming-servo-how-to-match-b76c43f76fe6",
      "date_published": "2018-07-27T04:37:21.175+00:00",
      "author": {
        "name": "Gregory Terzian",
        "url": "https://medium.com/@polyglot_factotum"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "62456010-4ef4-4f1d-87f0-6e0c64929d82",
      "title": "Ownership in Rust, Part 2",
      "content_text": "It’s still not problem.",
      "url": "https://medium.com/@thomascountz/ownership-in-rust-part-2-c3e1da89956e",
      "date_published": "2018-07-11T16:55:03.818+00:00",
      "author": {
        "name": "Thomas Countz",
        "url": "https://medium.com/@thomascountz"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "c0f25118-a040-4f57-bd18-1594ce4e72f6",
      "title": "Ownership in Rust, Part 1",
      "content_text": "It’s not my problem.",
      "url": "https://medium.com/@thomascountz/ownership-in-rust-part-1-112036b1126b",
      "date_published": "2018-07-09T20:58:44.366+00:00",
      "author": {
        "name": "Thomas Countz",
        "url": "https://medium.com/@thomascountz"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "325fc83d-bba5-48c8-8443-fdd5dd21f8ed",
      "title": "Learning Rust — Conspiracies, Databases, and Diesel.rs",
      "content_text": "This post is the second in a series of posts where I share my experience learning Rust. I’m building out a conspiracy theories API to help me get more familiar with Rust and to have a little fun. Since I am new to Rust, I welcome any and all feedback, especially from developers who have been using Rust for quite some time, leave a comment below or contact me on Twitter. With that out of the way, it is time to put your foil lined hat on and start storing the conspiracies in a database.",
      "url": "https://medium.com/@rippinrobr_66849/2-conspiracies-databases-and-diesel-rs-ac1d8d3499b3",
      "date_published": "2018-05-30T21:04:06.895+00:00",
      "author": {
        "name": "Rob Rowe",
        "url": "https://medium.com/@rippinrobr_66849"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "3f1b68cd-7c14-415e-bbe9-45db4342a95e",
      "title": "Get to know Rust",
      "content_text": "If you have ever written software, you have undoubtedly asked yourself, \"What language should I write this in?\" It's a valid question. Does your code need to be as fast as possible? Will it be running on the Web? Will the code be on the back end or the front? All languages have their niches, and Rust is no different.\n\nRust is a statically typed compiled language that fills the roles that most users use C or C++ for. Unlike C or C++, though, Rust also encroaches on territory that C# and the Java™ language have dominated for much of this century: Rust is a language that is memory safe and operating system agnostic, meaning that it can run on any computer. Essentially, you get all the speed and low-level benefits of a systems language without the pesky garbage collection of those latter languages I mentioned. Excited? Yeah, me, too. Welcome to Rust! ",
      "url": "https://www.ibm.com/developerworks/opensource/library/os-know-rust/index.html",
      "date_published": "2018-05-07T00:00:00+00:00",
      "author": {
        "name": "Dylan Hicks",
        "url": "https://www.linkedin.com/in/dylan-hicks-b4265396/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "4ae850d3-305a-4fb4-826d-853972364683",
      "title": "On learning Rust",
      "content_text": "But recently I decided to give Rust a go. And I must admit that I’m extremely surprised. Rust, like OCaml is a pretty low level language (it is a system programming language). After six years without seeing any pointers, I can’t say that I was happy. But the Rust compiler, by being extremely safe actually makes that easy.",
      "url": "https://medium.com/@AugustinLF/on-learning-rust-69ba956a63e3",
      "date_published": "2018-05-16T14:01:05.344+00:00",
      "author": {
        "name": "Augustin Le Fèvre",
        "url": "https://medium.com/@AugustinLF"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "91fb984c-4084-4b2c-84e5-ebda94169657",
      "title": "WASM+Rust Tutorial",
      "content_text": "A project used for a meetup talk about getting started with rust & wasm",
      "url": "https://freemasen.github.io/wasm_tutorial/",
      "date_published": "2018-05-03T07:30:00+10:00",
      "author": {
        "name": "Robert Masen",
        "url": "https://github.com/FreeMasen"
      },
      "tags": [
        "Getting Started",
        "Web and Network Services"
      ]
    },
    {
      "id": "d4c2f839-050c-4134-868d-eab325676917",
      "title": "An interactive guide to learning Rust!",
      "content_text": "Fix a series to broken Rust programs to gain a deeper understanding of Rust.",
      "url": "https://github.com/toidiu/learn-rust",
      "date_published": "2018-04-10T06:47:00+10:00",
      "author": {
        "name": "toidiu",
        "url": "https://github.com/toidiu"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "cf92e0a9-88ac-4fa8-9ecd-d61078868f26",
      "title": "A Gentle Introduction to Rust (book)",
      "content_text": "Introduction to the Rust language, standard library and ecosystem",
      "url": "http://stevedonovan.github.io/rust-gentle-intro/",
      "date_published": "2018-04-05T07:00:00+10:00",
      "author": {
        "name": "Steve J Donovan",
        "url": "https://github.com/stevedonovan"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "5e66cfa3-c153-40ab-8cad-cb8aaf01d178",
      "title": "Getting started with Rust: Enum on steroids!",
      "content_text": "Hello everyone! Today subject was hard to decide on. But as the previous one was pretty tedious, I decided to go a subject more easy to speak of. So, today we are going to talk about enum in Rust!",
      "url": "https://www.mathieu-nivoliez.com/posts/2018-04-01-getting-started-with-rust-enum-on-steroids.html",
      "date_published": "2018-04-01T00:00:00+00:00",
      "author": {
        "name": "Mathieu Nivoliez",
        "url": "https://www.mathieu-nivoliez.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "a15836bc-6eaf-46c9-8fe8-70bd2fada61e",
      "title": "The tower of hanoi in Rust",
      "content_text": "The tower of hanoi algorithm is practice for recursive function.",
      "url": "https://masahiko-ofgp-notebook.blogspot.com.au/2018/03/the-tower-of-hanoi-by-rust-lang.html?m=1",
      "date_published": "2018-03-25T13:23:00+11:00",
      "author": {
        "name": "masahiko",
        "url": "https://masahiko-ofgp-notebook.blogspot.com.au/?m=1"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "c5aa834d-c9d6-4e24-8abf-a9db4cb5cf29",
      "title": "Rust — Intro and Installation in Ubuntu",
      "content_text": "Rust is a new age programming language that tries to fight our bad practices in coding. It is a Systems Programming Language, which runs…",
      "url": "https://medium.com/aackam/rust-intro-and-installation-in-ubuntu-bd4720a64f31",
      "date_published": "2018-03-19T22:36:52.175+00:00",
      "author": {
        "name": "VIJAYAN N",
        "url": "https://medium.com/@vjn"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "9ecf3a00-a806-4914-a3e2-fd360f7199ed",
      "title": "Rust Tutorial",
      "content_text": "The aim of this tutorial is to take you to a place where you can read and write enough Rust to fully appreciate the excellent learning resources available online, in particular The Book. It’s an opportunity to try before you buy, and get enough feeling for the power of the language to want to go deeper.",
      "url": "https://slashtutorial.com/rust/",
      "date_published": "2018-03-12T16:23:55+00:00",
      "author": {
        "name": "Slash Tutorial",
        "url": "https://slashtutorial.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "64fe2d3c-c0cb-41a2-8faf-08d19e59c439",
      "title": "Get started with the Rust programming language",
      "content_text": "A recent Stack Overflow survey found that almost 80% of respondents loved using or wanted to develop with the Rust language. That's an incredible number! So, what's so good about Rust? This article explores the high points of this C-like language and illustrates why it should be next on your list of languages to learn.",
      "url": "https://www.ibm.com/developerworks/opensource/library/os-developers-know-rust/index.html?ca=drs",
      "date_published": "2018-03-08T00:00:00+00:00",
      "author": {
        "name": "M. Tim Jones",
        "url": "https://www.ibm.com/developerworks/opensource/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "bd7d2caa-818d-4950-9eca-72588b038bed",
      "title": "Getting started with Rust: Reference and Lifetime",
      "content_text": "Hello everyone! You were waiting for it, and now you are going to get it! Ladies and gentlemen, today we are going to talk about reference and lifetime!",
      "url": "https://www.mathieu-nivoliez.com/posts/2018-03-05-getting-started-with-rust-reference-and-lifetime.html",
      "date_published": "2018-03-05T00:00:00+00:00",
      "author": {
        "name": "Mathieu Nivoliez",
        "url": "https://www.mathieu-nivoliez.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "5b0beffe-60dc-4ce3-b137-738fb51fd570",
      "title": "Getting Rusty with Vim",
      "content_text": " After dabbing in Go and Crystal, I figured I'd give Rust a try. Of course I used Vim along the way. Here are some notes I compiled after my first session.",
      "url": "https://ddrscott.github.io/blog/2018/getting-rusty-with-vim/",
      "date_published": "2018-03-04T06:30:00-06:00",
      "author": {
        "name": "Scott Pierce",
        "url": "https://ddrscott.github.io/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "4c17c0f4-8148-4408-a54f-733e20c89189",
      "title": "Rust for Java Devs – Structs",
      "content_text": "Next up in Rust for Java Devs we have structs. They are used to hold data within a logical unit that can be passed to other functions or execute their own methods on the values that they store. Now this sounds very familiar… Java objects do the same thing. For example if you took a POJO (Plain Old Java Object) you also pass it to other methods or execute the object’s own methods. In this nature they are alike, but they do have their differences. In this post we will look into creating structs, retrieving their values, defining their own methods and how to execute them.",
      "url": "https://lankydanblog.com/2018/03/01/rust-for-java-devs-structs/",
      "date_published": "2018-03-01T20:03:54+00:00",
      "author": {
        "name": "Dan Newton",
        "url": "https://lankydanblog.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "e5f704af-b1ed-4757-b96d-80402ba3e601",
      "title": "Rust for Java Devs – Creating functions",
      "content_text": "In this post of Rust for Java Devs we will look at creating functions in Rust. Functions in Rust do not differ that much from Java methods but there are a few little differences. There is also the topic of Rust’s lifetimes compared to Java’s garbage collection that one could argue separates the two from each other a bit more, but for this post I will focus on the structure of writing a function in Rust. Due to the similarities between the two, I believe most Java developers will have no problem in figuring out what arguments a Rust function takes, what it outputs and where the output is returned from.",
      "url": "https://lankydanblog.com/2018/02/18/rust-for-java-devs-creating-functions/",
      "date_published": "2018-02-18T18:28:19+00:00",
      "author": {
        "name": "Dan Newton",
        "url": "https://lankydanblog.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "4abf1536-2c82-411a-be74-e85d2155af5a",
      "title": "Setting up Windows 10 for programming (in Rust)",
      "content_text": "Lately I’ve been working with Windows-specific APIs, so I needed to get a Windows dev environment. I’ve mostly used Linux for many years now, so for me programming on Windows feels very foreign. Getting to a point where I started being productive took a number of steps, so here they are, if only for me to find them next time.",
      "url": "https://exyr.org/2018/windows/",
      "date_published": "2018-01-31T00:00:00+00:00",
      "author": {
        "name": "Simon Sapin",
        "url": "https://exyr.org/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "49ad5651-12e0-4374-9586-d9a86291c165",
      "title": "Practical Rust: Installation & Hello World",
      "content_text": "Recently, a new language called Rust has come into the spotlight, aiming to be a ‘blazingly fast’ language meant for systems programming…",
      "url": "https://medium.com/@gallantmrgn/practical-rust-installation-hello-world-d1e52aac1f9",
      "date_published": "2018-02-02T18:08:04.292+00:00",
      "author": {
        "name": "Morgan A. Gallant",
        "url": "https://medium.com/@gallantmrgn"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "c0b3d7ad-673f-4eb9-aa54-45447d1eafb0",
      "title": "Rust Lifetimes for the Uninitialised",
      "content_text": "Lifetimes are a interesting subject: a lot of people seem to gain a day-to-day familiarity with them, without fully understanding what they are. Maybe, they are truly Rust's Monads. Let's talk about what they are, where you encounter them and then how to get competent with them.",
      "url": "http://asquera.de/blog/2018-01-29/rust-lifetimes-for-the-uninitialised/",
      "date_published": "2018-01-29T15:30:00+01:00",
      "author": {
        "name": "Florian Gilcher",
        "url": "http://asquera.de/blog"
      },
      "tags": [
        "Language",
        "Getting Started"
      ]
    },
    {
      "id": "b4def99b-cdec-46c6-9816-a6c85c999ae9",
      "title": "Beginner Bites: A taste of Rust, a safe, concurrent and practical language!",
      "content_text": "Experience a sampler of Rust. You’ll get set up, then solve the first Project Euler problem in Rust. This is a language you can’t miss.",
      "url": "https://hackernoon.com/a-taste-of-rust-6d8fc60e050",
      "date_published": "2018-02-04T11:01:00.900+00:00",
      "author": {
        "name": "Andrew Jakubowicz",
        "url": "https://hackernoon.com/@spyr1014"
      },
      "tags": [
        "Getting Started"
      ]
    }
  ]
}