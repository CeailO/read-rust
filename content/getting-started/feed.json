{
  "version": "https://jsonfeed.org/version/1",
  "title": "Read Rust - Getting Started",
  "home_page_url": "https://readrust.net/",
  "feed_url": "https://readrust.net/getting-started/feed.json",
  "description": "Getting Started posts on Read Rust",
  "author": {
    "name": "Wesley Moore",
    "url": "http://www.wezm.net/"
  },
  "items": [
    {
      "id": "5fd6f3d5-2732-4d86-9824-78928983ebdf",
      "title": "Implementing a job queue in Rust",
      "content_text": "I recently finished my first rust project - a command line utility called “what” that displays network utilization information. As a newcomer to rust, this project offered quite some challenges for me. This post is a write up of one of them, going into detail on the parts that I personally found most difficult to understand.\n\nIn this first post, I’d like to talk about implementing a job queue to resolve IPs into their hostnames by querying a remote DNS server.",
      "url": "https://www.poor.dev/posts/what-job-queue/",
      "date_published": "2019-10-30T00:00:00+00:00",
      "author": {
        "name": "Aram Drevekenin",
        "url": "https://www.poor.dev/"
      },
      "tags": [
        "Getting Started",
        "Language"
      ]
    },
    {
      "id": "26a18477-a394-46c8-afde-b096269eeb04",
      "title": "Playing with env in Rust",
      "content_text": "Environment variables plays a vital role in setting up a large scale project in real time environment. This blog explains env crate and env! macro in Rust.",
      "url": "https://blog.knoldus.com/playing-with-env-in-rust/amp/",
      "date_published": "2019-05-29T05:34:54+00:00",
      "author": {
        "name": "Mudit Chhabra",
        "url": "https://blog.knoldus.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "f625696c-a751-4e36-8ede-0cd24cf05534",
      "title": "A closer look at Ownership in Rust",
      "content_text": "In this article we'll take a closer look at Rust's Ownership model and how it manages memory.",
      "url": "https://blog.thoughtram.io/ownership-in-rust/",
      "date_published": "2019-10-28T00:00:00+00:00",
      "author": {
        "name": "Pascal Precht",
        "url": "https://blog.thoughtram.io/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "8df278c2-e4c1-434b-9dd4-ca1ad1207200",
      "title": "Getting Started with Rust by Building a Tiny Markdown Compiler",
      "content_text": "My name is Jesse, and this is an introductory Rust tutorial for developers who like learning by doing. The purpose of this tutorial is to develop intuition about toolbuilding in Rust–specifically, to learn how to think and build in Rust. Our goal is to produce a very basic command line compiler that will turn a basic Markdown document containing headings and paragraphs into an html file. To do this, we will start from scratch by building a simple “Hello, World!” executable. Then, over the course of six chapters, iterate and expand until finally we can compile a very simple Markdown file into valid HTML.",
      "url": "https://jesselawson.org/rust/getting-started-with-rust-by-building-a-tiny-markdown-compiler/",
      "date_published": "2019-10-21T00:00:00+00:00",
      "author": {
        "name": "Jesse Lawson",
        "url": "https://jesselawson.org/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "44a70495-156b-4de1-8eff-0ef9e334368c",
      "title": "Rust for JavaScript peeps",
      "content_text": "People seem to like Rust a lot! But if you're coming from JavaScript, not everything may make a lot of sense at first. But no problem; this guide is for you! Because I think Rust and JavaScript are really similar in many ways; to the point that if you know JS it's mostly a matter of getting the hang of some of the nuances before you can more or less get the hang of Rust.",
      "url": "https://github.com/yoshuawuyts/rust-for-js-people",
      "date_published": "2019-10-17T07:58:16+00:00",
      "author": {
        "name": "Yoshua Wuyts",
        "url": "https://blog.yoshuawuyts.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "1154694c-7ad8-4ea5-bf37-1c1e4238dc46",
      "title": "An intern's experience with Rust",
      "content_text": "Over the course of my internship at the Microsoft Security Response Center (MSRC), I worked on the safe systems programming languages (SSPL) team to promote safer languages for systems programming where runtime overhead is important, as outlined in this blog. My job was to port a security critical network processing agent into Rust to eliminate …  An intern’s experience with Rust Read More »",
      "url": "https://msrc-blog.microsoft.com/2019/10/16/an-interns-experience-with-rust/",
      "date_published": "2019-10-16T21:26:29+00:00",
      "author": {
        "name": "Alexander Clarke",
        "url": "https://msrc-blog.microsoft.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "48e29784-dd63-4e7b-8586-bad8bc58be5b",
      "title": "WebAssembly — Is It As Scary As It Sounds?",
      "content_text": "Learn WebAssembly while building a Wasm-based QR decoder for the browser.",
      "url": "https://medium.com/better-programming/webassembly-is-it-as-scary-as-it-sounds-b0c38fb2d9c8",
      "date_published": "2019-07-18T22:17:48.485+00:00",
      "author": {
        "name": "Jacky Efendi",
        "url": "https://medium.com/@jackyef"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "b741f301-dd98-4d7c-a82c-486b43242507",
      "title": "Learning Rust at Hacktoberfest in 8 hours",
      "content_text": "This year’s #hacktoberfest became a great opportunity for me to start learning Rust. In this article, I will share a couple of tricks about how to start mastering this relatively new technology.",
      "url": "https://medium.com/@knidarkness/learning-rust-at-hacktoberfest-in-8-hours-7b788883c665",
      "date_published": "2019-10-15T07:42:17.696+00:00",
      "author": {
        "name": "Sergey Dubovyk",
        "url": "https://medium.com/@knidarkness"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "e3c786d5-955b-422a-b426-fcc3639d92c3",
      "title": "Roguelike Tutorial: Up-to-date and Literate",
      "content_text": "This tutorial will show you how to write a roguelike in the Rust programming language and the libtcod library. In this update the Asciidoctor documents were changed to allow generating the final source files at the end of each chapter directly from the tutorial text.",
      "url": "https://aimlesslygoingforward.com/blog/2019/10/02/roguelike-tutorial-up-to-date-and-literate/",
      "date_published": "2019-10-02T00:00:00+00:00",
      "author": {
        "name": "Tomas Sedovic",
        "url": "https://aimlesslygoingforward.com/blog/"
      },
      "tags": [
        "Getting Started",
        "Games and Graphics"
      ]
    },
    {
      "id": "e21ad158-7d23-47c3-82a4-0f76f651c6d9",
      "title": "Rustacean Terminal Chat App in Rust",
      "content_text": "Build a basic chat app with the Rust Programming Language.",
      "url": "https://www.pubnub.com/blog/build-realtime-rust-chat-app-cursive-tui/",
      "date_published": "2019-08-09T17:31:52+00:00",
      "author": {
        "name": "Samba Diallo",
        "url": "https://www.pubnub.com/blog/author/samba_diallo/"
      },
      "tags": [
        "Web and Network Services",
        "Getting Started"
      ]
    },
    {
      "id": "16a7b9b5-ad78-4644-93f1-fb81e3f6419b",
      "title": "Learning Rust: Working with threads",
      "content_text": "I used to live in the single-thread JavaScript happy-land where the closest thing to working with threads I ever did was communicating between a website and a Chrome extension. So when people talked about the difficulties of parallelism and concurrency, I never truly got what the fuss was about.\n\nAs you may have read before, I started learning Rust a few weeks ago, re-writing a text-based game I previously made with Vue. It's a survival game in which you must gather and craft items to eat and drink. It has no winning condition other than trying to survive as many days as possible. I managed to get most of the game features working, but there was an annoying bug: if the user left the game idle for hours, it didn't check for the stats until the user interacted again. You could live for hundreds of days without doing nothing!\n\nI knew this could be solved with threads, so I finally gathered the courage and read the chapter Fearless Concurrency of The Rust Programming Language.",
      "url": "https://www.codegram.com/blog/learning-rust-threads/",
      "date_published": "2019-08-12T00:00:00+00:00",
      "author": {
        "name": "Núria Soriano",
        "url": "https://www.codegram.com/blog/author/nuria-soriano"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "a4736472-659a-4d2a-9dc4-d4d12d342963",
      "title": "Understanding Rust Through AVL Trees",
      "content_text": "From<Elixir>, Into<Rust>. I loved learning the Elixir language and how its pragmatic supervision trees and process model taught me the value fault tolerance as a quality of code than of infrastructure. Having safety and failure recovery as an idiomatic culture and mindset of the language made me a better thinker and developer. As a personal preference then in selecting new languages to learn, I look for potentially new perspectives and insights that it ascribes to its pilgrims. In general, a good learning curve is a good indicator since it has much to teach.",
      "url": "https://francismurillo.github.io/2019-07-31-Understanding-Rust-Through-AVL-Trees/",
      "date_published": "2019-07-31T00:00:00+00:00",
      "author": {
        "name": "Francis Murillo",
        "url": "https://francismurillo.github.io/"
      },
      "tags": [
        "Getting Started",
        "Computer Science"
      ]
    },
    {
      "id": "c4f23f51-7f72-4671-aec3-de6849639309",
      "title": "A little Rust program for the C major scale",
      "content_text": "Well I am a professional programmer for over a decade now, so my brain is trained to remember algorithmic thinking. But it's not trained to retain music theory. Which leads me to my beginning life-hack of music theory .... write a music theory shell application in rust to help me understanding the underlying mathematical structures by implementing them. I will try to make this an ongoing regular exercise to combine of my two currently favorite things: Rust and Guitar playing / Music.",
      "url": "https://chilimatic.hashnode.dev/a-little-rust-program-for-the-c-major-scale-cjyhc96hv001kvcs1heos8grg",
      "date_published": "2019-07-24T14:23:00+00:00",
      "author": {
        "name": "j",
        "url": "https://chilimatic.hashnode.dev/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "1a249517-dab9-4195-abad-c76c79fd0560",
      "title": "Rust vs GUI",
      "content_text": "Implications of Rust's borrow checking and memory ownership on GUI development (simple case)",
      "url": "https://turbomack.github.io/posts/2019-07-28-rust-vs-gui.html",
      "date_published": "2019-07-28T00:00:00+00:00",
      "author": {
        "name": "Marek Fajkus",
        "url": "https://turbomack.github.io/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "1f02eefe-da84-472d-8df4-039766538e7f",
      "title": "Baseball Coding with Rust – Part 2",
      "content_text": "In Part 1, we introduced Rust and built a little program that allowed us to get all the GameDay links for a particular day. Today, we’ll dive right into code and begin the process of building out a complete game from the xml files. As much as possible, I’ll try to explain important concepts along the way as we build out the application. My goal is to deliver a crash course into baseball-centric programming in Rust, complete with code, theory and practical use, without getting too much into the weeds.",
      "url": "https://tht.fangraphs.com/baseball-coding-with-rust-part-2/",
      "date_published": "2019-07-24T00:00:00+00:00",
      "author": {
        "name": "Eli Ben-Porat",
        "url": "https://tht.fangraphs.com/author/ebpbaseball/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "c8522e50-6845-428d-b2c4-84b9dcfddaa4",
      "title": "Here be (owned) books: Rust ownership explained with books",
      "content_text": "One of the biggest Rust’s pros is unique ownership system. Unfortunately, it is also one of the hardest thing to learn. In this article I will try to explain it the same way I had learnt it and how I introduce people to one.",
      "url": "https://hauleth.dev/post/eli5-ownership/",
      "date_published": "2019-07-14T17:38:48+01:00",
      "author": {
        "name": "Łukasz Jan Niemier",
        "url": "https://hauleth.dev/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "48855ece-4f3a-44aa-80a1-b86a03cc9538",
      "title": "Baseball Coding with Rust – Intro",
      "content_text": "From time to time, major league teams will post job offers on FanGraphs. Most of these postings, if not all of them, ask for a level of proficiency in Python or R. While these languages have built up tremendous ecosystems, especially for data science, they are limited in the amount of data they can handle.\n\nThis is not a flaw in either language, rather a design choice. Without getting into the weeds too much about language theory, each language plants itself somewhere on the performance/ease-of-use spectrum. Nothing in today’s piece should be construed as a critique of Python or R. Quite the contrary. Python and R are the bedrock languages of the data science worlds.\n\nToday, I would like to introduce you to Rust, a modern systems programming language that aims to be, in their words, “A language empowering everyone to build reliable and efficient software.” I can personally attest to this being the case.",
      "url": "https://tht.fangraphs.com/baseball-coding-with-rust-intro/",
      "date_published": "2019-07-23T10:00:52+00:00",
      "author": {
        "name": "Eli Ben-Porat",
        "url": "https://tht.fangraphs.com/author/ebpbaseball/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "5d130478-b1c5-46b7-af4b-9e217dd138b2",
      "title": "Rust Questions from Beginners, Including Me",
      "content_text": "Information overload and I’m still trying to find a bigger project I can work on that interests me. I have the Interpreter to work on still, and that will take some serious work! But I’m also thinking of going back to small systems of my programming past and playing with writing them in Rust. In the meantime, I thought I’d sneak around the Rust #beginners channel on Discord and give everyone a peak at some questions (and hopefully some answers) that beginners are asking about their early Rust code.",
      "url": "https://rust.graystorm.com/2019/07/11/rust-questions-from-beginners-including-me/",
      "date_published": "2019-07-11T23:48:17+00:00",
      "author": {
        "name": "Jeff Culverhouse",
        "url": "https://rust.graystorm.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "7a2ae69b-3b31-45da-855b-592a86d96a6b",
      "title": "CHIP-8 Emulator Rust Port",
      "content_text": "I thought it would be a nice start to just take existing code and try to see how well it would translate from C++. I simply took my previous CHIP-8 emu and started to chip at it with the help of the docs. If you want to dive right in, here’s the code on GitHub. Anyway, it was my first go at Rust so go easy on me! =)",
      "url": "https://ryp.github.io/emu/rust/chip8/2019/07/09/chip8-emulator-rust/",
      "date_published": "2019-07-09T15:00:00+00:00",
      "author": {
        "name": "Ryp",
        "url": "https://ryp.github.io/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "c03bd61e-3c2d-4e4d-a081-ffa0e3b641ed",
      "title": "Getting Started with Rust: Working with Files and Doing File I/O",
      "content_text": "This article demonstrates how to perform basic file and file I/O operations in Rust, and also introduces Rust's ownership concept and the Cargo tool. If you are seeing Rust code for the first time, this article should provide a pretty good idea of how Rust deals with files and file I/O, and if you've used Rust before, you still will appreciate the code examples in this article. ",
      "url": "https://www.linuxjournal.com/content/getting-started-rust-working-files-and-doing-file-io",
      "date_published": "2019-06-20T00:00:00+00:00",
      "author": {
        "name": "Mihalis Tsoukalos",
        "url": "https://www.linuxjournal.com/users/mihalis-tsoukalos"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "0f371197-7406-4f9f-8460-b8a9e951ec27",
      "title": "Rust for OOP - Enums & Pattern Matching - Part 2",
      "content_text": "We will continue the previous post with two complementary examples. Both will demonstrate the capability of enums to push various language constructs and states into the type system. As an example for it, imagine we could create a type which represents an if statement, and then hand over instances of it around our program. Enums tends to work better than using the underlying concepts for various reason, starting from the complexity of the borrow checkers and lifetimes, through the powerful type system in Rust. And not less important, allowing you to code common patterns as functions, in a way otherwise wouldn’t be available to you. We will see all of this today. Later in the series, we will revisit those examples, and we will demonstrate how well they can compose with other code we can write.",
      "url": "https://oribenshir.github.io/afternoon_rusting//blog/enum-and-pattern-matching-part-2",
      "date_published": "2019-06-22T00:00:00+00:00",
      "author": {
        "name": "Ori Ben-Shir",
        "url": "https://oribenshir.github.io/afternoon_rusting/index.html"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "e7bf2504-b854-4a1d-b946-38075e83e97a",
      "title": "Rust for OOP - Enums & Pattern Matching - Part 1",
      "content_text": "We continue our series “Rust for OOP” with Enums & Pattern Matching, one of my preferred features of Rust. I didn’t hear about it before getting into the language, yet immediately fell in love with it. Enums are simple, expressive, reducing code bloat, enable encapsulation, easy to understand, and reason with. It also enables many useful design pattern. ",
      "url": "https://oribenshir.github.io/afternoon_rusting/blog/enum-and-pattern-matching-part-1",
      "date_published": "2019-06-17T00:00:00+00:00",
      "author": {
        "name": "Ori Ben-Shir",
        "url": "https://oribenshir.github.io/afternoon_rusting/index.html"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "56e998a6-89d0-4a99-b11c-a541d35dc9a1",
      "title": "Debugging with and without parameter in Rust",
      "content_text": "Rust 1.32.0 introduced a macro dbg! for quick and dirty debugging with which you can inspect the value of a given expression. Rust 1.35.0 announced an improvement in this macro to make it more usable for Rustaceans. Now you can trace any fine and line number using this macro without passing any parameter.",
      "url": "https://blog.knoldus.com/debugging-with-and-without-parameter-in-rust/",
      "date_published": "2019-05-30T04:33:10+00:00",
      "author": {
        "name": "Ayush Mishra",
        "url": "https://blog.knoldus.com/author/ayushmishra2005/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "f9c3c42b-87f8-4edf-820b-aad48a409482",
      "title": "essential rust tools",
      "content_text": "Rust has a “community of developers empowered by their tools and each other” (via Katharina Fey in “An async story“). The Rust community helps each other through effective narrative documentation and attention to error messages, and the robust tooling around Rust drives momentum, overcoming some of the natural hurdles when diving into a new language.\n\nHere’s my list of essential rust tools (so far).",
      "url": "https://www.ultrasaurus.com/2019/06/essential-rust-tools/",
      "date_published": "2019-06-03T14:19:23+00:00",
      "author": {
        "name": "Sarah Allen",
        "url": "https://www.ultrasaurus.com/code/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "ecccd5a6-53e0-4e7a-9ece-f02450f3eb2f",
      "title": "Rebuffing the Attack of the Clones",
      "content_text": "I left a comment on HN about how I teach new users not to clone, and someone asked me if I’d written more, so here we go!\n\nWhen new users are writing Rust code, it’s reasonably common to “fight with the borrow checker”. I personally find this to be quite a misnomer, as it is not a fight so much as a misunderstanding of the nature of Rust’s semantics. In an attempt to make the errors go away, users will understandably take the path of least resistance, according to the docs they’ve got. They dutifully read up, and eventually land on the clone method. This makes the errors go away! Great! Except if you were my newbie, in the code review I’d tell you clone is banned unless you can tell me why you need it.",
      "url": "https://thenewwazoo.github.io/clone.html",
      "date_published": "2019-05-21T00:00:00+00:00",
      "author": {
        "name": "Brandon Matthews",
        "url": "https://thenewwazoo.github.io/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "d6fe8e42-6394-4db9-858e-e572740e0915",
      "title": "Scala Developer Journey into Rust - Part 5: Domain Models",
      "content_text": "Rust is one of the major programming languages that’s been getting popular in recent years. It has many advanced high level language features like Scala. This made me interested to learn Rust. So in this next series of blogs I will share my experience with Rust from a Scala developer point of view. I would like to explore how these two language approach things. I would like to explore the similarities and their differences.\n\nThis is fifth post in the series. In this post, I will be talking about domain models.",
      "url": "http://blog.madhukaraphatak.com/rust-scala-part-5/",
      "date_published": "2019-05-19T00:00:00+00:00",
      "author": {
        "name": "Madhukara Phatak",
        "url": "http://madhukaraphatak.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "e8a7784f-8334-4e7a-b912-a6c3cfbb5522",
      "title": "Rust for OOP - Project Management",
      "content_text": "The basics of Rust project layout are simple, and common to many other languages. You have the artifacts of your project. The basics artifacts are executables(binaries) and libraries. You use binaries whenever you want to produce a runnable application. For reusable code, use libraries. Nothing remarkable in Rust. In my projects, I prefer to write almost everything inside libraries, as one can never know when he will reuse a piece of code. Usually, I want my executable to be a thin wrapper around my libraries. Rust has a uniform name for a single library or binary: crate. Meaning crate is either an executable or a library. Creating either a library or a binary crate is straightforward.",
      "url": "https://oribenshir.github.io/afternoon_rusting/blog/project-management",
      "date_published": "2019-05-18T00:00:00+00:00",
      "author": {
        "name": "Ori Ben-Shir",
        "url": "https://oribenshir.github.io/afternoon_rusting/index.html"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "1c9745cb-ea4b-4d95-81b4-c51c4a217602",
      "title": "Image processing experiments (1)",
      "content_text": "I implemented an image processing experiment in Rust and was positively surprised.",
      "url": "https://toswak.net/blog/image-processing-experiments-1-rust/",
      "date_published": "2019-05-18T00:00:00+00:00",
      "author": {
        "name": "Tobias Watzek",
        "url": "https://toswak.net/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "88afb6a5-3414-407a-9ecc-4e0179e1295f",
      "title": "Rust for OOP - Series Introduction",
      "content_text": "While working on my simple chat program, I’ve identified some aspects of Rust, which mastering them will probably turn my code to be more idiomatic. These aspects will turn into a blog series. I’m far from mastering those aspects of Rust, but I’ll share what I’ve learned so far. And how I’ve used it in my chat project.",
      "url": "https://oribenshir.github.io/afternoon_rusting/blog/rust-for-oop",
      "date_published": "2019-05-15T00:00:00+00:00",
      "author": {
        "name": "Ori Ben-Shir",
        "url": "https://oribenshir.github.io/afternoon_rusting/index.html"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "b5691501-490d-4eef-a8cc-2728e42774d2",
      "title": "Learn Rust: Parsing command line arguments with StructOpt",
      "content_text": "A beginners guide to using StructOpt for parsing command line arguments.",
      "url": "https://www.tenderisthebyte.com/blog/2019/05/08/parsing-cli-args-with-structopt/",
      "date_published": "2019-05-08T00:00:00+00:00",
      "author": {
        "name": "Ryan Moore",
        "url": "https://www.tenderisthebyte.com/"
      },
      "tags": [
        "Crates",
        "Getting Started"
      ]
    },
    {
      "id": "8914cc92-515c-4902-ae43-b247924a0191",
      "title": "Learning Rust while solving Advent of Code puzzles (a post mortem)",
      "content_text": "I wanted to learn Rust for some time, but wasn't motivated enough. Finally, there was an opportunity: Every year in December, there is a coding challenge called Advent of Code. So I decided I will use edition 2018 as a motivator to learn new programming language.",
      "url": "https://andrzej.pragacz.pl/blog/2019/05/learning-rust-while-solving-advent-of-code/",
      "date_published": "2019-05-03T00:00:00+00:00",
      "author": {
        "name": "Andrzej Pragacz",
        "url": "https://andrzej.pragacz.pl/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "7ee0306d-50cc-4b2a-8573-ff0c59c02b3f",
      "title": "Rust for Frontend Developers: Modules",
      "content_text": "Not that long ago I decided to start learning Rust. While it has a lot of useful resources online and a very friendly community there's still things that are weird to me. That's because Rust is a very different mental model than the frontend mental model I'm used to.\n\nThat means that things that are obvious to a lot of people are not obvious to me. So I'll try to document some of these things from the perspective of a frontend developer. This time on using modules.",
      "url": "https://www.kennethlarsen.org/rust-for-frontend-developers-modules/",
      "date_published": "2019-04-30T09:57:24+00:00",
      "author": {
        "name": "Kenneth Larsen",
        "url": "https://www.kennethlarsen.org/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "95e18b0c-0a6c-42dd-80c8-cb5dbbe906e3",
      "title": "Modules in Rust Programming Language",
      "content_text": "Modules are one of the better ways to organize your code and reuse it wherever it is necessary. Rust module system is completely different from what I've used in Languages like JavaScript, GoLang and Python. When I started to learn this pattern, I didn't really like it but, after using them for sometime, now I really like the way it works.",
      "url": "https://dev.to/saiumesh/modules-in-rust-programming-language-495m",
      "date_published": "2019-04-25T04:24:00+00:00",
      "author": {
        "name": "sai umesh",
        "url": "https://dev.to/saiumesh"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "88bf7467-0164-4b01-a0fc-1b33ffe55f45",
      "title": "Non-lexical lifetimes in Rust",
      "content_text": "This blog is for new Rustacean, who's just started exploring Rust. Demonstrating a scenario that is possible because of the Non-lexical lifetimes feature. This feature was introduced in Rust 2018 edition. Earlier than, in Rust 2015, it was not possible.",
      "url": "https://blog.knoldus.com/non-lexical-lifetimes-in-rust/",
      "date_published": "2019-04-18T06:39:28+00:00",
      "author": {
        "name": "Ayush Mishra",
        "url": "https://blog.knoldus.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "9a01af1b-fcfa-464e-817f-9a6ea54cf9b7",
      "title": "Building an ASCII image renderer",
      "content_text": "Although I’m a beginner in Rust, I would like to share the process behind a toy application that I developed recently. It’s a very simple command line tool that prints an image file using ASCII symbols directly to your terminal. ",
      "url": "https://medium.com/carwow-product-engineering/getting-a-bit-rusty-1285c49e520e",
      "date_published": "2019-04-18T12:54:32.732+00:00",
      "author": {
        "name": "Stepan Khodzhaian",
        "url": "https://medium.com/@mightykho.dev"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "2c21dd65-6a7c-4ce6-97c6-f7a383c331bf",
      "title": "Hangman Game Development Tutorial",
      "content_text": "This tutorial was part of a whorkshop which took place at the Rust Community Stuttgart on April, 17th 2019. We will develop a Hangman text based console game within this tutorial.",
      "url": "https://github.com/rusticus-io/hangman",
      "date_published": "2019-04-17T00:00:00+00:00",
      "author": {
        "name": "Romeo Disca",
        "url": "https://github.com/thinkrapido"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "3d03c657-cc87-4a01-9547-a583e6ec355f",
      "title": "Rust & The Machine",
      "content_text": "The intended audience is newly started Rust users, especially if you have been using mostly garbage collection to manage memory recently. The explanation is very machine-oriented, but I promise this way is faster than fighting the answers out of the compiler case-by-case. (Elaboration on this and other choices is at the end.)\n\nRust’s memory management is slick enough to barely notice you’re doing any. It can make explaining compiler errors very opaque. If you are already familiar with or willing to learn bare-minimum microarchitecture, just the basics of function execution and memory usage, this article is an efficient crash course for finding the low resistance paths to writing natural Rust.",
      "url": "https://medium.com/@orbitalK/why-the-machine-b9803a77fa29",
      "date_published": "2019-03-27T06:52:47.011+00:00",
      "author": {
        "name": "Prolific K",
        "url": "https://medium.com/@orbitalK"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "11088ce0-5efd-4232-8541-dcb76a8ed72e",
      "title": "Rust for Python Developers: Ownership and Borrowing",
      "content_text": "Following the previous post, here I am going to introduce the key concepts of Rust — Ownership and Borrowing.",
      "url": "https://medium.com/@rajasekar3eg/rust-for-python-developers-ownership-and-borrowing-cd85fc10cae4",
      "date_published": "2019-04-09T21:14:25.078+00:00",
      "author": {
        "name": "Raja Sekar",
        "url": "https://medium.com/@rajasekar3eg"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "881b9dbf-f50a-4a3d-9992-de8c093250bf",
      "title": "Explained: How does async work in Rust?",
      "content_text": "This article will outline an overview of the why and how async exists in Rust.",
      "url": "https://dev.to/gruberb/explained-how-does-async-work-in-rust-46f8",
      "date_published": "2019-04-02T00:00:00+00:00",
      "author": {
        "name": "Bastian Gruber",
        "url": "https://dev.to/gruberb"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "02cf2c55-f306-4c76-a340-15148b8b1886",
      "title": "Making a Case: Rust for Python developers",
      "content_text": "Python developers encompass a huge variety of developers. I am going to target use cases for a particular set of python developers: Machine Learning developers. But for others too, it might prove to be useful.",
      "url": "https://medium.com/@rajasekar3eg/making-a-case-rust-for-python-developers-1a114e2d89f4",
      "date_published": "2019-03-10T08:58:53.078+00:00",
      "author": {
        "name": "Raja Sekar",
        "url": "https://medium.com/@rajasekar3eg"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "f59796ce-77bb-4c3e-b11a-161df3bde835",
      "title": "Your first CLI tool with Rust",
      "content_text": "We will go through on how we can build command line tools with Rust, and maybe have fun along the way.",
      "url": "https://www.demainilpleut.fr/your-first-cli-tool-with-rust/",
      "date_published": "2019-03-22T00:00:00+00:00",
      "author": {
        "name": "Jérémie Veillet",
        "url": "https://www.demainilpleut.fr/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "86c50475-46ad-47b1-83b7-a3d63fecbb4f",
      "title": "Five Super Helpful Rust Things That Nobody Told You About",
      "content_text": "Pretty-print debug, unimplemented!, ”..” struct literal operator, Pattern match guards, and Padding format operator.",
      "url": "https://saghm.github.io/five-rust-things/",
      "date_published": "2019-03-30T09:19:00+00:00",
      "author": {
        "name": "Saghm Rossi",
        "url": "https://github.com/saghm"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "5ee0634e-47e9-4354-982f-fdbfdd60a3b1",
      "title": "Rust Basics: the Add Trait",
      "content_text": "In my journey for better understanding of anything I tend to always return to the basics.\nTo often we base our assumptions on blind 'guess-timations' where we don't understand why something is actually happening but we observed that certain patterns ...",
      "url": "https://chilimatic.hashnode.dev/rust-basics-the-add-trait-cjtoke4yh002t8hs1c61p82mz",
      "date_published": "2019-03-25T16:27:00+00:00",
      "author": {
        "name": "j",
        "url": "https://chilimatic.hashnode.dev/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "3755147e-f87f-4bc8-ac54-2a75b8f55f11",
      "title": "Learning Rust in 2019",
      "content_text": "I spent the month of January playing with Rust in my free time. In this article I'm going to share some quick notes on some of the mistakes I made while learning, the resources I used to get unblocked, and what I took away from the experience. My hope is that I can save other Rust newcomers a bit of time by documenting some of the things that I banged my head into. Now, it's worth noting that I'm still a Rust beginner, so if I got something wrong please let me know so that I can update it.",
      "url": "https://www.ragona.com/posts/learning_rust_2019",
      "date_published": "2019-01-31T00:00:00+00:00",
      "author": {
        "name": "Ryan Ragona",
        "url": "https://ragona.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "dad7fd3a-4891-4ddc-bf77-81668ffd5ea7",
      "title": "Rust: The Hard Parts - Part One: References and borrowing",
      "content_text": "Rust has a perception of being a very difficult language to learn. I had a similar experience, but just as I was told, there is a point where things start to get a lot easier. This post aims to describe the hard parts that I had to get through in order to start being productive with Rust in the belief that this may help others get over the hill to that sweet spot of infinite bliss and productivity. In this post, I’m going to cover references and borrowing.",
      "url": "https://naftuli.wtf/2019/03/20/rust-the-hard-parts/",
      "date_published": "2019-03-20T00:00:00+00:00",
      "author": {
        "name": "Naftuli Kay",
        "url": "https://naftuli.wtf/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "58a0a3ec-5b93-4e53-bcd0-d8df56d02848",
      "title": "Intro to web programming in Rust for NodeJS developers",
      "content_text": "Rust is different. You can pick up Python or Ruby over the weekend, create a first CRUD application and be happy with the results. With Rust… with Rust you will struggle to pass a String to a different method, change and return it. You then will order the Rust book, see its size, *sigh* and get started. After a few weeks fighting through the book after work, you give up and wait until someone else creates an easy-to-follow tutorial. Here is your “easy” tutorial.",
      "url": "https://medium.com/@gruberbastian/intro-to-web-programming-in-rust-for-nodejs-developers-1a9c048c4de1",
      "date_published": "2019-03-10T10:53:02.197+00:00",
      "author": {
        "name": "Bastian Gruber",
        "url": "https://medium.com/@gruberbastian"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "b72bfa37-94f9-4758-9028-225ce6f93877",
      "title": "Safe Way to access private fields in Rust",
      "content_text": "Do you want your fields to be private but got stuck in accessing them from other module. Then this blog let you know the ways to access the private fields as well as which one is safer way.",
      "url": "https://blog.knoldus.com/safe-way-to-access-private-fields-in-rust/",
      "date_published": "2019-03-04T06:04:58+00:00",
      "author": {
        "name": "Amita Yadav",
        "url": "https://blog.knoldus.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "a40e4318-64e5-4929-800f-4308c242b49c",
      "title": "You can live without Exceptions, if you are using Rust",
      "content_text": "If you are coming from Java background, where you have used Exception Handling extensively and you have started working on new language like Rust, which doesn’t support Exception Handling then you will be forced to think that does such kind of world really exists?",
      "url": "https://blog.knoldus.com/you-can-live-without-exceptions-if-you-are-using-rust/",
      "date_published": "2019-02-18T08:18:34+00:00",
      "author": {
        "name": "Ayush Mishra",
        "url": "https://blog.knoldus.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "12b9edfa-c917-436a-b001-76305b65eb0d",
      "title": "Working with Command Line Arguments in Rust",
      "content_text": "Command Line Arguments are used to control program from outside instead of hard-coding those values inside the code and supplied to program when it is invoked. In this blog, I’ll demystify you how to use Command Line Arguments in the Rust Programming Language.",
      "url": "https://blog.knoldus.com/working-with-command-line-arguments-in-rust/",
      "date_published": "2019-02-26T07:05:40+00:00",
      "author": {
        "name": "Pawan Bisht",
        "url": "https://blog.knoldus.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "115896de-7fb5-4c2e-b969-1c63550669e1",
      "title": "Learning Rust in 2019",
      "content_text": "If you have made up your mind to learn this modern programming language in 2019, this is a small attempt for new learners to have an unofficial learning path for getting to know and mastering Rust. I am still learning Rust and I will update post as and when required. This is iteration 1.",
      "url": "https://medium.com/rustadventures/learning-rust-in-2019-768ac560ba0",
      "date_published": "2019-01-18T04:41:29.876+00:00",
      "author": {
        "name": "Sumit Agrawal",
        "url": "https://medium.com/@arustacean"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "08743d28-0fe1-42f6-ac4a-50f3698891a0",
      "title": "Structure your data in Rust",
      "content_text": "Structuring of data in the correct way is very important. In java and C++, we use Class & Object. In C, we use structures, unions, and enums. We know that Rust adopts some features of functional programming and OOPs. Class and object is the main weapon of OOPs but how does Rust provide that functionality?",
      "url": "https://blog.knoldus.com/structure-your-data-in-rust/",
      "date_published": "2019-02-11T08:44:09+00:00",
      "author": {
        "name": "Amita Yadav",
        "url": "https://blog.knoldus.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "fb473ea5-9d84-4c2d-9926-282c55dcbf18",
      "title": "My experience with Rust",
      "content_text": "I started learning Rust in 2018. I completed my work in an open source project and was thinking about learning a new programming language. My motive was to learn a language that allows you to control the lower level of a high-level programming language. I considered learning Golang, but, in most of the online articles I learned that Rust (being a system programming language) gives you more control than Go, however, the learning curve is far steeper than Go. I had no worries about deadlines or time, therefore I chose Rust.",
      "url": "http://subhojit777.in/rust-language-experience/",
      "date_published": "2019-02-20T00:00:00+00:00",
      "author": {
        "name": "Subhojit Paul",
        "url": "http://subhojit777.in/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "e87f2464-ee95-4e9a-8d8c-4ccbba6b165c",
      "title": "Reflections on Learning Rust By Building Punchtop",
      "content_text": "To learn Rust, I implemented an audio game. There were some things I liked and some things I didn't. Some things were easy and some were hard. And there were plenty of libraries that were a joy to use.",
      "url": "https://hyperbo.la/w/reflections-on-learning-rust/",
      "date_published": "2019-01-27T00:00:00+00:00",
      "author": {
        "name": "Ryan Lopopolo",
        "url": "https://hyperbo.la/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "9700147a-735e-4903-b9fb-f91d6de54fe0",
      "title": "A brief introduction to Rust",
      "content_text": "I heard of Rust back in 2015 at a meetup. I have since spent time with Rust on and off. In 2018, I had more time to explore Rust. Thinking of using blogging as a learning tool while going further down the rabbit hole of Rust, I setup this blog. In this post, I would like to briefly walk through some important features of the language.",
      "url": "https://odetorust.com/a-brief-introduction-to-rust/",
      "date_published": "2019-02-14T20:25:00+00:00",
      "author": {
        "name": "Nyi Nyi Than",
        "url": "https://odetorust.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "e1fdb8ec-e1f8-4718-ba5d-bb3bdf897506",
      "title": "Rust for Node developers",
      "content_text": "An introduction to the Rust programming language for Node developers.",
      "url": "https://github.com/Mercateo/rust-for-node-developers",
      "date_published": "2019-01-31T23:59:00+00:00",
      "author": {
        "name": "Donald Pipowitch",
        "url": "https://github.com/Mercateo"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "4f4e3ed0-1852-4954-9cde-1d74c7e54b6f",
      "title": "Learning the Rust Programming Language",
      "content_text": "Rust has been on my radar for some time and I aspire to become proficient with the Rust Programming Language in 2019. Initially, my interest in Rust was sparked by the memory ownership model. With WASM support going mainstream I thought I’d give Rust a deeper look and have enjoyed my experience so far. This post is a living post that will continue to be revised and appended as I learn more about Rust.",
      "url": "https://www.aarongreenlee.com/blog/beginning-to-learn-rust-programming-language-rustlang/",
      "date_published": "2019-01-21T00:00:00+00:00",
      "author": {
        "name": "Aaron Greenlee",
        "url": "https://www.aarongreenlee.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "f941f6bf-eaf1-428a-a5d0-f8e35d504a3a",
      "title": "Supernova: rustfmt",
      "content_text": "I previously wrote about Supernova, and my experience contributing to a project in a language I had never used before. Although my PR is still WIP status (I need to find time to get a solid grasp on Date/Time stuff in Rust, specifically using the chrono crate), I picked up some smaller issues in the interim to stay involved.\n\nMy most recent PR’s involved working off of a previous PR which introduced code linting with clippy, and taking it one step further by introducing rustfmt to help ensure consistent coding style in our CI pipeline.",
      "url": "https://medium.com/@chayadanz/supernova-rustfmt-5c3d0c56831c",
      "date_published": "2019-01-10T04:22:26.772+00:00",
      "author": {
        "name": "Chaya Danzinger",
        "url": "https://medium.com/@chayadanz"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "069e9371-d000-454f-b73d-0b082a92988b",
      "title": "How I learned to love Rust",
      "content_text": "A journey from hating Rust to loving it more than any other language.",
      "url": "https://medium.com/@geis/how-i-learned-to-love-rust-abfac6c1f6d1",
      "date_published": "2019-01-07T21:07:51.883+00:00",
      "author": {
        "name": "Grégoire Geis",
        "url": "https://medium.com/@geis"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "525bee43-14cb-422e-8b91-58322a8d2c63",
      "title": "Rust for algorithms",
      "content_text": "How I decided to challenge myself and solve coding tasks using Rust",
      "url": "https://ilyabiz.com/2018/12/rust-for-algorithms/",
      "date_published": "2018-12-23T20:54:31+00:00",
      "author": {
        "name": "Ilya Bizyaev",
        "url": "https://ilyabiz.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "5bfa329e-1d71-4b98-af03-90c1672ebb8b",
      "title": "How to Become a Rust Super-developer",
      "content_text": "This is an article and a tutorial about stumbling and failing. It is about trying hard, and giving up - just to start all over again. All for the one goal - becoming the master of coding in Rust.",
      "url": "https://hashnode.com/post/how-to-become-a-rust-super-developer-cjpv1ee7e000buhs2aqrdw2ym",
      "date_published": "2018-12-19T00:00:00+00:00",
      "author": {
        "name": "Marco Alka",
        "url": "https://hashnode.com/@maruru"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "f8aa1176-9ae2-447f-b914-a6950612d7f2",
      "title": "8 Lessons from First Days of Advent of Code 2018",
      "content_text": "I’ve got two days of Advent of Code 2018 under my belt and four stars to show for it! But I’ll be the first to admit that I had plenty of help, so I thought it only fair that I write out some of the things I’ve already learned about Rust.",
      "url": "https://sts10.github.io/2018/12/02/lessons-from-first-two-days-of-advent-of-code-2018.html",
      "date_published": "2018-12-02T23:22:00+00:00",
      "author": {
        "name": "Sam Schlinkert",
        "url": "https://sts10.github.io/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "3c8b4f15-959d-40cc-a79c-1a375f498bb0",
      "title": "Rust: Error handling – Learning Rust",
      "content_text": "Welcome Back! This is the fifth post of Learning Rust series. Rust is a well designed language and safety is one of the main focus area of it. Its design decisions have been taken to prevent errors and major issues of systems programs like data races, null pointer exceptions, sensitive data leakage through exceptions and etc. So today, we are going to talk more about the concepts behind Error Handling in Rust.",
      "url": "https://medium.com/learning-rust/rust-error-handling-72a8e036dd3",
      "date_published": "2018-12-06T19:11:01.554+00:00",
      "author": {
        "name": "Dumindu Madunuwan",
        "url": "https://medium.com/@dumindu"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "09e9a0eb-339f-496e-8477-911e89774938",
      "title": "Learning a new language for more than 2 months (feat. Exercism)",
      "content_text": "Usually I take about a week to learn a new language so I can start doing some real work with it. After all a programming language (at least the high level and dynamic ones) is just assignment, calculation, branching, looping and reuse (and in certain cases, concurrency/parallelism, not gonna dive deep in defining the difference though). Well, that was true until I started learning Rust, partly for my own leisure. I still don’t feel comfortable writing a complete Rust code. Though I really like the language.",
      "url": "https://cslai.coolsilon.com/2018/11/06/learning-a-new-language-for-more-than-2-months-feat-exercism/",
      "date_published": "2018-11-06T11:18:35+00:00",
      "author": {
        "name": "Jeffrey04",
        "url": "https://cslai.coolsilon.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "a758c495-92fa-476d-9758-a916dc50c2f9",
      "title": "Summer School With The Rust Compiler",
      "content_text": "Learning Rust is hard for everyone, but it’s even worse for me because I’ve been working with Ruby during past ten years. Switching to Rust from Ruby is leaving an anything-goes hippie commune to a summer school for delinquent programmers run by a sadistic and unforgiving teacher. Why would anyone use a compiler like this? The answer is simple: to learn how to write better code.",
      "url": "http://patshaughnessy.net/2018/10/24/summer-school-with-the-rust-compiler",
      "date_published": "2018-10-24T03:00:00+00:00",
      "author": {
        "name": "Pat Shaughnessy",
        "url": "http://patshaughnessy.net/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "fae7cb69-a7bf-4cb1-9d1d-f5e703312ef7",
      "title": "Rust can be difficult to learn and frustrating, but it’s also the most exciting thing in software development in a long time",
      "content_text": "I recently decided to put serious effort into learning the Rust programming language. I saw it coming up frequently in interesting projects (e.g. ripgrep) and kept hearing good things about it. My hesitation to picking up Rust since its 1.0 release in 2015 came from two fronts. First, I’m completely invested in Go because of InfluxDB. Second, I heard that it was not the easiest thing to learn. While I don’t normally shy away from difficult tasks, I was hesitant because I believe that many developer tools that take off do so because they are easy to use or give developers significant productivity gains. More often than not, I want to invest my time in tools that I think have longevity that will get some critical mass in the market.",
      "url": "https://www.influxdata.com/blog/rust-can-be-difficult-to-learn-and-frustrating-but-its-also-the-most-exciting-thing-in-software-development-in-a-long-time/",
      "date_published": "2018-10-22T18:45:16+00:00",
      "author": {
        "name": "Paul Dix",
        "url": "https://www.influxdata.com/blog/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "60825132-c54b-4297-9f81-936601b76f64",
      "title": "My Experience With Learning Rust",
      "content_text": "Although I didn’t start writing this blog when I started writing in Rust, I remember clearly why I started writing in Rust. From what I had been doing in C#, none of it utilized multiple threads. Multi-threaded programming had always been a sore topic for me. Things like thread synchronization and message passing never really made sense to me. I learned Rust mainly due to its promises for ease of programming for multiple threads. Once hearing that things like parts of Firefox were written using it, and the Mozilla themselves were very strongly invested in Rust, I had more reason to start writing in it. I’d assume that if Mozilla were to invest so much in a programming language, it must have some sort of benefits over your usual C and C++ programming languages. Even further than that, I’ve heard of some game studios adopting Rust in their games and I was pretty much hooked at that point.",
      "url": "https://medium.com/@nathanielbarragan/my-experience-with-learning-rust-bbcb6b7c1063",
      "date_published": "2018-10-22T02:29:02.205+00:00",
      "author": {
        "name": "Nathaniel Barragan",
        "url": "https://medium.com/@nathanielbarragan"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "ceb7c2a6-d905-4b13-8f42-4aa42cd9b3e3",
      "title": "Building a command-line todo app in Rust",
      "content_text": "In this tutorial, we are going to create a simple command-line todo app. By the end of this tutorial, you should have a basic understanding of Rust programming language, building command-line apps in Rust, and performing file-system operations in Rust.",
      "url": "https://medium.com/@devashishdxt/building-a-command-line-todo-app-in-rust-a89bb7af91c3",
      "date_published": "2018-10-12T13:14:56.867+00:00",
      "author": {
        "name": "Devashish Dixit",
        "url": "https://medium.com/@devashishdxt"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "8e066aec-6f09-44df-b763-b4d44b772fb5",
      "title": "Understanding Compilers — For Humans (Version 2)",
      "content_text": "Understanding your compiler internally allows you to use it effectively. Walk through how programming languages and compilers work in this chronological synopsis. Lots of links, example code, and diagrams have been composed to aid in your understanding.\n\nUnderstanding Compilers — For Humans (Version 2) is a successor to my second article on Medium, with over 21 thousand views. I am so glad I could make a positive impact on people’s education, and I am excited to bring a complete rewrite based on the input I received from the original article. I chose Rust as this work’s primary language.",
      "url": "https://towardsdatascience.com/understanding-compilers-for-humans-version-2-157f0edb02dd",
      "date_published": "2018-09-29T16:01:01.807+00:00",
      "author": {
        "name": "Luke Wilson",
        "url": "https://towardsdatascience.com/@aesl"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "e112cc10-746d-4151-b0e4-76832be74e09",
      "title": "Rust: Pass-By-Value or Pass-By-Reference?",
      "content_text": "The other day, a friend of mine who is learning Rust asked if Rust is a pass-by-value or a pass-by-reference language. For the unfamiliar, pass-by-value means that when passing an argument to a function it gets copied into the new function so that the value in the calling function and the value in the called function are two separate values. Changes to one will not in turn result in the same change to the other. Pass-by-reference, on the other hand, means that when passing an argument to a function, it doesn’t copy the value but rather the argument is merely a transparent reference to the original value. This means changes to the value in the called function change the value in the calling function since they are the same value.",
      "url": "https://blog.ryanlevick.com/posts/rust-pass-value-or-reference/",
      "date_published": "2018-09-12T00:00:00+00:00",
      "author": {
        "name": "Ryan Levick",
        "url": "https://blog.ryanlevick.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "6d814a89-7614-47d1-b3f4-b660279b379d",
      "title": "Rust: My first impressions",
      "content_text": "At work I’m seeing more and more embedded software; over the past few years in, among others, coffee machines, forklifts, and cars. Embedded software needs to be fast and extremely efficient with hardware resources. In some cases it not even acceptable to have a tiny break for some garbage collection. So, typical tech stacks for backend development can’t be used, never mind anything that uses browser technologies. Unsurprisingly, almost all embedded software is written in C++, and, in fact, that is also what I used recently for a personal project with a micro-controller.\n\nLooking through the remaining choices, I went past Golang, which uses garbage collection, and set my eyes on Rust. In this post I’ll describe my first impressions, some of the frustrating moments, but also the extremely impressive performance on a larger piece of code.",
      "url": "https://erik.doernenburg.com/2018/09/rust-my-first-impressions/",
      "date_published": "2018-09-07T00:00:00+02:00",
      "author": {
        "name": "Erik Dörnenburg",
        "url": "https://erik.doernenburg.com/blog"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "7b94766b-f2c3-42f6-b215-7b63f07a4e95",
      "title": "Adventures in Rust: Futures and Tokio",
      "content_text": "One of my newer hobbies recently has been learning and toying around with Rust. Recently, as part of this learning process, I've started implementing an IP address lookup service as a small side project. During the course of implementing this project I ran into what turned out to be a bit of a hurdle to tackle, specifically performing reverse dns resolution asynchronously.\n\nMy hope is that through exploring this problem, I can aid others in understanding these concepts which can be initially difficult grasp. This is especially so as the behavior and function of Futures vary wildly between various languages and runtimes.",
      "url": "http://bryangilbert.com/post/code/rust/adventures-futures-tokio-rust/",
      "date_published": "2018-09-04T00:00:00+00:00",
      "author": {
        "name": "Bryan Gilbert",
        "url": "http://bryangilbert.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "e989a06c-ac0a-4a49-9591-8867e574c37b",
      "title": "O(1) sum_of_multiples() in Rust",
      "content_text": "I had been working mostly in Scala for a while, then took a diversion into Swift and Objective C.  I wanted to learn another language after that, and had all but decided on Clojure.  But Rust kept nagging at me — there was something about it. So I watched some videos, then read the book, and then started the Rust track at Exercism.io.",
      "url": "https://nicholassterling.wordpress.com/2018/08/31/o1-sum_of_multiples-in-rust/",
      "date_published": "2018-08-31T05:51:05+00:00",
      "author": {
        "name": "Nicholas Sterling",
        "url": "https://nicholassterling.wordpress.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "8b60e040-4635-4a84-b8a6-3e0f2933f066",
      "title": "Password Generation in Ruby and Rust",
      "content_text": "Writing the same password generator in two different languages to learn more Rust.",
      "url": "https://hur.st/blog/2018/08-25-password-generation-in-ruby-and-rust/",
      "date_published": "2018-08-25T00:00:00+00:00",
      "author": {
        "name": "Thomas Hurst",
        "url": "https://hur.st/"
      },
      "tags": [
        "Tools and Applications",
        "Getting Started"
      ]
    },
    {
      "id": "9f3fb115-f832-421a-bf28-18148cc3bde0",
      "title": "A Beginner’s Guide to Rust Macros ✨",
      "content_text": "Demystifying one of Rust’s most powerful feature.",
      "url": "https://medium.com/@phoomparin/a-beginners-guide-to-rust-macros-5c75594498f1",
      "date_published": "2018-08-18T18:35:50.344+00:00",
      "author": {
        "name": "Phoomparin Mano",
        "url": "https://medium.com/@phoomparin"
      },
      "tags": [
        "Language",
        "Getting Started"
      ]
    },
    {
      "id": "2cac0c52-a34d-4124-ab89-d117f7b69118",
      "title": "In Memes We Rust",
      "content_text": "Learning Rust to make a Mocking SpongeBob text generator",
      "url": "https://medium.com/@glitteringkatie/in-memes-we-rust-5c920b1e9af7",
      "date_published": "2018-07-25T20:11:46.910+00:00",
      "author": {
        "name": "Katie Hughes ✨",
        "url": "https://medium.com/@glitteringkatie"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "d6b87789-dd86-49e2-91b6-692607e32f67",
      "title": "How Rust made me rethink my view about compilers",
      "content_text": "It's funny how universe aligns things, just few days ago I stumbled upon Rust koans. Already familiar way of learning and exercising, patented by Ruby programmers, where you correct tests and make them work. Also whole method of learning was similar to reading 'Little Schemer' fairly popular book among fellow Lispers. So I'll use this blog post to summarize few early impressions about Rust, and let me tell you straight away, I am loving it so far!",
      "url": "https://defphil.com/post/2018/07/15/staying-rusty/",
      "date_published": "2018-07-15T00:00:00+00:00",
      "author": {
        "name": "Filip Miletic",
        "url": "https://defphil.com/"
      },
      "tags": [
        "Language",
        "Getting Started"
      ]
    },
    {
      "id": "b7c9c3df-7ecd-41f3-8c89-5c1d35298b7b",
      "title": "Journey into rust #1: Conway’s Game",
      "content_text": "The language rust has been popping up on my twitter feed and my personal life more and more. It’s been promoted and presented as the ultra safe language, so naturally I decided to check it out. The upcoming series of posts “Journey into rust” will describe and document my experiences using rust, hopefully explaining certain concepts that rust does differently. This will all be written from a C++ programmers standpoint that was thought writing Object Oriented code. I encourage you the reader to think critically and correct where necessary.\n\nOn to the actual first post! After reading “the Rust Programming Language” I wanted to get my hands dirty and actually write some code. I like graphical applications and using low level graphics API’s so I decided to implement a cellular automation in rust. But just implementing cellular automation isn’t very exciting, is it? What if we could do this on the GPU…And off I went on my journey to create Conway’s game of life in rust.",
      "url": "https://jonathansteyfkens.com/rust/opengl/graphics/2018/08/07/rust-conway-game-of-life.html",
      "date_published": "2018-08-07T22:30:01+00:00",
      "author": {
        "name": "Jonathan Steyfkens",
        "url": "https://jonathansteyfkens.com/"
      },
      "tags": [
        "Games and Graphics",
        "Getting Started"
      ]
    },
    {
      "id": "7d6c2d9c-16c8-42be-93d5-d61cc9dac117",
      "title": "Rust Modules In Less Than 5 Minutes",
      "content_text": "When I started learning Rust, the module system did not at first seem to be a shining beacon of intuitive design. The Rust documentation is phenomenal, but there are definitely some areas that I found difficult to follow; this being one such topic. So I thought I might take a stab at writing up a guide that I think would have helped me through the awkward growing pains a bit quicker.",
      "url": "https://medium.com/@erik.tate/rust-modules-in-less-than-5-minutes-9bff7f617798",
      "date_published": "2018-08-05T23:49:43.586+00:00",
      "author": {
        "name": "Erik Tate",
        "url": "https://medium.com/@erik.tate"
      },
      "tags": [
        "Getting Started",
        "Language"
      ]
    },
    {
      "id": "078a2508-9729-477b-915e-3a72fb6f66e9",
      "title": "Learning Rust 02: an ls clone",
      "content_text": "In this post, I’m building an ls clone. It’s pretty similar to the last post’s pwd clone. It’s called rls.",
      "url": "https://routley.io/tech/2018/07/08/learning-rust-02.html",
      "date_published": "2018-07-08T00:00:00+01:00",
      "author": {
        "name": " James Routley",
        "url": "https://routley.io/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "f0e4ab48-bf11-47bf-9267-4da78f78bdcc",
      "title": "Programming Servo: How to match",
      "content_text": "Today, let’s share some lessons learned from contributing to Servo, which is a great way to learn Rust.",
      "url": "https://medium.com/programming-servo/programming-servo-how-to-match-b76c43f76fe6",
      "date_published": "2018-07-27T04:37:21.175+00:00",
      "author": {
        "name": "Gregory Terzian",
        "url": "https://medium.com/@polyglot_factotum"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "62456010-4ef4-4f1d-87f0-6e0c64929d82",
      "title": "Ownership in Rust, Part 2",
      "content_text": "It’s still not problem.",
      "url": "https://medium.com/@thomascountz/ownership-in-rust-part-2-c3e1da89956e",
      "date_published": "2018-07-11T16:55:03.818+00:00",
      "author": {
        "name": "Thomas Countz",
        "url": "https://medium.com/@thomascountz"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "c0f25118-a040-4f57-bd18-1594ce4e72f6",
      "title": "Ownership in Rust, Part 1",
      "content_text": "It’s not my problem.",
      "url": "https://medium.com/@thomascountz/ownership-in-rust-part-1-112036b1126b",
      "date_published": "2018-07-09T20:58:44.366+00:00",
      "author": {
        "name": "Thomas Countz",
        "url": "https://medium.com/@thomascountz"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "325fc83d-bba5-48c8-8443-fdd5dd21f8ed",
      "title": "Learning Rust — Conspiracies, Databases, and Diesel.rs",
      "content_text": "This post is the second in a series of posts where I share my experience learning Rust. I’m building out a conspiracy theories API to help me get more familiar with Rust and to have a little fun. Since I am new to Rust, I welcome any and all feedback, especially from developers who have been using Rust for quite some time, leave a comment below or contact me on Twitter. With that out of the way, it is time to put your foil lined hat on and start storing the conspiracies in a database.",
      "url": "https://medium.com/@rippinrobr_66849/2-conspiracies-databases-and-diesel-rs-ac1d8d3499b3",
      "date_published": "2018-05-30T21:04:06.895+00:00",
      "author": {
        "name": "Rob Rowe",
        "url": "https://medium.com/@rippinrobr_66849"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "3f1b68cd-7c14-415e-bbe9-45db4342a95e",
      "title": "Get to know Rust",
      "content_text": "If you have ever written software, you have undoubtedly asked yourself, \"What language should I write this in?\" It's a valid question. Does your code need to be as fast as possible? Will it be running on the Web? Will the code be on the back end or the front? All languages have their niches, and Rust is no different.\n\nRust is a statically typed compiled language that fills the roles that most users use C or C++ for. Unlike C or C++, though, Rust also encroaches on territory that C# and the Java™ language have dominated for much of this century: Rust is a language that is memory safe and operating system agnostic, meaning that it can run on any computer. Essentially, you get all the speed and low-level benefits of a systems language without the pesky garbage collection of those latter languages I mentioned. Excited? Yeah, me, too. Welcome to Rust! ",
      "url": "https://www.ibm.com/developerworks/opensource/library/os-know-rust/index.html",
      "date_published": "2018-05-07T00:00:00+00:00",
      "author": {
        "name": "Dylan Hicks",
        "url": "https://www.linkedin.com/in/dylan-hicks-b4265396/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "4ae850d3-305a-4fb4-826d-853972364683",
      "title": "On learning Rust",
      "content_text": "But recently I decided to give Rust a go. And I must admit that I’m extremely surprised. Rust, like OCaml is a pretty low level language (it is a system programming language). After six years without seeing any pointers, I can’t say that I was happy. But the Rust compiler, by being extremely safe actually makes that easy.",
      "url": "https://medium.com/@AugustinLF/on-learning-rust-69ba956a63e3",
      "date_published": "2018-05-16T14:01:05.344+00:00",
      "author": {
        "name": "Augustin Le Fèvre",
        "url": "https://medium.com/@AugustinLF"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "91fb984c-4084-4b2c-84e5-ebda94169657",
      "title": "WASM+Rust Tutorial",
      "content_text": "A project used for a meetup talk about getting started with rust & wasm",
      "url": "https://freemasen.github.io/wasm_tutorial/",
      "date_published": "2018-05-03T07:30:00+10:00",
      "author": {
        "name": "Robert Masen",
        "url": "https://github.com/FreeMasen"
      },
      "tags": [
        "Getting Started",
        "Web and Network Services"
      ]
    },
    {
      "id": "d4c2f839-050c-4134-868d-eab325676917",
      "title": "An interactive guide to learning Rust!",
      "content_text": "Fix a series to broken Rust programs to gain a deeper understanding of Rust.",
      "url": "https://github.com/toidiu/learn-rust",
      "date_published": "2018-04-10T06:47:00+10:00",
      "author": {
        "name": "toidiu",
        "url": "https://github.com/toidiu"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "cf92e0a9-88ac-4fa8-9ecd-d61078868f26",
      "title": "A Gentle Introduction to Rust (book)",
      "content_text": "Introduction to the Rust language, standard library and ecosystem",
      "url": "http://stevedonovan.github.io/rust-gentle-intro/",
      "date_published": "2018-04-05T07:00:00+10:00",
      "author": {
        "name": "Steve J Donovan",
        "url": "https://github.com/stevedonovan"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "5e66cfa3-c153-40ab-8cad-cb8aaf01d178",
      "title": "Getting started with Rust: Enum on steroids!",
      "content_text": "Hello everyone! Today subject was hard to decide on. But as the previous one was pretty tedious, I decided to go a subject more easy to speak of. So, today we are going to talk about enum in Rust!",
      "url": "https://www.mathieu-nivoliez.com/posts/2018-04-01-getting-started-with-rust-enum-on-steroids.html",
      "date_published": "2018-04-01T00:00:00+00:00",
      "author": {
        "name": "Mathieu Nivoliez",
        "url": "https://www.mathieu-nivoliez.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "a15836bc-6eaf-46c9-8fe8-70bd2fada61e",
      "title": "The tower of hanoi in Rust",
      "content_text": "The tower of hanoi algorithm is practice for recursive function.",
      "url": "https://masahiko-ofgp-notebook.blogspot.com.au/2018/03/the-tower-of-hanoi-by-rust-lang.html?m=1",
      "date_published": "2018-03-25T13:23:00+11:00",
      "author": {
        "name": "masahiko",
        "url": "https://masahiko-ofgp-notebook.blogspot.com.au/?m=1"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "c5aa834d-c9d6-4e24-8abf-a9db4cb5cf29",
      "title": "Rust — Intro and Installation in Ubuntu",
      "content_text": "Rust is a new age programming language that tries to fight our bad practices in coding. It is a Systems Programming Language, which runs…",
      "url": "https://medium.com/aackam/rust-intro-and-installation-in-ubuntu-bd4720a64f31",
      "date_published": "2018-03-19T22:36:52.175+00:00",
      "author": {
        "name": "VIJAYAN N",
        "url": "https://medium.com/@vjn"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "9ecf3a00-a806-4914-a3e2-fd360f7199ed",
      "title": "Rust Tutorial",
      "content_text": "The aim of this tutorial is to take you to a place where you can read and write enough Rust to fully appreciate the excellent learning resources available online, in particular The Book. It’s an opportunity to try before you buy, and get enough feeling for the power of the language to want to go deeper.",
      "url": "https://slashtutorial.com/rust/",
      "date_published": "2018-03-12T16:23:55+00:00",
      "author": {
        "name": "Slash Tutorial",
        "url": "https://slashtutorial.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "64fe2d3c-c0cb-41a2-8faf-08d19e59c439",
      "title": "Get started with the Rust programming language",
      "content_text": "A recent Stack Overflow survey found that almost 80% of respondents loved using or wanted to develop with the Rust language. That's an incredible number! So, what's so good about Rust? This article explores the high points of this C-like language and illustrates why it should be next on your list of languages to learn.",
      "url": "https://www.ibm.com/developerworks/opensource/library/os-developers-know-rust/index.html?ca=drs",
      "date_published": "2018-03-08T00:00:00+00:00",
      "author": {
        "name": "M. Tim Jones",
        "url": "https://www.ibm.com/developerworks/opensource/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "bd7d2caa-818d-4950-9eca-72588b038bed",
      "title": "Getting started with Rust: Reference and Lifetime",
      "content_text": "Hello everyone! You were waiting for it, and now you are going to get it! Ladies and gentlemen, today we are going to talk about reference and lifetime!",
      "url": "https://www.mathieu-nivoliez.com/posts/2018-03-05-getting-started-with-rust-reference-and-lifetime.html",
      "date_published": "2018-03-05T00:00:00+00:00",
      "author": {
        "name": "Mathieu Nivoliez",
        "url": "https://www.mathieu-nivoliez.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "5b0beffe-60dc-4ce3-b137-738fb51fd570",
      "title": "Getting Rusty with Vim",
      "content_text": " After dabbing in Go and Crystal, I figured I'd give Rust a try. Of course I used Vim along the way. Here are some notes I compiled after my first session.",
      "url": "https://ddrscott.github.io/blog/2018/getting-rusty-with-vim/",
      "date_published": "2018-03-04T06:30:00-06:00",
      "author": {
        "name": "Scott Pierce",
        "url": "https://ddrscott.github.io/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "4c17c0f4-8148-4408-a54f-733e20c89189",
      "title": "Rust for Java Devs – Structs",
      "content_text": "Next up in Rust for Java Devs we have structs. They are used to hold data within a logical unit that can be passed to other functions or execute their own methods on the values that they store. Now this sounds very familiar… Java objects do the same thing. For example if you took a POJO (Plain Old Java Object) you also pass it to other methods or execute the object’s own methods. In this nature they are alike, but they do have their differences. In this post we will look into creating structs, retrieving their values, defining their own methods and how to execute them.",
      "url": "https://lankydanblog.com/2018/03/01/rust-for-java-devs-structs/",
      "date_published": "2018-03-01T20:03:54+00:00",
      "author": {
        "name": "Dan Newton",
        "url": "https://lankydanblog.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "e5f704af-b1ed-4757-b96d-80402ba3e601",
      "title": "Rust for Java Devs – Creating functions",
      "content_text": "In this post of Rust for Java Devs we will look at creating functions in Rust. Functions in Rust do not differ that much from Java methods but there are a few little differences. There is also the topic of Rust’s lifetimes compared to Java’s garbage collection that one could argue separates the two from each other a bit more, but for this post I will focus on the structure of writing a function in Rust. Due to the similarities between the two, I believe most Java developers will have no problem in figuring out what arguments a Rust function takes, what it outputs and where the output is returned from.",
      "url": "https://lankydanblog.com/2018/02/18/rust-for-java-devs-creating-functions/",
      "date_published": "2018-02-18T18:28:19+00:00",
      "author": {
        "name": "Dan Newton",
        "url": "https://lankydanblog.com/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "4abf1536-2c82-411a-be74-e85d2155af5a",
      "title": "Setting up Windows 10 for programming (in Rust)",
      "content_text": "Lately I’ve been working with Windows-specific APIs, so I needed to get a Windows dev environment. I’ve mostly used Linux for many years now, so for me programming on Windows feels very foreign. Getting to a point where I started being productive took a number of steps, so here they are, if only for me to find them next time.",
      "url": "https://exyr.org/2018/windows/",
      "date_published": "2018-01-31T00:00:00+00:00",
      "author": {
        "name": "Simon Sapin",
        "url": "https://exyr.org/"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "49ad5651-12e0-4374-9586-d9a86291c165",
      "title": "Practical Rust: Installation & Hello World",
      "content_text": "Recently, a new language called Rust has come into the spotlight, aiming to be a ‘blazingly fast’ language meant for systems programming…",
      "url": "https://medium.com/@gallantmrgn/practical-rust-installation-hello-world-d1e52aac1f9",
      "date_published": "2018-02-02T18:08:04.292+00:00",
      "author": {
        "name": "Morgan A. Gallant",
        "url": "https://medium.com/@gallantmrgn"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "c0b3d7ad-673f-4eb9-aa54-45447d1eafb0",
      "title": "Rust Lifetimes for the Uninitialised",
      "content_text": "Lifetimes are a interesting subject: a lot of people seem to gain a day-to-day familiarity with them, without fully understanding what they are. Maybe, they are truly Rust's Monads. Let's talk about what they are, where you encounter them and then how to get competent with them.",
      "url": "http://asquera.de/blog/2018-01-29/rust-lifetimes-for-the-uninitialised/",
      "date_published": "2018-01-29T15:30:00+01:00",
      "author": {
        "name": "Florian Gilcher",
        "url": "http://asquera.de/blog"
      },
      "tags": [
        "Language",
        "Getting Started"
      ]
    },
    {
      "id": "b4def99b-cdec-46c6-9816-a6c85c999ae9",
      "title": "Beginner Bites: A taste of Rust, a safe, concurrent and practical language!",
      "content_text": "Experience a sampler of Rust. You’ll get set up, then solve the first Project Euler problem in Rust. This is a language you can’t miss.",
      "url": "https://hackernoon.com/a-taste-of-rust-6d8fc60e050",
      "date_published": "2018-02-04T11:01:00.900+00:00",
      "author": {
        "name": "Andrew Jakubowicz",
        "url": "https://hackernoon.com/@spyr1014"
      },
      "tags": [
        "Getting Started"
      ]
    }
  ]
}