<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Read Rust - Getting Started</title><link>https://readrust.net/</link><description>Getting Started posts on Read Rust</description><item><title>Learning Rust — Conspiracies, Databases, and Diesel.rs</title><link>https://medium.com/@rippinrobr_66849/2-conspiracies-databases-and-diesel-rs-ac1d8d3499b3</link><description><![CDATA[This post is the second in a series of posts where I share my experience learning Rust. I’m building out a conspiracy theories API to help me get more familiar with Rust and to have a little fun. Since I am new to Rust, I welcome any and all feedback, especially from developers who have been using Rust for quite some time, leave a comment below or contact me on Twitter. With that out of the way, it is time to put your foil lined hat on and start storing the conspiracies in a database.]]></description><guid isPermaLink="false">325fc83d-bba5-48c8-8443-fdd5dd21f8ed</guid><pubDate>Wed, 30 May 2018 21:04:06 +0000</pubDate><dc:creator>Rob Rowe</dc:creator></item><item><title>Get to know Rust</title><link>https://www.ibm.com/developerworks/opensource/library/os-know-rust/index.html</link><description><![CDATA[If you have ever written software, you have undoubtedly asked yourself, "What language should I write this in?" It's a valid question. Does your code need to be as fast as possible? Will it be running on the Web? Will the code be on the back end or the front? All languages have their niches, and Rust is no different.

Rust is a statically typed compiled language that fills the roles that most users use C or C++ for. Unlike C or C++, though, Rust also encroaches on territory that C# and the Java™ language have dominated for much of this century: Rust is a language that is memory safe and operating system agnostic, meaning that it can run on any computer. Essentially, you get all the speed and low-level benefits of a systems language without the pesky garbage collection of those latter languages I mentioned. Excited? Yeah, me, too. Welcome to Rust! ]]></description><guid isPermaLink="false">3f1b68cd-7c14-415e-bbe9-45db4342a95e</guid><pubDate>Mon,  7 May 2018 00:00:00 +0000</pubDate><dc:creator>Dylan Hicks</dc:creator></item><item><title>On learning Rust</title><link>https://medium.com/@AugustinLF/on-learning-rust-69ba956a63e3</link><description><![CDATA[But recently I decided to give Rust a go. And I must admit that I’m extremely surprised. Rust, like OCaml is a pretty low level language (it is a system programming language). After six years without seeing any pointers, I can’t say that I was happy. But the Rust compiler, by being extremely safe actually makes that easy.]]></description><guid isPermaLink="false">4ae850d3-305a-4fb4-826d-853972364683</guid><pubDate>Wed, 16 May 2018 14:01:05 +0000</pubDate><dc:creator>Augustin Le Fèvre</dc:creator></item><item><title>Setting up gitlab-ci for Rust</title><link>https://not.plhk.ru/gitlab-ci-rust/</link><description><![CDATA[We're going to create a multi-stage pipeline based on the one I'm using at work, featuring: a build image, linting, test & release builds, and docker containers]]></description><guid isPermaLink="false">5b534e6e-4e12-4860-95d6-1317b8903d4e</guid><pubDate>Mon, 14 May 2018 00:00:00 +0000</pubDate><dc:creator>Alexander Polakov</dc:creator></item><item><title>WASM+Rust Tutorial</title><link>https://freemasen.github.io/wasm_tutorial/</link><description><![CDATA[A project used for a meetup talk about getting started with rust & wasm]]></description><guid isPermaLink="false">91fb984c-4084-4b2c-84e5-ebda94169657</guid><pubDate>Thu,  3 May 2018 07:30:00 +1000</pubDate><dc:creator>Robert Masen</dc:creator></item><item><title>An interactive guide to learning Rust!</title><link>https://github.com/toidiu/learn-rust</link><description><![CDATA[Fix a series to broken Rust programs to gain a deeper understanding of Rust.]]></description><guid isPermaLink="false">d4c2f839-050c-4134-868d-eab325676917</guid><pubDate>Tue, 10 Apr 2018 06:47:00 +1000</pubDate><dc:creator>toidiu</dc:creator></item><item><title>A Gentle Introduction to Rust (book)</title><link>http://stevedonovan.github.io/rust-gentle-intro/</link><description><![CDATA[Introduction to the Rust language, standard library and ecosystem]]></description><guid isPermaLink="false">cf92e0a9-88ac-4fa8-9ecd-d61078868f26</guid><pubDate>Thu,  5 Apr 2018 07:00:00 +1000</pubDate><dc:creator>Steve J Donovan</dc:creator></item><item><title>Getting started with Rust: Enum on steroids!</title><link>https://www.mathieu-nivoliez.com/posts/2018-04-01-getting-started-with-rust-enum-on-steroids.html</link><description><![CDATA[Hello everyone! Today subject was hard to decide on. But as the previous one was pretty tedious, I decided to go a subject more easy to speak of. So, today we are going to talk about enum in Rust!]]></description><guid isPermaLink="false">5e66cfa3-c153-40ab-8cad-cb8aaf01d178</guid><pubDate>Sun,  1 Apr 2018 00:00:00 +0000</pubDate><dc:creator>Mathieu Nivoliez</dc:creator></item><item><title>The tower of hanoi in Rust</title><link>https://masahiko-ofgp-notebook.blogspot.com.au/2018/03/the-tower-of-hanoi-by-rust-lang.html?m=1</link><description><![CDATA[The tower of hanoi algorithm is practice for recursive function.]]></description><guid isPermaLink="false">a15836bc-6eaf-46c9-8fe8-70bd2fada61e</guid><pubDate>Sun, 25 Mar 2018 13:23:00 +1100</pubDate><dc:creator>masahiko</dc:creator></item><item><title>Rust — Intro and Installation in Ubuntu</title><link>https://medium.com/aackam/rust-intro-and-installation-in-ubuntu-bd4720a64f31</link><description><![CDATA[Rust is a new age programming language that tries to fight our bad practices in coding. It is a Systems Programming Language, which runs…]]></description><guid isPermaLink="false">c5aa834d-c9d6-4e24-8abf-a9db4cb5cf29</guid><pubDate>Mon, 19 Mar 2018 22:36:52 +0000</pubDate><dc:creator>VIJAYAN N</dc:creator></item><item><title>Rust Tutorial</title><link>https://slashtutorial.com/rust/</link><description><![CDATA[The aim of this tutorial is to take you to a place where you can read and write enough Rust to fully appreciate the excellent learning resources available online, in particular The Book. It’s an opportunity to try before you buy, and get enough feeling for the power of the language to want to go deeper.]]></description><guid isPermaLink="false">9ecf3a00-a806-4914-a3e2-fd360f7199ed</guid><pubDate>Mon, 12 Mar 2018 16:23:55 +0000</pubDate><dc:creator>Slash Tutorial</dc:creator></item><item><title>Get started with the Rust programming language</title><link>https://www.ibm.com/developerworks/opensource/library/os-developers-know-rust/index.html?ca=drs</link><description><![CDATA[A recent Stack Overflow survey found that almost 80% of respondents loved using or wanted to develop with the Rust language. That's an incredible number! So, what's so good about Rust? This article explores the high points of this C-like language and illustrates why it should be next on your list of languages to learn.]]></description><guid isPermaLink="false">64fe2d3c-c0cb-41a2-8faf-08d19e59c439</guid><pubDate>Thu,  8 Mar 2018 00:00:00 +0000</pubDate><dc:creator>M. Tim Jones</dc:creator></item><item><title>Getting started with Rust: Reference and Lifetime</title><link>https://www.mathieu-nivoliez.com/posts/2018-03-05-getting-started-with-rust-reference-and-lifetime.html</link><description><![CDATA[Hello everyone! You were waiting for it, and now you are going to get it! Ladies and gentlemen, today we are going to talk about reference and lifetime!]]></description><guid isPermaLink="false">bd7d2caa-818d-4950-9eca-72588b038bed</guid><pubDate>Mon,  5 Mar 2018 00:00:00 +0000</pubDate><dc:creator>Mathieu Nivoliez</dc:creator></item><item><title>Getting Rusty with Vim</title><link>https://ddrscott.github.io/blog/2018/getting-rusty-with-vim/</link><description><![CDATA[ After dabbing in Go and Crystal, I figured I'd give Rust a try. Of course I used Vim along the way. Here are some notes I compiled after my first session.]]></description><guid isPermaLink="false">5b0beffe-60dc-4ce3-b137-738fb51fd570</guid><pubDate>Sun,  4 Mar 2018 06:30:00 -0600</pubDate><dc:creator>Scott Pierce</dc:creator></item><item><title>Rust for Java Devs – Structs</title><link>https://lankydanblog.com/2018/03/01/rust-for-java-devs-structs/</link><description><![CDATA[Next up in Rust for Java Devs we have structs. They are used to hold data within a logical unit that can be passed to other functions or execute their own methods on the values that they store. Now this sounds very familiar… Java objects do the same thing. For example if you took a POJO (Plain Old Java Object) you also pass it to other methods or execute the object’s own methods. In this nature they are alike, but they do have their differences. In this post we will look into creating structs, retrieving their values, defining their own methods and how to execute them.]]></description><guid isPermaLink="false">4c17c0f4-8148-4408-a54f-733e20c89189</guid><pubDate>Thu,  1 Mar 2018 20:03:54 +0000</pubDate><dc:creator>Dan Newton</dc:creator></item><item><title>Rust for Java Devs – Creating functions</title><link>https://lankydanblog.com/2018/02/18/rust-for-java-devs-creating-functions/</link><description><![CDATA[In this post of Rust for Java Devs we will look at creating functions in Rust. Functions in Rust do not differ that much from Java methods but there are a few little differences. There is also the topic of Rust’s lifetimes compared to Java’s garbage collection that one could argue separates the two from each other a bit more, but for this post I will focus on the structure of writing a function in Rust. Due to the similarities between the two, I believe most Java developers will have no problem in figuring out what arguments a Rust function takes, what it outputs and where the output is returned from.]]></description><guid isPermaLink="false">e5f704af-b1ed-4757-b96d-80402ba3e601</guid><pubDate>Sun, 18 Feb 2018 18:28:19 +0000</pubDate><dc:creator>Dan Newton</dc:creator></item><item><title>Setting up Windows 10 for programming (in Rust)</title><link>https://exyr.org/2018/windows/</link><description><![CDATA[Lately I’ve been working with Windows-specific APIs, so I needed to get a Windows dev environment. I’ve mostly used Linux for many years now, so for me programming on Windows feels very foreign. Getting to a point where I started being productive took a number of steps, so here they are, if only for me to find them next time.]]></description><guid isPermaLink="false">4abf1536-2c82-411a-be74-e85d2155af5a</guid><pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate><dc:creator>Simon Sapin</dc:creator></item><item><title>Practical Rust: Installation &amp; Hello World</title><link>https://medium.com/@gallantmrgn/practical-rust-installation-hello-world-d1e52aac1f9</link><description><![CDATA[Recently, a new language called Rust has come into the spotlight, aiming to be a ‘blazingly fast’ language meant for systems programming…]]></description><guid isPermaLink="false">49ad5651-12e0-4374-9586-d9a86291c165</guid><pubDate>Fri,  2 Feb 2018 18:08:04 +0000</pubDate><dc:creator>Morgan A. Gallant</dc:creator></item><item><title>Rust Lifetimes for the Uninitialised</title><link>http://asquera.de/blog/2018-01-29/rust-lifetimes-for-the-uninitialised/</link><description><![CDATA[Lifetimes are a interesting subject: a lot of people seem to gain a day-to-day familiarity with them, without fully understanding what they are. Maybe, they are truly Rust's Monads. Let's talk about what they are, where you encounter them and then how to get competent with them.]]></description><guid isPermaLink="false">c0b3d7ad-673f-4eb9-aa54-45447d1eafb0</guid><pubDate>Mon, 29 Jan 2018 15:30:00 +0100</pubDate><dc:creator>Florian Gilcher</dc:creator></item><item><title>Beginner Bites: A taste of Rust, a safe, concurrent and practical language!</title><link>https://hackernoon.com/a-taste-of-rust-6d8fc60e050</link><description><![CDATA[Experience a sampler of Rust. You’ll get set up, then solve the first Project Euler problem in Rust. This is a language you can’t miss.]]></description><guid isPermaLink="false">b4def99b-cdec-46c6-9816-a6c85c999ae9</guid><pubDate>Sun,  4 Feb 2018 11:01:00 +0000</pubDate><dc:creator>Andrew Jakubowicz</dc:creator></item></channel></rss>