<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Read Rust - Getting Started</title><link>https://readrust.net/</link><description>Getting Started posts on Read Rust</description><item><title>Rust Tutorial</title><link>https://slashtutorial.com/rust/</link><description>The aim of this tutorial is to take you to a place where you can read and write enough Rust to fully appreciate the excellent learning resources available online, in particular The Book. It’s an opportunity to try before you buy, and get enough feeling for the power of the language to want to go deeper.</description><guid isPermaLink="false">9ecf3a00-a806-4914-a3e2-fd360f7199ed</guid><pubDate>Mon, 12 Mar 2018 16:23:55 +0000</pubDate><dc:creator>Slash Tutorial</dc:creator></item><item><title>Get started with the Rust programming language</title><link>https://www.ibm.com/developerworks/opensource/library/os-developers-know-rust/index.html?ca=drs</link><description>A recent Stack Overflow survey found that almost 80% of respondents loved using or wanted to develop with the Rust language. That&apos;s an incredible number! So, what&apos;s so good about Rust? This article explores the high points of this C-like language and illustrates why it should be next on your list of languages to learn.</description><guid isPermaLink="false">64fe2d3c-c0cb-41a2-8faf-08d19e59c439</guid><pubDate>Thu,  8 Mar 2018 00:00:00 +0000</pubDate><dc:creator>M. Tim Jones</dc:creator></item><item><title>Getting started with Rust: Reference and Lifetime</title><link>https://www.mathieu-nivoliez.com/posts/2018-03-05-getting-started-with-rust-reference-and-lifetime.html</link><description>Hello everyone! You were waiting for it, and now you are going to get it! Ladies and gentlemen, today we are going to talk about reference and lifetime!</description><guid isPermaLink="false">bd7d2caa-818d-4950-9eca-72588b038bed</guid><pubDate>Mon,  5 Mar 2018 00:00:00 +0000</pubDate><dc:creator>Mathieu Nivoliez</dc:creator></item><item><title>Getting Rusty with Vim</title><link>https://ddrscott.github.io/blog/2018/getting-rusty-with-vim/</link><description> After dabbing in Go and Crystal, I figured I&apos;d give Rust a try. Of course I used Vim along the way. Here are some notes I compiled after my first session.</description><guid isPermaLink="false">5b0beffe-60dc-4ce3-b137-738fb51fd570</guid><pubDate>Sun,  4 Mar 2018 06:30:00 -0600</pubDate><dc:creator>Scott Pierce</dc:creator></item><item><title>Rust for Java Devs – Structs</title><link>https://lankydanblog.com/2018/03/01/rust-for-java-devs-structs/</link><description>Next up in Rust for Java Devs we have structs. They are used to hold data within a logical unit that can be passed to other functions or execute their own methods on the values that they store. Now this sounds very familiar… Java objects do the same thing. For example if you took a POJO (Plain Old Java Object) you also pass it to other methods or execute the object’s own methods. In this nature they are alike, but they do have their differences. In this post we will look into creating structs, retrieving their values, defining their own methods and how to execute them.</description><guid isPermaLink="false">4c17c0f4-8148-4408-a54f-733e20c89189</guid><pubDate>Thu,  1 Mar 2018 20:03:54 +0000</pubDate><dc:creator>Dan Newton</dc:creator></item><item><title>Rust for Java Devs – Creating functions</title><link>https://lankydanblog.com/2018/02/18/rust-for-java-devs-creating-functions/</link><description>In this post of Rust for Java Devs we will look at creating functions in Rust. Functions in Rust do not differ that much from Java methods but there are a few little differences. There is also the topic of Rust’s lifetimes compared to Java’s garbage collection that one could argue separates the two from each other a bit more, but for this post I will focus on the structure of writing a function in Rust. Due to the similarities between the two, I believe most Java developers will have no problem in figuring out what arguments a Rust function takes, what it outputs and where the output is returned from.</description><guid isPermaLink="false">e5f704af-b1ed-4757-b96d-80402ba3e601</guid><pubDate>Sun, 18 Feb 2018 18:28:19 +0000</pubDate><dc:creator>Dan Newton</dc:creator></item><item><title>Setting up Windows 10 for programming (in Rust)</title><link>https://exyr.org/2018/windows/</link><description>Lately I’ve been working with Windows-specific APIs, so I needed to get a Windows dev environment. I’ve mostly used Linux for many years now, so for me programming on Windows feels very foreign. Getting to a point where I started being productive took a number of steps, so here they are, if only for me to find them next time.</description><guid isPermaLink="false">4abf1536-2c82-411a-be74-e85d2155af5a</guid><pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate><dc:creator>Simon Sapin</dc:creator></item><item><title>Practical Rust: Installation &amp; Hello World</title><link>https://medium.com/@gallantmrgn/practical-rust-installation-hello-world-d1e52aac1f9</link><description>Recently, a new language called Rust has come into the spotlight, aiming to be a ‘blazingly fast’ language meant for systems programming…</description><guid isPermaLink="false">49ad5651-12e0-4374-9586-d9a86291c165</guid><pubDate>Fri,  2 Feb 2018 18:08:04 +0000</pubDate><dc:creator>Morgan A. Gallant</dc:creator></item><item><title>Rust Lifetimes for the Uninitialised</title><link>http://asquera.de/blog/2018-01-29/rust-lifetimes-for-the-uninitialised/</link><description>Lifetimes are a interesting subject: a lot of people seem to gain a day-to-day familiarity with them, without fully understanding what they are. Maybe, they are truly Rust&apos;s Monads. Let&apos;s talk about what they are, where you encounter them and then how to get competent with them.</description><guid isPermaLink="false">c0b3d7ad-673f-4eb9-aa54-45447d1eafb0</guid><pubDate>Mon, 29 Jan 2018 15:30:00 +0100</pubDate><dc:creator>Florian Gilcher</dc:creator></item><item><title>Beginner Bites: A taste of Rust, a safe, concurrent and practical language!</title><link>https://hackernoon.com/a-taste-of-rust-6d8fc60e050</link><description>Experience a sampler of Rust. You’ll get set up, then solve the first Project Euler problem in Rust. This is a language you can’t miss.</description><guid isPermaLink="false">b4def99b-cdec-46c6-9816-a6c85c999ae9</guid><pubDate>Sun,  4 Feb 2018 11:01:00 +0000</pubDate><dc:creator>Andrew Jakubowicz</dc:creator></item></channel></rss>