<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Read Rust - Getting Started</title><link>https://readrust.net/</link><description>Getting Started posts on Read Rust</description><item><title>Explained: How does async work in Rust?</title><link>https://dev.to/gruberb/explained-how-does-async-work-in-rust-46f8</link><description><![CDATA[This article will outline an overview of the why and how async exists in Rust.]]></description><guid isPermaLink="false">881b9dbf-f50a-4a3d-9992-de8c093250bf</guid><pubDate>Tue,  2 Apr 2019 00:00:00 +0000</pubDate><dc:creator>Bastian Gruber</dc:creator></item><item><title>Five Super Helpful Rust Things That Nobody Told You About</title><link>https://saghm.github.io/five-rust-things/</link><description><![CDATA[Pretty-print debug, unimplemented!, ”..” struct literal operator, Pattern match guards, and Padding format operator.]]></description><guid isPermaLink="false">86c50475-46ad-47b1-83b7-a3d63fecbb4f</guid><pubDate>Sat, 30 Mar 2019 09:19:00 +0000</pubDate><dc:creator>Saghm Rossi</dc:creator></item><item><title>Rust Basics: the Add Trait</title><link>https://chilimatic.hashnode.dev/rust-basics-the-add-trait-cjtoke4yh002t8hs1c61p82mz</link><description><![CDATA[In my journey for better understanding of anything I tend to always return to the basics.
To often we base our assumptions on blind 'guess-timations' where we don't understand why something is actually happening but we observed that certain patterns ...]]></description><guid isPermaLink="false">5ee0634e-47e9-4354-982f-fdbfdd60a3b1</guid><pubDate>Mon, 25 Mar 2019 16:27:00 +0000</pubDate><dc:creator>j</dc:creator></item><item><title>Your first CLI tool with Rust</title><link>https://www.demainilpleut.fr/your-first-cli-tool-with-rust/</link><description><![CDATA[We will go through on how we can build command line tools with Rust, and maybe have fun along the way.]]></description><guid isPermaLink="false">f59796ce-77bb-4c3e-b11a-161df3bde835</guid><pubDate>Fri, 22 Mar 2019 00:00:00 +0000</pubDate><dc:creator>Jérémie Veillet</dc:creator></item><item><title>Rust: The Hard Parts - Part One: References and borrowing</title><link>https://naftuli.wtf/2019/03/20/rust-the-hard-parts/</link><description><![CDATA[Rust has a perception of being a very difficult language to learn. I had a similar experience, but just as I was told, there is a point where things start to get a lot easier. This post aims to describe the hard parts that I had to get through in order to start being productive with Rust in the belief that this may help others get over the hill to that sweet spot of infinite bliss and productivity. In this post, I’m going to cover references and borrowing.]]></description><guid isPermaLink="false">dad7fd3a-4891-4ddc-bf77-81668ffd5ea7</guid><pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate><dc:creator>Naftuli Kay</dc:creator></item><item><title>Intro to web programming in Rust for NodeJS developers</title><link>https://medium.com/@gruberbastian/intro-to-web-programming-in-rust-for-nodejs-developers-1a9c048c4de1</link><description><![CDATA[Rust is different. You can pick up Python or Ruby over the weekend, create a first CRUD application and be happy with the results. With Rust… with Rust you will struggle to pass a String to a different method, change and return it. You then will order the Rust book, see its size, *sigh* and get started. After a few weeks fighting through the book after work, you give up and wait until someone else creates an easy-to-follow tutorial. Here is your “easy” tutorial.]]></description><guid isPermaLink="false">58a0a3ec-5b93-4e53-bcd0-d8df56d02848</guid><pubDate>Sun, 10 Mar 2019 10:53:02 +0000</pubDate><dc:creator>Bastian Gruber</dc:creator></item><item><title>Making a Case: Rust for Python developers</title><link>https://medium.com/@rajasekar3eg/making-a-case-rust-for-python-developers-1a114e2d89f4</link><description><![CDATA[Python developers encompass a huge variety of developers. I am going to target use cases for a particular set of python developers: Machine Learning developers. But for others too, it might prove to be useful.]]></description><guid isPermaLink="false">02cf2c55-f306-4c76-a340-15148b8b1886</guid><pubDate>Sun, 10 Mar 2019 08:58:53 +0000</pubDate><dc:creator>Raja Sekar</dc:creator></item><item><title>Safe Way to access private fields in Rust</title><link>https://blog.knoldus.com/safe-way-to-access-private-fields-in-rust/</link><description><![CDATA[Do you want your fields to be private but got stuck in accessing them from other module. Then this blog let you know the ways to access the private fields as well as which one is safer way.]]></description><guid isPermaLink="false">b72bfa37-94f9-4758-9028-225ce6f93877</guid><pubDate>Mon,  4 Mar 2019 06:04:58 +0000</pubDate><dc:creator>Amita Yadav</dc:creator></item><item><title>Working with Command Line Arguments in Rust</title><link>https://blog.knoldus.com/working-with-command-line-arguments-in-rust/</link><description><![CDATA[Command Line Arguments are used to control program from outside instead of hard-coding those values inside the code and supplied to program when it is invoked. In this blog, I’ll demystify you how to use Command Line Arguments in the Rust Programming Language.]]></description><guid isPermaLink="false">12b9edfa-c917-436a-b001-76305b65eb0d</guid><pubDate>Tue, 26 Feb 2019 07:05:40 +0000</pubDate><dc:creator>Pawan Bisht</dc:creator></item><item><title>My experience with Rust</title><link>http://subhojit777.in/rust-language-experience/</link><description><![CDATA[I started learning Rust in 2018. I completed my work in an open source project and was thinking about learning a new programming language. My motive was to learn a language that allows you to control the lower level of a high-level programming language. I considered learning Golang, but, in most of the online articles I learned that Rust (being a system programming language) gives you more control than Go, however, the learning curve is far steeper than Go. I had no worries about deadlines or time, therefore I chose Rust.]]></description><guid isPermaLink="false">fb473ea5-9d84-4c2d-9926-282c55dcbf18</guid><pubDate>Wed, 20 Feb 2019 00:00:00 +0000</pubDate><dc:creator>Subhojit Paul</dc:creator></item><item><title>You can live without Exceptions, if you are using Rust</title><link>https://blog.knoldus.com/you-can-live-without-exceptions-if-you-are-using-rust/</link><description><![CDATA[If you are coming from Java background, where you have used Exception Handling extensively and you have started working on new language like Rust, which doesn’t support Exception Handling then you will be forced to think that does such kind of world really exists?]]></description><guid isPermaLink="false">a40e4318-64e5-4929-800f-4308c242b49c</guid><pubDate>Mon, 18 Feb 2019 08:18:34 +0000</pubDate><dc:creator>Ayush Mishra</dc:creator></item><item><title>A brief introduction to Rust</title><link>https://odetorust.com/a-brief-introduction-to-rust/</link><description><![CDATA[I heard of Rust back in 2015 at a meetup. I have since spent time with Rust on and off. In 2018, I had more time to explore Rust. Thinking of using blogging as a learning tool while going further down the rabbit hole of Rust, I setup this blog. In this post, I would like to briefly walk through some important features of the language.]]></description><guid isPermaLink="false">9700147a-735e-4903-b9fb-f91d6de54fe0</guid><pubDate>Thu, 14 Feb 2019 20:25:00 +0000</pubDate><dc:creator>Nyi Nyi Than</dc:creator></item><item><title>Structure your data in Rust</title><link>https://blog.knoldus.com/structure-your-data-in-rust/</link><description><![CDATA[Structuring of data in the correct way is very important. In java and C++, we use Class & Object. In C, we use structures, unions, and enums. We know that Rust adopts some features of functional programming and OOPs. Class and object is the main weapon of OOPs but how does Rust provide that functionality?]]></description><guid isPermaLink="false">08743d28-0fe1-42f6-ac4a-50f3698891a0</guid><pubDate>Mon, 11 Feb 2019 08:44:09 +0000</pubDate><dc:creator>Amita Yadav</dc:creator></item><item><title>Rust for Node developers</title><link>https://github.com/Mercateo/rust-for-node-developers</link><description><![CDATA[An introduction to the Rust programming language for Node developers.]]></description><guid isPermaLink="false">e1fdb8ec-e1f8-4718-ba5d-bb3bdf897506</guid><pubDate>Thu, 31 Jan 2019 23:59:00 +0000</pubDate><dc:creator>Donald Pipowitch</dc:creator></item><item><title>Learning Rust in 2019</title><link>https://www.ragona.com/posts/learning_rust_2019</link><description><![CDATA[I spent the month of January playing with Rust in my free time. In this article I'm going to share some quick notes on some of the mistakes I made while learning, the resources I used to get unblocked, and what I took away from the experience. My hope is that I can save other Rust newcomers a bit of time by documenting some of the things that I banged my head into. Now, it's worth noting that I'm still a Rust beginner, so if I got something wrong please let me know so that I can update it.]]></description><guid isPermaLink="false">3755147e-f87f-4bc8-ac54-2a75b8f55f11</guid><pubDate>Thu, 31 Jan 2019 00:00:00 +0000</pubDate><dc:creator>Ryan Ragona</dc:creator></item><item><title>Reflections on Learning Rust By Building Punchtop</title><link>https://hyperbo.la/w/reflections-on-learning-rust/</link><description><![CDATA[To learn Rust, I implemented an audio game. There were some things I liked and some things I didn't. Some things were easy and some were hard. And there were plenty of libraries that were a joy to use.]]></description><guid isPermaLink="false">e87f2464-ee95-4e9a-8d8c-4ccbba6b165c</guid><pubDate>Sun, 27 Jan 2019 00:00:00 +0000</pubDate><dc:creator>Ryan Lopopolo</dc:creator></item><item><title>Learning the Rust Programming Language</title><link>https://www.aarongreenlee.com/blog/beginning-to-learn-rust-programming-language-rustlang/</link><description><![CDATA[Rust has been on my radar for some time and I aspire to become proficient with the Rust Programming Language in 2019. Initially, my interest in Rust was sparked by the memory ownership model. With WASM support going mainstream I thought I’d give Rust a deeper look and have enjoyed my experience so far. This post is a living post that will continue to be revised and appended as I learn more about Rust.]]></description><guid isPermaLink="false">4f4e3ed0-1852-4954-9cde-1d74c7e54b6f</guid><pubDate>Mon, 21 Jan 2019 00:00:00 +0000</pubDate><dc:creator>Aaron Greenlee</dc:creator></item><item><title>Learning Rust in 2019</title><link>https://medium.com/rustadventures/learning-rust-in-2019-768ac560ba0</link><description><![CDATA[If you have made up your mind to learn this modern programming language in 2019, this is a small attempt for new learners to have an unofficial learning path for getting to know and mastering Rust. I am still learning Rust and I will update post as and when required. This is iteration 1.]]></description><guid isPermaLink="false">115896de-7fb5-4c2e-b969-1c63550669e1</guid><pubDate>Fri, 18 Jan 2019 04:41:29 +0000</pubDate><dc:creator>Sumit Agrawal</dc:creator></item><item><title>Supernova: rustfmt</title><link>https://medium.com/@chayadanz/supernova-rustfmt-5c3d0c56831c</link><description><![CDATA[I previously wrote about Supernova, and my experience contributing to a project in a language I had never used before. Although my PR is still WIP status (I need to find time to get a solid grasp on Date/Time stuff in Rust, specifically using the chrono crate), I picked up some smaller issues in the interim to stay involved.

My most recent PR’s involved working off of a previous PR which introduced code linting with clippy, and taking it one step further by introducing rustfmt to help ensure consistent coding style in our CI pipeline.]]></description><guid isPermaLink="false">f941f6bf-eaf1-428a-a5d0-f8e35d504a3a</guid><pubDate>Thu, 10 Jan 2019 04:22:26 +0000</pubDate><dc:creator>Chaya Danzinger</dc:creator></item><item><title>How I learned to love Rust</title><link>https://medium.com/@geis/how-i-learned-to-love-rust-abfac6c1f6d1</link><description><![CDATA[A journey from hating Rust to loving it more than any other language.]]></description><guid isPermaLink="false">069e9371-d000-454f-b73d-0b082a92988b</guid><pubDate>Mon,  7 Jan 2019 21:07:51 +0000</pubDate><dc:creator>Grégoire Geis</dc:creator></item><item><title>Rust for algorithms</title><link>https://ilyabiz.com/2018/12/rust-for-algorithms/</link><description><![CDATA[How I decided to challenge myself and solve coding tasks using Rust]]></description><guid isPermaLink="false">525bee43-14cb-422e-8b91-58322a8d2c63</guid><pubDate>Sun, 23 Dec 2018 20:54:31 +0000</pubDate><dc:creator>Ilya Bizyaev</dc:creator></item><item><title>How to Become a Rust Super-developer</title><link>https://hashnode.com/post/how-to-become-a-rust-super-developer-cjpv1ee7e000buhs2aqrdw2ym</link><description><![CDATA[This is an article and a tutorial about stumbling and failing. It is about trying hard, and giving up - just to start all over again. All for the one goal - becoming the master of coding in Rust.]]></description><guid isPermaLink="false">5bfa329e-1d71-4b98-af03-90c1672ebb8b</guid><pubDate>Wed, 19 Dec 2018 00:00:00 +0000</pubDate><dc:creator>Marco Alka</dc:creator></item><item><title>Rust: Error handling – Learning Rust</title><link>https://medium.com/learning-rust/rust-error-handling-72a8e036dd3</link><description><![CDATA[Welcome Back! This is the fifth post of Learning Rust series. Rust is a well designed language and safety is one of the main focus area of it. Its design decisions have been taken to prevent errors and major issues of systems programs like data races, null pointer exceptions, sensitive data leakage through exceptions and etc. So today, we are going to talk more about the concepts behind Error Handling in Rust.]]></description><guid isPermaLink="false">3c8b4f15-959d-40cc-a79c-1a375f498bb0</guid><pubDate>Thu,  6 Dec 2018 19:11:01 +0000</pubDate><dc:creator>Dumindu Madunuwan</dc:creator></item><item><title>8 Lessons from First Days of Advent of Code 2018</title><link>https://sts10.github.io/2018/12/02/lessons-from-first-two-days-of-advent-of-code-2018.html</link><description><![CDATA[I’ve got two days of Advent of Code 2018 under my belt and four stars to show for it! But I’ll be the first to admit that I had plenty of help, so I thought it only fair that I write out some of the things I’ve already learned about Rust.]]></description><guid isPermaLink="false">f8aa1176-9ae2-447f-b914-a6950612d7f2</guid><pubDate>Sun,  2 Dec 2018 23:22:00 +0000</pubDate><dc:creator>Sam Schlinkert</dc:creator></item><item><title>Learning a new language for more than 2 months (feat. Exercism)</title><link>https://cslai.coolsilon.com/2018/11/06/learning-a-new-language-for-more-than-2-months-feat-exercism/</link><description><![CDATA[Usually I take about a week to learn a new language so I can start doing some real work with it. After all a programming language (at least the high level and dynamic ones) is just assignment, calculation, branching, looping and reuse (and in certain cases, concurrency/parallelism, not gonna dive deep in defining the difference though). Well, that was true until I started learning Rust, partly for my own leisure. I still don’t feel comfortable writing a complete Rust code. Though I really like the language.]]></description><guid isPermaLink="false">09e9a0eb-339f-496e-8477-911e89774938</guid><pubDate>Tue,  6 Nov 2018 11:18:35 +0000</pubDate><dc:creator>Jeffrey04</dc:creator></item><item><title>Summer School With The Rust Compiler</title><link>http://patshaughnessy.net/2018/10/24/summer-school-with-the-rust-compiler</link><description><![CDATA[Learning Rust is hard for everyone, but it’s even worse for me because I’ve been working with Ruby during past ten years. Switching to Rust from Ruby is leaving an anything-goes hippie commune to a summer school for delinquent programmers run by a sadistic and unforgiving teacher. Why would anyone use a compiler like this? The answer is simple: to learn how to write better code.]]></description><guid isPermaLink="false">a758c495-92fa-476d-9758-a916dc50c2f9</guid><pubDate>Wed, 24 Oct 2018 03:00:00 +0000</pubDate><dc:creator>Pat Shaughnessy</dc:creator></item><item><title>Rust can be difficult to learn and frustrating, but it’s also the most exciting thing in software development in a long time</title><link>https://www.influxdata.com/blog/rust-can-be-difficult-to-learn-and-frustrating-but-its-also-the-most-exciting-thing-in-software-development-in-a-long-time/</link><description><![CDATA[I recently decided to put serious effort into learning the Rust programming language. I saw it coming up frequently in interesting projects (e.g. ripgrep) and kept hearing good things about it. My hesitation to picking up Rust since its 1.0 release in 2015 came from two fronts. First, I’m completely invested in Go because of InfluxDB. Second, I heard that it was not the easiest thing to learn. While I don’t normally shy away from difficult tasks, I was hesitant because I believe that many developer tools that take off do so because they are easy to use or give developers significant productivity gains. More often than not, I want to invest my time in tools that I think have longevity that will get some critical mass in the market.]]></description><guid isPermaLink="false">fae7cb69-a7bf-4cb1-9d1d-f5e703312ef7</guid><pubDate>Mon, 22 Oct 2018 18:45:16 +0000</pubDate><dc:creator>Paul Dix</dc:creator></item><item><title>My Experience With Learning Rust</title><link>https://medium.com/@nathanielbarragan/my-experience-with-learning-rust-bbcb6b7c1063</link><description><![CDATA[Although I didn’t start writing this blog when I started writing in Rust, I remember clearly why I started writing in Rust. From what I had been doing in C#, none of it utilized multiple threads. Multi-threaded programming had always been a sore topic for me. Things like thread synchronization and message passing never really made sense to me. I learned Rust mainly due to its promises for ease of programming for multiple threads. Once hearing that things like parts of Firefox were written using it, and the Mozilla themselves were very strongly invested in Rust, I had more reason to start writing in it. I’d assume that if Mozilla were to invest so much in a programming language, it must have some sort of benefits over your usual C and C++ programming languages. Even further than that, I’ve heard of some game studios adopting Rust in their games and I was pretty much hooked at that point.]]></description><guid isPermaLink="false">60825132-c54b-4297-9f81-936601b76f64</guid><pubDate>Mon, 22 Oct 2018 02:29:02 +0000</pubDate><dc:creator>Nathaniel Barragan</dc:creator></item><item><title>Building a command-line todo app in Rust</title><link>https://medium.com/@devashishdxt/building-a-command-line-todo-app-in-rust-a89bb7af91c3</link><description><![CDATA[In this tutorial, we are going to create a simple command-line todo app. By the end of this tutorial, you should have a basic understanding of Rust programming language, building command-line apps in Rust, and performing file-system operations in Rust.]]></description><guid isPermaLink="false">ceb7c2a6-d905-4b13-8f42-4aa42cd9b3e3</guid><pubDate>Fri, 12 Oct 2018 13:14:56 +0000</pubDate><dc:creator>Devashish Dixit</dc:creator></item><item><title>Understanding Compilers — For Humans (Version 2)</title><link>https://towardsdatascience.com/understanding-compilers-for-humans-version-2-157f0edb02dd</link><description><![CDATA[Understanding your compiler internally allows you to use it effectively. Walk through how programming languages and compilers work in this chronological synopsis. Lots of links, example code, and diagrams have been composed to aid in your understanding.

Understanding Compilers — For Humans (Version 2) is a successor to my second article on Medium, with over 21 thousand views. I am so glad I could make a positive impact on people’s education, and I am excited to bring a complete rewrite based on the input I received from the original article. I chose Rust as this work’s primary language.]]></description><guid isPermaLink="false">8e066aec-6f09-44df-b763-b4d44b772fb5</guid><pubDate>Sat, 29 Sep 2018 16:01:01 +0000</pubDate><dc:creator>Luke Wilson</dc:creator></item><item><title>Rust: Pass-By-Value or Pass-By-Reference?</title><link>https://blog.ryanlevick.com/posts/rust-pass-value-or-reference/</link><description><![CDATA[The other day, a friend of mine who is learning Rust asked if Rust is a pass-by-value or a pass-by-reference language. For the unfamiliar, pass-by-value means that when passing an argument to a function it gets copied into the new function so that the value in the calling function and the value in the called function are two separate values. Changes to one will not in turn result in the same change to the other. Pass-by-reference, on the other hand, means that when passing an argument to a function, it doesn’t copy the value but rather the argument is merely a transparent reference to the original value. This means changes to the value in the called function change the value in the calling function since they are the same value.]]></description><guid isPermaLink="false">e112cc10-746d-4151-b0e4-76832be74e09</guid><pubDate>Wed, 12 Sep 2018 00:00:00 +0000</pubDate><dc:creator>Ryan Levick</dc:creator></item><item><title>Rust: My first impressions</title><link>https://erik.doernenburg.com/2018/09/rust-my-first-impressions/</link><description><![CDATA[At work I’m seeing more and more embedded software; over the past few years in, among others, coffee machines, forklifts, and cars. Embedded software needs to be fast and extremely efficient with hardware resources. In some cases it not even acceptable to have a tiny break for some garbage collection. So, typical tech stacks for backend development can’t be used, never mind anything that uses browser technologies. Unsurprisingly, almost all embedded software is written in C++, and, in fact, that is also what I used recently for a personal project with a micro-controller.

Looking through the remaining choices, I went past Golang, which uses garbage collection, and set my eyes on Rust. In this post I’ll describe my first impressions, some of the frustrating moments, but also the extremely impressive performance on a larger piece of code.]]></description><guid isPermaLink="false">6d814a89-7614-47d1-b3f4-b660279b379d</guid><pubDate>Fri,  7 Sep 2018 00:00:00 +0200</pubDate><dc:creator>Erik Dörnenburg</dc:creator></item><item><title>Adventures in Rust: Futures and Tokio</title><link>http://bryangilbert.com/post/code/rust/adventures-futures-tokio-rust/</link><description><![CDATA[One of my newer hobbies recently has been learning and toying around with Rust. Recently, as part of this learning process, I've started implementing an IP address lookup service as a small side project. During the course of implementing this project I ran into what turned out to be a bit of a hurdle to tackle, specifically performing reverse dns resolution asynchronously.

My hope is that through exploring this problem, I can aid others in understanding these concepts which can be initially difficult grasp. This is especially so as the behavior and function of Futures vary wildly between various languages and runtimes.]]></description><guid isPermaLink="false">7b94766b-f2c3-42f6-b215-7b63f07a4e95</guid><pubDate>Tue,  4 Sep 2018 00:00:00 +0000</pubDate><dc:creator>Bryan Gilbert</dc:creator></item><item><title>O(1) sum_of_multiples() in Rust</title><link>https://nicholassterling.wordpress.com/2018/08/31/o1-sum_of_multiples-in-rust/</link><description><![CDATA[I had been working mostly in Scala for a while, then took a diversion into Swift and Objective C.  I wanted to learn another language after that, and had all but decided on Clojure.  But Rust kept nagging at me — there was something about it. So I watched some videos, then read the book, and then started the Rust track at Exercism.io.]]></description><guid isPermaLink="false">e989a06c-ac0a-4a49-9591-8867e574c37b</guid><pubDate>Fri, 31 Aug 2018 05:51:05 +0000</pubDate><dc:creator>Nicholas Sterling</dc:creator></item><item><title>Password Generation in Ruby and Rust</title><link>https://hur.st/blog/2018/08-25-password-generation-in-ruby-and-rust/</link><description><![CDATA[Writing the same password generator in two different languages to learn more Rust.]]></description><guid isPermaLink="false">8b60e040-4635-4a84-b8a6-3e0f2933f066</guid><pubDate>Sat, 25 Aug 2018 00:00:00 +0000</pubDate><dc:creator>Thomas Hurst</dc:creator></item><item><title>A Beginner’s Guide to Rust Macros ✨</title><link>https://medium.com/@phoomparin/a-beginners-guide-to-rust-macros-5c75594498f1</link><description><![CDATA[Demystifying one of Rust’s most powerful feature.]]></description><guid isPermaLink="false">9f3fb115-f832-421a-bf28-18148cc3bde0</guid><pubDate>Sat, 18 Aug 2018 18:35:50 +0000</pubDate><dc:creator>Phoomparin Mano</dc:creator></item><item><title>Journey into rust #1: Conway’s Game</title><link>https://jonathansteyfkens.com/rust/opengl/graphics/2018/08/07/rust-conway-game-of-life.html</link><description><![CDATA[The language rust has been popping up on my twitter feed and my personal life more and more. It’s been promoted and presented as the ultra safe language, so naturally I decided to check it out. The upcoming series of posts “Journey into rust” will describe and document my experiences using rust, hopefully explaining certain concepts that rust does differently. This will all be written from a C++ programmers standpoint that was thought writing Object Oriented code. I encourage you the reader to think critically and correct where necessary.

On to the actual first post! After reading “the Rust Programming Language” I wanted to get my hands dirty and actually write some code. I like graphical applications and using low level graphics API’s so I decided to implement a cellular automation in rust. But just implementing cellular automation isn’t very exciting, is it? What if we could do this on the GPU…And off I went on my journey to create Conway’s game of life in rust.]]></description><guid isPermaLink="false">b7c9c3df-7ecd-41f3-8c89-5c1d35298b7b</guid><pubDate>Tue,  7 Aug 2018 22:30:01 +0000</pubDate><dc:creator>Jonathan Steyfkens</dc:creator></item><item><title>Rust Modules In Less Than 5 Minutes</title><link>https://medium.com/@erik.tate/rust-modules-in-less-than-5-minutes-9bff7f617798</link><description><![CDATA[When I started learning Rust, the module system did not at first seem to be a shining beacon of intuitive design. The Rust documentation is phenomenal, but there are definitely some areas that I found difficult to follow; this being one such topic. So I thought I might take a stab at writing up a guide that I think would have helped me through the awkward growing pains a bit quicker.]]></description><guid isPermaLink="false">7d6c2d9c-16c8-42be-93d5-d61cc9dac117</guid><pubDate>Sun,  5 Aug 2018 23:49:43 +0000</pubDate><dc:creator>Erik Tate</dc:creator></item><item><title>Programming Servo: How to match</title><link>https://medium.com/programming-servo/programming-servo-how-to-match-b76c43f76fe6</link><description><![CDATA[Today, let’s share some lessons learned from contributing to Servo, which is a great way to learn Rust.]]></description><guid isPermaLink="false">f0e4ab48-bf11-47bf-9267-4da78f78bdcc</guid><pubDate>Fri, 27 Jul 2018 04:37:21 +0000</pubDate><dc:creator>Gregory Terzian</dc:creator></item><item><title>In Memes We Rust</title><link>https://medium.com/@glitteringkatie/in-memes-we-rust-5c920b1e9af7</link><description><![CDATA[Learning Rust to make a Mocking SpongeBob text generator]]></description><guid isPermaLink="false">2cac0c52-a34d-4124-ab89-d117f7b69118</guid><pubDate>Wed, 25 Jul 2018 20:11:46 +0000</pubDate><dc:creator>Katie Hughes ✨</dc:creator></item><item><title>How Rust made me rethink my view about compilers</title><link>https://defphil.com/post/2018/07/15/staying-rusty/</link><description><![CDATA[It's funny how universe aligns things, just few days ago I stumbled upon Rust koans. Already familiar way of learning and exercising, patented by Ruby programmers, where you correct tests and make them work. Also whole method of learning was similar to reading 'Little Schemer' fairly popular book among fellow Lispers. So I'll use this blog post to summarize few early impressions about Rust, and let me tell you straight away, I am loving it so far!]]></description><guid isPermaLink="false">d6b87789-dd86-49e2-91b6-692607e32f67</guid><pubDate>Sun, 15 Jul 2018 00:00:00 +0000</pubDate><dc:creator>Filip Miletic</dc:creator></item><item><title>Ownership in Rust, Part 2</title><link>https://medium.com/@thomascountz/ownership-in-rust-part-2-c3e1da89956e</link><description><![CDATA[It’s still not problem.]]></description><guid isPermaLink="false">62456010-4ef4-4f1d-87f0-6e0c64929d82</guid><pubDate>Wed, 11 Jul 2018 16:55:03 +0000</pubDate><dc:creator>Thomas Countz</dc:creator></item><item><title>Ownership in Rust, Part 1</title><link>https://medium.com/@thomascountz/ownership-in-rust-part-1-112036b1126b</link><description><![CDATA[It’s not my problem.]]></description><guid isPermaLink="false">c0f25118-a040-4f57-bd18-1594ce4e72f6</guid><pubDate>Mon,  9 Jul 2018 20:58:44 +0000</pubDate><dc:creator>Thomas Countz</dc:creator></item><item><title>Learning Rust 02: an ls clone</title><link>https://routley.io/tech/2018/07/08/learning-rust-02.html</link><description><![CDATA[In this post, I’m building an ls clone. It’s pretty similar to the last post’s pwd clone. It’s called rls.]]></description><guid isPermaLink="false">078a2508-9729-477b-915e-3a72fb6f66e9</guid><pubDate>Sun,  8 Jul 2018 00:00:00 +0100</pubDate><dc:creator> James Routley</dc:creator></item><item><title>Learning Rust — Conspiracies, Databases, and Diesel.rs</title><link>https://medium.com/@rippinrobr_66849/2-conspiracies-databases-and-diesel-rs-ac1d8d3499b3</link><description><![CDATA[This post is the second in a series of posts where I share my experience learning Rust. I’m building out a conspiracy theories API to help me get more familiar with Rust and to have a little fun. Since I am new to Rust, I welcome any and all feedback, especially from developers who have been using Rust for quite some time, leave a comment below or contact me on Twitter. With that out of the way, it is time to put your foil lined hat on and start storing the conspiracies in a database.]]></description><guid isPermaLink="false">325fc83d-bba5-48c8-8443-fdd5dd21f8ed</guid><pubDate>Wed, 30 May 2018 21:04:06 +0000</pubDate><dc:creator>Rob Rowe</dc:creator></item><item><title>On learning Rust</title><link>https://medium.com/@AugustinLF/on-learning-rust-69ba956a63e3</link><description><![CDATA[But recently I decided to give Rust a go. And I must admit that I’m extremely surprised. Rust, like OCaml is a pretty low level language (it is a system programming language). After six years without seeing any pointers, I can’t say that I was happy. But the Rust compiler, by being extremely safe actually makes that easy.]]></description><guid isPermaLink="false">4ae850d3-305a-4fb4-826d-853972364683</guid><pubDate>Wed, 16 May 2018 14:01:05 +0000</pubDate><dc:creator>Augustin Le Fèvre</dc:creator></item><item><title>Get to know Rust</title><link>https://www.ibm.com/developerworks/opensource/library/os-know-rust/index.html</link><description><![CDATA[If you have ever written software, you have undoubtedly asked yourself, "What language should I write this in?" It's a valid question. Does your code need to be as fast as possible? Will it be running on the Web? Will the code be on the back end or the front? All languages have their niches, and Rust is no different.

Rust is a statically typed compiled language that fills the roles that most users use C or C++ for. Unlike C or C++, though, Rust also encroaches on territory that C# and the Java™ language have dominated for much of this century: Rust is a language that is memory safe and operating system agnostic, meaning that it can run on any computer. Essentially, you get all the speed and low-level benefits of a systems language without the pesky garbage collection of those latter languages I mentioned. Excited? Yeah, me, too. Welcome to Rust! ]]></description><guid isPermaLink="false">3f1b68cd-7c14-415e-bbe9-45db4342a95e</guid><pubDate>Mon,  7 May 2018 00:00:00 +0000</pubDate><dc:creator>Dylan Hicks</dc:creator></item><item><title>WASM+Rust Tutorial</title><link>https://freemasen.github.io/wasm_tutorial/</link><description><![CDATA[A project used for a meetup talk about getting started with rust & wasm]]></description><guid isPermaLink="false">91fb984c-4084-4b2c-84e5-ebda94169657</guid><pubDate>Thu,  3 May 2018 07:30:00 +1000</pubDate><dc:creator>Robert Masen</dc:creator></item><item><title>An interactive guide to learning Rust!</title><link>https://github.com/toidiu/learn-rust</link><description><![CDATA[Fix a series to broken Rust programs to gain a deeper understanding of Rust.]]></description><guid isPermaLink="false">d4c2f839-050c-4134-868d-eab325676917</guid><pubDate>Tue, 10 Apr 2018 06:47:00 +1000</pubDate><dc:creator>toidiu</dc:creator></item><item><title>A Gentle Introduction to Rust (book)</title><link>http://stevedonovan.github.io/rust-gentle-intro/</link><description><![CDATA[Introduction to the Rust language, standard library and ecosystem]]></description><guid isPermaLink="false">cf92e0a9-88ac-4fa8-9ecd-d61078868f26</guid><pubDate>Thu,  5 Apr 2018 07:00:00 +1000</pubDate><dc:creator>Steve J Donovan</dc:creator></item><item><title>Getting started with Rust: Enum on steroids!</title><link>https://www.mathieu-nivoliez.com/posts/2018-04-01-getting-started-with-rust-enum-on-steroids.html</link><description><![CDATA[Hello everyone! Today subject was hard to decide on. But as the previous one was pretty tedious, I decided to go a subject more easy to speak of. So, today we are going to talk about enum in Rust!]]></description><guid isPermaLink="false">5e66cfa3-c153-40ab-8cad-cb8aaf01d178</guid><pubDate>Sun,  1 Apr 2018 00:00:00 +0000</pubDate><dc:creator>Mathieu Nivoliez</dc:creator></item><item><title>The tower of hanoi in Rust</title><link>https://masahiko-ofgp-notebook.blogspot.com.au/2018/03/the-tower-of-hanoi-by-rust-lang.html?m=1</link><description><![CDATA[The tower of hanoi algorithm is practice for recursive function.]]></description><guid isPermaLink="false">a15836bc-6eaf-46c9-8fe8-70bd2fada61e</guid><pubDate>Sun, 25 Mar 2018 13:23:00 +1100</pubDate><dc:creator>masahiko</dc:creator></item><item><title>Rust — Intro and Installation in Ubuntu</title><link>https://medium.com/aackam/rust-intro-and-installation-in-ubuntu-bd4720a64f31</link><description><![CDATA[Rust is a new age programming language that tries to fight our bad practices in coding. It is a Systems Programming Language, which runs…]]></description><guid isPermaLink="false">c5aa834d-c9d6-4e24-8abf-a9db4cb5cf29</guid><pubDate>Mon, 19 Mar 2018 22:36:52 +0000</pubDate><dc:creator>VIJAYAN N</dc:creator></item><item><title>Rust Tutorial</title><link>https://slashtutorial.com/rust/</link><description><![CDATA[The aim of this tutorial is to take you to a place where you can read and write enough Rust to fully appreciate the excellent learning resources available online, in particular The Book. It’s an opportunity to try before you buy, and get enough feeling for the power of the language to want to go deeper.]]></description><guid isPermaLink="false">9ecf3a00-a806-4914-a3e2-fd360f7199ed</guid><pubDate>Mon, 12 Mar 2018 16:23:55 +0000</pubDate><dc:creator>Slash Tutorial</dc:creator></item><item><title>Get started with the Rust programming language</title><link>https://www.ibm.com/developerworks/opensource/library/os-developers-know-rust/index.html?ca=drs</link><description><![CDATA[A recent Stack Overflow survey found that almost 80% of respondents loved using or wanted to develop with the Rust language. That's an incredible number! So, what's so good about Rust? This article explores the high points of this C-like language and illustrates why it should be next on your list of languages to learn.]]></description><guid isPermaLink="false">64fe2d3c-c0cb-41a2-8faf-08d19e59c439</guid><pubDate>Thu,  8 Mar 2018 00:00:00 +0000</pubDate><dc:creator>M. Tim Jones</dc:creator></item><item><title>Getting started with Rust: Reference and Lifetime</title><link>https://www.mathieu-nivoliez.com/posts/2018-03-05-getting-started-with-rust-reference-and-lifetime.html</link><description><![CDATA[Hello everyone! You were waiting for it, and now you are going to get it! Ladies and gentlemen, today we are going to talk about reference and lifetime!]]></description><guid isPermaLink="false">bd7d2caa-818d-4950-9eca-72588b038bed</guid><pubDate>Mon,  5 Mar 2018 00:00:00 +0000</pubDate><dc:creator>Mathieu Nivoliez</dc:creator></item><item><title>Getting Rusty with Vim</title><link>https://ddrscott.github.io/blog/2018/getting-rusty-with-vim/</link><description><![CDATA[ After dabbing in Go and Crystal, I figured I'd give Rust a try. Of course I used Vim along the way. Here are some notes I compiled after my first session.]]></description><guid isPermaLink="false">5b0beffe-60dc-4ce3-b137-738fb51fd570</guid><pubDate>Sun,  4 Mar 2018 06:30:00 -0600</pubDate><dc:creator>Scott Pierce</dc:creator></item><item><title>Rust for Java Devs – Structs</title><link>https://lankydanblog.com/2018/03/01/rust-for-java-devs-structs/</link><description><![CDATA[Next up in Rust for Java Devs we have structs. They are used to hold data within a logical unit that can be passed to other functions or execute their own methods on the values that they store. Now this sounds very familiar… Java objects do the same thing. For example if you took a POJO (Plain Old Java Object) you also pass it to other methods or execute the object’s own methods. In this nature they are alike, but they do have their differences. In this post we will look into creating structs, retrieving their values, defining their own methods and how to execute them.]]></description><guid isPermaLink="false">4c17c0f4-8148-4408-a54f-733e20c89189</guid><pubDate>Thu,  1 Mar 2018 20:03:54 +0000</pubDate><dc:creator>Dan Newton</dc:creator></item><item><title>Rust for Java Devs – Creating functions</title><link>https://lankydanblog.com/2018/02/18/rust-for-java-devs-creating-functions/</link><description><![CDATA[In this post of Rust for Java Devs we will look at creating functions in Rust. Functions in Rust do not differ that much from Java methods but there are a few little differences. There is also the topic of Rust’s lifetimes compared to Java’s garbage collection that one could argue separates the two from each other a bit more, but for this post I will focus on the structure of writing a function in Rust. Due to the similarities between the two, I believe most Java developers will have no problem in figuring out what arguments a Rust function takes, what it outputs and where the output is returned from.]]></description><guid isPermaLink="false">e5f704af-b1ed-4757-b96d-80402ba3e601</guid><pubDate>Sun, 18 Feb 2018 18:28:19 +0000</pubDate><dc:creator>Dan Newton</dc:creator></item><item><title>Beginner Bites: A taste of Rust, a safe, concurrent and practical language!</title><link>https://hackernoon.com/a-taste-of-rust-6d8fc60e050</link><description><![CDATA[Experience a sampler of Rust. You’ll get set up, then solve the first Project Euler problem in Rust. This is a language you can’t miss.]]></description><guid isPermaLink="false">b4def99b-cdec-46c6-9816-a6c85c999ae9</guid><pubDate>Sun,  4 Feb 2018 11:01:00 +0000</pubDate><dc:creator>Andrew Jakubowicz</dc:creator></item><item><title>Practical Rust: Installation &amp; Hello World</title><link>https://medium.com/@gallantmrgn/practical-rust-installation-hello-world-d1e52aac1f9</link><description><![CDATA[Recently, a new language called Rust has come into the spotlight, aiming to be a ‘blazingly fast’ language meant for systems programming…]]></description><guid isPermaLink="false">49ad5651-12e0-4374-9586-d9a86291c165</guid><pubDate>Fri,  2 Feb 2018 18:08:04 +0000</pubDate><dc:creator>Morgan A. Gallant</dc:creator></item><item><title>Setting up Windows 10 for programming (in Rust)</title><link>https://exyr.org/2018/windows/</link><description><![CDATA[Lately I’ve been working with Windows-specific APIs, so I needed to get a Windows dev environment. I’ve mostly used Linux for many years now, so for me programming on Windows feels very foreign. Getting to a point where I started being productive took a number of steps, so here they are, if only for me to find them next time.]]></description><guid isPermaLink="false">4abf1536-2c82-411a-be74-e85d2155af5a</guid><pubDate>Wed, 31 Jan 2018 00:00:00 +0000</pubDate><dc:creator>Simon Sapin</dc:creator></item><item><title>Rust Lifetimes for the Uninitialised</title><link>http://asquera.de/blog/2018-01-29/rust-lifetimes-for-the-uninitialised/</link><description><![CDATA[Lifetimes are a interesting subject: a lot of people seem to gain a day-to-day familiarity with them, without fully understanding what they are. Maybe, they are truly Rust's Monads. Let's talk about what they are, where you encounter them and then how to get competent with them.]]></description><guid isPermaLink="false">c0b3d7ad-673f-4eb9-aa54-45447d1eafb0</guid><pubDate>Mon, 29 Jan 2018 15:30:00 +0100</pubDate><dc:creator>Florian Gilcher</dc:creator></item></channel></rss>