{
  "version": "https://jsonfeed.org/version/1",
  "title": "Read Rust - Web and Network Services",
  "home_page_url": "https://readrust.net/",
  "feed_url": "https://readrust.net/web-and-network-services/feed.json",
  "description": "Web and Network Services posts on Read Rust",
  "author": {
    "name": "Wesley Moore",
    "url": "http://www.wezm.net/"
  },
  "items": [
    {
      "id": "22d134e6-ddc6-4571-965c-4b6e72a544eb",
      "title": "Recently, for a Rusty Web",
      "content_text": "It’s been a few months since I shifted my focus full time to Rust, and in that time, we’ve gotten a lot of work done! I wanted to update you here what all that is, since it’s spread around on multiple repositories.",
      "url": "http://seanmonstar.com/post/171170905822/recently-for-a-rusty-web",
      "date_published": "2018-02-22T00:00:00+00:00",
      "author": {
        "name": "Sean McArthur",
        "url": "http://seanmonstar.com/"
      },
      "tags": [
        "Web and Network Services"
      ]
    },
    {
      "id": "9b97498f-3ffb-4c89-8973-c2beb5e0140e",
      "title": "Porting Rust to WebAssembly",
      "content_text": "I recently spent some effort trying to make reproto run in a browser. Here I want to outline the problems I encountered and how I worked around them. I will also provide a number of suggestions for how things might be improved for future porters.",
      "url": "https://udoprog.github.io/rust/2018-02-19/porting-rust-to-wasm.html",
      "date_published": "2018-02-19T00:00:00+00:00",
      "author": {
        "name": "John-John Tedro",
        "url": "https://udoprog.github.io/"
      },
      "tags": [
        "Web and Network Services"
      ]
    },
    {
      "id": "0af4c90e-74b2-438d-aaed-798c9f6e900a",
      "title": "Fanta: An opinionated framework for web development in rust",
      "content_text": "Fanta is a web framework that aims for developers to be productive and consistent across projects and teams. Its goals are to be: Opinionated, Fast, and Intuitive. Based heavily off of the work here: https://github.com/tokio-rs/tokio-minihttp",
      "url": "https://github.com/trezm/Fanta",
      "date_published": "2018-02-14T18:44:00+11:00",
      "author": {
        "name": "Peter Mertz",
        "url": "https://github.com/trezm"
      },
      "tags": [
        "Tools and Applications",
        "Web and Network Services"
      ]
    },
    {
      "id": "86b2dfcd-a01d-47e1-acb8-2ddbca20db62",
      "title": "Gameland intro, reimplemented in Rust for WebAssembly",
      "content_text": "My nice brother Johannes Ridderstedt sent me some old files a few weeks ago (in late 2017), stuff that he had preserved from an age-old computer of ours. One of these was the file named gameland.zip (not published yet, but I might put it up here some day.) I managed to get this running, and liked what I saw (you'll find the YouTube link to it further down on this page.) Around this time I was reading a bit about WebAssembly which I think will redefine and help reshape the web as we see it today. I was also looking at the Hello, Rust web page, and the \"FizzleFade effect using a Feistel network\" page in particular.",
      "url": "http://perlun.eu.org/en/programming/gameland/",
      "date_published": "2018-02-13T07:44:00+11:00",
      "author": {
        "name": "Per Lundberg",
        "url": "http://perlun.eu.org/en/"
      },
      "tags": [
        "Games and Graphics",
        "Web and Network Services"
      ]
    },
    {
      "id": "bbc46982-1321-4e4e-8d9f-344963341c21",
      "title": "Event Sourcing with Aggregates in Rust",
      "content_text": "Everyone loves event sourcing, right up until the moment they have to implement it. At that moment all the wonderful whiteboard drawings…",
      "url": "https://medium.com/@KevinHoffman/event-sourcing-with-aggregates-in-rust-4022af41cf67",
      "date_published": "2018-02-12T15:11:08.708+00:00",
      "author": {
        "name": "Kevin Hoffman",
        "url": "https://medium.com/@KevinHoffman"
      },
      "tags": [
        "Web and Network Services"
      ]
    },
    {
      "id": "2b698c99-99e0-4fad-8716-b58dbd9c255c",
      "title": "Deploying A Rust Server to Google App Engine with Travis CI & Docker",
      "content_text": "I woke up this morning with one goal: to convert my website (morgangallant.com) into a Rust web server. I have been a long time fan of…",
      "url": "https://medium.com/@gallantmrgn/deploying-rust-server-to-google-app-engine-with-travis-ci-docker-b80acfce2ce5",
      "date_published": "2018-02-11T00:07:43.579+00:00",
      "author": {
        "name": "Morgan A. Gallant",
        "url": "https://medium.com/@gallantmrgn"
      },
      "tags": [
        "Web and Network Services"
      ]
    },
    {
      "id": "6b542e90-1f02-4368-90e4-a1931ccf1935",
      "title": "A Wee Allocator for WebAssembly",
      "content_text": "Introducing wee_alloc. wee_alloc is a work-in-progress memory allocator designed for WebAssembly. It has a tiny code size footprint, compiling down to only a kilobyte of .wasm code.",
      "url": "http://fitzgeraldnick.com/2018/02/09/wee-alloc.html",
      "date_published": "2018-02-09T00:00:00-08:00",
      "author": {
        "name": "Nick Fitzgerald",
        "url": "http://fitzgeraldnick.com/"
      },
      "tags": [
        "Web and Network Services"
      ]
    },
    {
      "id": "e6347974-c84a-438a-924a-52ef37f6c99a",
      "title": "I rewrote a Nintendo emulator with Rust / WebAssembly (Japanese)",
      "content_text": "概要 以前、JSで書いた(ファミコンのエミュレータを書いた - undefined)ファミコンのエミュレータをRustで書き直してみた。 また、技術的な内容はQiitaの方にも書いているので興味のある方は参照してみてください。(まだ Hello, World!までしか書けてませんが。) qiita.com もともとファミコンのエミュレータって新しい言語を習得するのにちょうどいい題材だったりするのでは、って話しからスタートしてて、よくわからないのでJSで書いてみて、ようやくRustで一通りは実装できた感じ。まだバグや未実装（音声周りやマッパー）も多いんですが、ひとまずはお腹いっぱいな感じ。 成果…",
      "url": "http://blog.bokuweb.me/entry/2018/02/08/101522",
      "date_published": "2018-02-08T10:15:22+09:00",
      "author": {
        "name": "bokuweb",
        "url": "http://blog.bokuweb.me/"
      },
      "tags": [
        "Web and Network Services"
      ]
    },
    {
      "id": "434c400b-b4ac-49c9-87fa-db2a8b5f1ba7",
      "title": "DataFusion: Big Data Platform for Rust",
      "content_text": "DataFusion is an open-source Big Data platform implemented in the Rust programming language with a similar programming style to Apache Spark.",
      "url": "https://www.datafusion.rs/",
      "date_published": "2018-02-04T16:51:47+00:00",
      "author": {
        "name": "Andy Grove",
        "url": "https://www.datafusion.rs/"
      },
      "tags": [
        "Tools and Applications",
        "Web and Network Services"
      ]
    },
    {
      "id": "5c8f0581-5b1d-485b-852c-83c0deef73d5",
      "title": "Rust and WebAssembly with Turtle - /var/blog",
      "content_text": "In this post, I'll walk through a few of the highlights of getting Turtle, a Rust library for creating animated drawings, to run in the browser with WebAssembly.",
      "url": "https://varblog.org/blog/2018/01/08/rust-and-webassembly-with-turtle/",
      "date_published": "2018-01-08T09:54:00-06:00",
      "author": {
        "name": "Marshall Pierce",
        "url": "https://varblog.org/"
      },
      "tags": [
        "Web and Network Services"
      ]
    }
  ]
}