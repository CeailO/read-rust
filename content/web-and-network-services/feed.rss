<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Read Rust - Web and Network Services</title><link>https://readrust.net/</link><description>Web and Network Services posts on Read Rust</description><item><title>Recently, for a Rusty Web</title><link>http://seanmonstar.com/post/171170905822/recently-for-a-rusty-web</link><description>It’s been a few months since I shifted my focus full time to Rust, and in that time, we’ve gotten a lot of work done! I wanted to update you here what all that is, since it’s spread around on multiple repositories.</description><guid isPermaLink="false">22d134e6-ddc6-4571-965c-4b6e72a544eb</guid><pubDate>Thu, 22 Feb 2018 00:00:00 +0000</pubDate><dc:creator>Sean McArthur</dc:creator></item><item><title>Porting Rust to WebAssembly</title><link>https://udoprog.github.io/rust/2018-02-19/porting-rust-to-wasm.html</link><description>I recently spent some effort trying to make reproto run in a browser. Here I want to outline the problems I encountered and how I worked around them. I will also provide a number of suggestions for how things might be improved for future porters.</description><guid isPermaLink="false">9b97498f-3ffb-4c89-8973-c2beb5e0140e</guid><pubDate>Mon, 19 Feb 2018 00:00:00 +0000</pubDate><dc:creator>John-John Tedro</dc:creator></item><item><title>Fanta: An opinionated framework for web development in rust</title><link>https://github.com/trezm/Fanta</link><description>Fanta is a web framework that aims for developers to be productive and consistent across projects and teams. Its goals are to be: Opinionated, Fast, and Intuitive. Based heavily off of the work here: https://github.com/tokio-rs/tokio-minihttp</description><guid isPermaLink="false">0af4c90e-74b2-438d-aaed-798c9f6e900a</guid><pubDate>Wed, 14 Feb 2018 18:44:00 +1100</pubDate><dc:creator>Peter Mertz</dc:creator></item><item><title>Gameland intro, reimplemented in Rust for WebAssembly</title><link>http://perlun.eu.org/en/programming/gameland/</link><description>My nice brother Johannes Ridderstedt sent me some old files a few weeks ago (in late 2017), stuff that he had preserved from an age-old computer of ours. One of these was the file named gameland.zip (not published yet, but I might put it up here some day.) I managed to get this running, and liked what I saw (you&apos;ll find the YouTube link to it further down on this page.) Around this time I was reading a bit about WebAssembly which I think will redefine and help reshape the web as we see it today. I was also looking at the Hello, Rust web page, and the &quot;FizzleFade effect using a Feistel network&quot; page in particular.</description><guid isPermaLink="false">86b2dfcd-a01d-47e1-acb8-2ddbca20db62</guid><pubDate>Tue, 13 Feb 2018 07:44:00 +1100</pubDate><dc:creator>Per Lundberg</dc:creator></item><item><title>Event Sourcing with Aggregates in Rust</title><link>https://medium.com/@KevinHoffman/event-sourcing-with-aggregates-in-rust-4022af41cf67</link><description>Everyone loves event sourcing, right up until the moment they have to implement it. At that moment all the wonderful whiteboard drawings…</description><guid isPermaLink="false">bbc46982-1321-4e4e-8d9f-344963341c21</guid><pubDate>Mon, 12 Feb 2018 15:11:08 +0000</pubDate><dc:creator>Kevin Hoffman</dc:creator></item><item><title>Deploying A Rust Server to Google App Engine with Travis CI &amp; Docker</title><link>https://medium.com/@gallantmrgn/deploying-rust-server-to-google-app-engine-with-travis-ci-docker-b80acfce2ce5</link><description>I woke up this morning with one goal: to convert my website (morgangallant.com) into a Rust web server. I have been a long time fan of…</description><guid isPermaLink="false">2b698c99-99e0-4fad-8716-b58dbd9c255c</guid><pubDate>Sun, 11 Feb 2018 00:07:43 +0000</pubDate><dc:creator>Morgan A. Gallant</dc:creator></item><item><title>A Wee Allocator for WebAssembly</title><link>http://fitzgeraldnick.com/2018/02/09/wee-alloc.html</link><description>Introducing wee_alloc. wee_alloc is a work-in-progress memory allocator designed for WebAssembly. It has a tiny code size footprint, compiling down to only a kilobyte of .wasm code.</description><guid isPermaLink="false">6b542e90-1f02-4368-90e4-a1931ccf1935</guid><pubDate>Fri,  9 Feb 2018 00:00:00 -0800</pubDate><dc:creator>Nick Fitzgerald</dc:creator></item><item><title>I rewrote a Nintendo emulator with Rust / WebAssembly (Japanese)</title><link>http://blog.bokuweb.me/entry/2018/02/08/101522</link><description>概要 以前、JSで書いた(ファミコンのエミュレータを書いた - undefined)ファミコンのエミュレータをRustで書き直してみた。 また、技術的な内容はQiitaの方にも書いているので興味のある方は参照してみてください。(まだ Hello, World!までしか書けてませんが。) qiita.com もともとファミコンのエミュレータって新しい言語を習得するのにちょうどいい題材だったりするのでは、って話しからスタートしてて、よくわからないのでJSで書いてみて、ようやくRustで一通りは実装できた感じ。まだバグや未実装（音声周りやマッパー）も多いんですが、ひとまずはお腹いっぱいな感じ。 成果…</description><guid isPermaLink="false">e6347974-c84a-438a-924a-52ef37f6c99a</guid><pubDate>Thu,  8 Feb 2018 10:15:22 +0900</pubDate><dc:creator>bokuweb</dc:creator></item><item><title>DataFusion: Big Data Platform for Rust</title><link>https://www.datafusion.rs/</link><description>DataFusion is an open-source Big Data platform implemented in the Rust programming language with a similar programming style to Apache Spark.</description><guid isPermaLink="false">434c400b-b4ac-49c9-87fa-db2a8b5f1ba7</guid><pubDate>Sun,  4 Feb 2018 16:51:47 +0000</pubDate><dc:creator>Andy Grove</dc:creator></item><item><title>Rust and WebAssembly with Turtle - /var/blog</title><link>https://varblog.org/blog/2018/01/08/rust-and-webassembly-with-turtle/</link><description>In this post, I&apos;ll walk through a few of the highlights of getting Turtle, a Rust library for creating animated drawings, to run in the browser with WebAssembly.</description><guid isPermaLink="false">5c8f0581-5b1d-485b-852c-83c0deef73d5</guid><pubDate>Mon,  8 Jan 2018 09:54:00 -0600</pubDate><dc:creator>Marshall Pierce</dc:creator></item></channel></rss>