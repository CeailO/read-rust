<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Read Rust - Embedded</title><link>https://readrust.net/</link><description>Embedded posts on Read Rust</description><item><title>Experimenting with the New I/O Framework (in Rust) for embedded systems</title><link>http://pramode.in/2018/01/31/ti-launchpad-with-rust-new-io/</link><description>Notes on Code, by Pramode C.E</description><guid isPermaLink="false">d4191312-2442-4eb8-b313-67ba224829b6</guid><pubDate>Wed, 31 Jan 2018 00:00:00 -0500</pubDate><dc:creator>Pramode C.E</dc:creator></item><item><title>Rust 2018: Improving Safety and Ergonomics for Low-Level Programming - Bobbin Blog</title><link>http://www.bobbin.io/blog/post/rust_2018_low_level/</link><description>There’s been a lot written about what can be done to make Rust’s tooling, libraries and infrastructure better for embedded programming, but I’d like to cover a slightly different topic: what can be done to make Rust the language itself safer and easier to use for low-level programming?</description><guid isPermaLink="false">d2189bca-0b13-451d-b70c-70ec43f7a207</guid><pubDate>Fri, 26 Jan 2018 14:00:00 -0400</pubDate><dc:creator>Jonathan Soo</dc:creator></item><item><title>Rust 2018: Core, Embedded+SIMD, Intermesiate documenation, Async • r/rust</title><link>https://www.reddit.com/r/rust/comments/7syxw4/rust_2018_core_embeddedsimd_intermesiate/</link><description>Hi there! I&apos;m Nico, and I&apos;ve been lurking around these parts for about a year now. I thought I&apos;d give my 2 cents on Rust&apos;s 2018 plans. Note: this...</description><guid isPermaLink="false">ae85973e-7540-4027-b53a-ee41a249d124</guid><pubDate>Thu, 25 Jan 2018 20:12:01 +0000</pubDate><dc:creator>Nico</dc:creator></item><item><title>Embedded Rust in 2018 - Embedded in Rust</title><link>http://blog.japaric.io/embedded-rust-in-2018/</link><description>A blog about Rust and embedded stuff</description><guid isPermaLink="false">a59a299c-28d1-4c41-9563-47faea69a0b7</guid><pubDate>Sun, 21 Jan 2018 22:10:38 +0100</pubDate><dc:creator>Jorge Aparicio</dc:creator></item><item><title>Embedded Rust in 2018</title><link>http://railwayelectronics.blogspot.com.au/2018/01/i-recently-picked-up-embedded-project.html</link><description>I recently picked up an embedded project that I hadn&apos;t touched for a few months, so I could add some new features. I was disappointed to not...</description><guid isPermaLink="false">f3f500d5-d108-4f83-808e-e15ad520cce7</guid><pubDate>Sun, 14 Jan 2018 00:00:00 +0000</pubDate><dc:creator>theJPster</dc:creator></item><item><title>Pollen Robotics call for #Rust2018: toward stability on embedded systems</title><link>https://medium.com/pollenrobotics/rust-for-robotics-and-embedded-systems-in-2018-96e9be8464</link><description>Robotics developers face two main problems:</description><guid isPermaLink="false">c506e8b8-69f1-4f39-803a-6e3a34c06145</guid><pubDate>Fri, 12 Jan 2018 13:32:49 +0000</pubDate><dc:creator>Pierre Rouanet</dc:creator></item></channel></rss>