<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Read Rust - Tools and Applications</title><link>https://readrust.net/</link><description>Tools and Applications posts on Read Rust</description><item><title>Spectra gets Rust scripting!</title><link>http://phaazon.net/blog/spectra_plugins</link><description>spectra is a crate I’ve been maintaining for a few months / years now. It’s a crate that I mainly use for demoscene productions (I released two with it, Céleri Rémoulade and Outline Invitation) but I also use it to play around and experiment new rendering, animation and video game techniques.</description><guid isPermaLink="false">44ef6094-b3df-4a2c-9cd9-429feecff6bc</guid><pubDate>Mon, 19 Feb 2018 02:57:00 +0000</pubDate><dc:creator>Dimitri Sabadie</dc:creator></item><item><title>Fanta: An opinionated framework for web development in rust</title><link>https://github.com/trezm/Fanta</link><description>Fanta is a web framework that aims for developers to be productive and consistent across projects and teams. Its goals are to be: Opinionated, Fast, and Intuitive. Based heavily off of the work here: https://github.com/tokio-rs/tokio-minihttp</description><guid isPermaLink="false">0af4c90e-74b2-438d-aaed-798c9f6e900a</guid><pubDate>Wed, 14 Feb 2018 18:44:00 +1100</pubDate><dc:creator>Peter Mertz</dc:creator></item><item><title>comm is a peer-to-peer instant messaging protocol designed to be resilient to censorship</title><link>https://github.com/zacstewart/comm-gtk</link><description>comm is a peer-to-peer instant messaging protocol designed to be resilient to censorship. comm-gtk is a GUI client built on the comm library. To try it out, start the app. In the configuration window, enter a secret phrase, a bootstrap node (IP:port pair), and a local port to listen on (e.g. 6669). For a bootstrap node, try 165.227.114.200:6667 (or any other node&apos;s IP address if you know one). Click connect to join the network.</description><guid isPermaLink="false">1694fd36-21ca-4e3f-8654-9291c3ba4de7</guid><pubDate>Tue, 13 Feb 2018 23:02:31 -0600</pubDate><dc:creator>Zac Stewart</dc:creator></item><item><title>tealdeer - A very fast implementation of tldr in Rust.</title><link>https://github.com/dbrgn/tealdeer</link><description>A fast command line client for tldr: A collection of simplified and community-driven man pages.</description><guid isPermaLink="false">751253b7-494d-4930-9586-40c18cab9280</guid><pubDate>Mon, 12 Feb 2018 07:46:00 +1100</pubDate><dc:creator>Danilo Bargen</dc:creator></item><item><title>Reflecting on ppbert</title><link>https://vfoley.xyz/ppbert/</link><description>I had an itch: I was pretty-printing the BERT-encoded terms that we use in a production system at work and it was very slow. The Erlang shell took more than two minutes to dump the largest file. (It took about 0.1 second to read and parse the file; the rest was spent in io:format.) I decided to scratch that itch: I wrote ppbert, a command-line utility that reads BERT-encoded values and pretty-prints them. I’ve worked sporadically on ppbert for almost a year now, I use it daily at work, I’m happy with it, and I want to write about some of the things I learned during that journey.</description><guid isPermaLink="false">28ce1b60-8837-4443-87fb-669bf176db9b</guid><pubDate>Fri,  9 Feb 2018 00:00:00 +0000</pubDate><dc:creator>Vincent Foley</dc:creator></item><item><title>Guitar Effects in Rust</title><link>http://rickyhan.com/jekyll/update/2018/02/06/rust-guitar-pedal-effects-dsp.html</link><description>In an effort to experiment with dsp, I wrote a guitar/bass effects processor this past weekend. The end result works very well (to my pleasant surprise). It doesn’t have 90% of the functionalities of any of rakarrack, guitar rig, garage band but overall it was a fun weekend hack.</description><guid isPermaLink="false">60238a1c-95ee-46d8-bf5c-e70fed87a103</guid><pubDate>Tue,  6 Feb 2018 04:00:00 +0000</pubDate><dc:creator>Ricky Han</dc:creator></item><item><title>DataFusion: Big Data Platform for Rust</title><link>https://www.datafusion.rs/</link><description>DataFusion is an open-source Big Data platform implemented in the Rust programming language with a similar programming style to Apache Spark.</description><guid isPermaLink="false">434c400b-b4ac-49c9-87fa-db2a8b5f1ba7</guid><pubDate>Sun,  4 Feb 2018 16:51:47 +0000</pubDate><dc:creator>Andy Grove</dc:creator></item><item><title>retrobasic - A BASIC interpreter written in Rust</title><link>https://github.com/seasalim/retrobasic</link><description>retrobasic is a BASIC interpreter written in Rust. It is based on the original BASIC &apos;64 implementation, and modified as needed to make it more compatible with some of the classic BASIC games.</description><guid isPermaLink="false">303b0429-9b0c-46f8-a555-fbab8c2bdf90</guid><pubDate>Sun,  4 Feb 2018 17:21:55 +0000</pubDate><dc:creator>seasalim</dc:creator></item><item><title>Writing a command-line program in Rust - Federico&apos;s Blog</title><link>https://people.gnome.org/~federico/blog/writing-a-command-line-program-in-rust.html</link><description>As a library writer, it feels a bit strange, but refreshing, to write a program that actually has a main() function. My experience with Rust so far has been threefold:</description><guid isPermaLink="false">4aeb0aa5-6a72-41c9-87bc-a2e24b5e33d3</guid><pubDate>Sat,  3 Feb 2018 11:41:20 -0600</pubDate><dc:creator>Federico Mena Quintero</dc:creator></item><item><title>Make your own make</title><link>https://matklad.github.io/2018/01/03/make-your-own-make.html</link><description>An obvious idea is to use Rust for task automation. Originally, I have proposed creating a special Cargo subcommand to execute build tasks, implemented as Rust programs, in this thread. However, since then I realized that there are built-in tools in Cargo which allow one to get a pretty ergonomic solution. Namely, the combination of workspaces, aliases and ability to define binaries seems to do the trick.</description><guid isPermaLink="false">93d7f09d-e1eb-4d6a-a792-5765326730be</guid><pubDate>Wed,  3 Jan 2018 10:52:50 +0000</pubDate><dc:creator>Aleksey Kladov</dc:creator></item><item><title>mdcat - Cat for markdown: Show markdown documents in TTYs</title><link>https://github.com/lunaryorn/mdcat</link><description>Cat for markdown: Show markdown documents in TTYs</description><guid isPermaLink="false">2168f429-844d-4629-97da-c149e9026cfd</guid><pubDate>Sat,  3 Feb 2018 18:23:00 +1100</pubDate><dc:creator>Sebastian Wiesner</dc:creator></item></channel></rss>