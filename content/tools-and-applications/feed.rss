<rss version="2.0" xmlns:dc="http://purl.org/dc/elements/1.1/"><channel><title>Read Rust - Tools and Applications</title><link>http://readrust.net/</link><description>Tools and Applications posts on Read Rust</description><item><title>Writing a command-line program in Rust - Federico&apos;s Blog</title><link>https://people.gnome.org/~federico/blog/writing-a-command-line-program-in-rust.html</link><description>As a library writer, it feels a bit strange, but refreshing, to write a program that actually has a main() function. My experience with Rust so far has been threefold:</description><guid isPermaLink="false">4aeb0aa5-6a72-41c9-87bc-a2e24b5e33d3</guid><pubDate>Sat,  3 Feb 2018 11:41:20 -0600</pubDate><dc:creator>Federico Mena Quintero</dc:creator></item><item><title>Make your own make</title><link>https://matklad.github.io/2018/01/03/make-your-own-make.html</link><description>An obvious idea is to use Rust for task automation. Originally, I have proposed creating a special Cargo subcommand to execute build tasks, implemented as Rust programs, in this thread. However, since then I realized that there are built-in tools in Cargo which allow one to get a pretty ergonomic solution. Namely, the combination of workspaces, aliases and ability to define binaries seems to do the trick.</description><guid isPermaLink="false">93d7f09d-e1eb-4d6a-a792-5765326730be</guid><pubDate>Wed,  3 Jan 2018 10:52:50 +0000</pubDate><dc:creator>Aleksey Kladov</dc:creator></item><item><title>mdcat - Cat for markdown: Show markdown documents in TTYs</title><link>https://github.com/lunaryorn/mdcat</link><description>Cat for markdown: Show markdown documents in TTYs</description><guid isPermaLink="false">2168f429-844d-4629-97da-c149e9026cfd</guid><pubDate>Sat,  3 Feb 2018 18:23:00 +1100</pubDate><dc:creator>Sebastian Wiesner</dc:creator></item></channel></rss>