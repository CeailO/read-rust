{
  "version": "https://jsonfeed.org/version/1",
  "title": "Read Rust - Tools and Applications",
  "home_page_url": "https://readrust.net/",
  "feed_url": "https://readrust.net/tools-and-applications/feed.json",
  "description": "Tools and Applications posts on Read Rust",
  "author": {
    "name": "Wesley Moore",
    "url": "http://www.wezm.net/"
  },
  "items": [
    {
      "id": "60238a1c-95ee-46d8-bf5c-e70fed87a103",
      "title": "Guitar Effects in Rust",
      "content_text": "In an effort to experiment with dsp, I wrote a guitar/bass effects processor this past weekend. The end result works very well (to my pleasant surprise). It doesnâ€™t have 90% of the functionalities of any of rakarrack, guitar rig, garage band but overall it was a fun weekend hack.",
      "url": "http://rickyhan.com/jekyll/update/2018/02/06/rust-guitar-pedal-effects-dsp.html",
      "date_published": "2018-02-06T04:00:00+00:00",
      "author": {
        "name": "Ricky Han",
        "url": "http://rickyhan.com/"
      },
      "tags": [
        "Tools and Applications"
      ]
    },
    {
      "id": "434c400b-b4ac-49c9-87fa-db2a8b5f1ba7",
      "title": "DataFusion: Big Data Platform for Rust",
      "content_text": "DataFusion is an open-source Big Data platform implemented in the Rust programming language with a similar programming style to Apache Spark.",
      "url": "https://www.datafusion.rs/",
      "date_published": "2018-02-04T16:51:47+00:00",
      "author": {
        "name": "Andy Grove",
        "url": "https://www.datafusion.rs/"
      },
      "tags": [
        "Tools and Applications",
        "Web and Network Services"
      ]
    },
    {
      "id": "303b0429-9b0c-46f8-a555-fbab8c2bdf90",
      "title": "retrobasic - A BASIC interpreter written in Rust",
      "content_text": "retrobasic is a BASIC interpreter written in Rust. It is based on the original BASIC '64 implementation, and modified as needed to make it more compatible with some of the classic BASIC games.",
      "url": "https://github.com/seasalim/retrobasic",
      "date_published": "2018-02-04T17:21:55+00:00",
      "author": {
        "name": "seasalim",
        "url": "https://github.com/seasalim"
      },
      "tags": [
        "Tools and Applications"
      ]
    },
    {
      "id": "4aeb0aa5-6a72-41c9-87bc-a2e24b5e33d3",
      "title": "Writing a command-line program in Rust - Federico's Blog",
      "content_text": "As a library writer, it feels a bit strange, but refreshing, to write a program that actually has a main() function. My experience with Rust so far has been threefold:",
      "url": "https://people.gnome.org/~federico/blog/writing-a-command-line-program-in-rust.html",
      "date_published": "2018-02-03T11:41:20-06:00",
      "author": {
        "name": "Federico Mena Quintero",
        "url": "https://people.gnome.org/~federico/blog/index.html"
      },
      "tags": [
        "Tools and Applications"
      ]
    },
    {
      "id": "93d7f09d-e1eb-4d6a-a792-5765326730be",
      "title": "Make your own make",
      "content_text": "An obvious idea is to use Rust for task automation. Originally, I have proposed creating a special Cargo subcommand to execute build tasks, implemented as Rust programs, in this thread. However, since then I realized that there are built-in tools in Cargo which allow one to get a pretty ergonomic solution. Namely, the combination of workspaces, aliases and ability to define binaries seems to do the trick.",
      "url": "https://matklad.github.io/2018/01/03/make-your-own-make.html",
      "date_published": "2018-01-03T10:52:50+00:00",
      "author": {
        "name": "Aleksey Kladov",
        "url": "https://matklad.github.io/"
      },
      "tags": [
        "Tools and Applications"
      ]
    },
    {
      "id": "2168f429-844d-4629-97da-c149e9026cfd",
      "title": "mdcat - Cat for markdown: Show markdown documents in TTYs",
      "content_text": "Cat for markdown: Show markdown documents in TTYs",
      "url": "https://github.com/lunaryorn/mdcat",
      "date_published": "2018-02-03T18:23:00+11:00",
      "author": {
        "name": "Sebastian Wiesner",
        "url": "https://swsnr.de/"
      },
      "tags": [
        "Tools and Applications"
      ]
    }
  ]
}