{
  "version": "https://jsonfeed.org/version/1",
  "title": "Read Rust - All Posts",
  "home_page_url": "https://readrust.net/",
  "feed_url": "https://readrust.net/all/feed.json",
  "description": "All Posts posts on Read Rust",
  "author": {
    "name": "Wesley Moore",
    "url": "http://www.wezm.net/"
  },
  "items": [
    {
      "id": "35c70f95-6097-47df-a470-bb92e99b27e5",
      "title": "First release of TQL: the easy-to-use ORM for Rust",
      "content_text": "After a couple of weeks of work, I'm now happy to release the first version of tql, the easy-to-use ORM for Rust. While the focus was to make tql work on the stable version of the compiler, I also added some new features. The most notable new feature is the support for SQLite: now tql supports SQLite as well as PostgreSQL. The support for SQLite is almost as complete as the one for PostgreSQL: the only missing function is not implemented because the backend (SQLite) does not support it.",
      "url": "http://tql-rs.ml/first-release/",
      "date_published": "2018-02-10T00:00:00+00:00",
      "author": {
        "name": "Antoni",
        "url": "http://tql-rs.ml/"
      },
      "tags": [
        "Crates"
      ]
    },
    {
      "id": "2b698c99-99e0-4fad-8716-b58dbd9c255c",
      "title": "Deploying A Rust Server to Google App Engine with Travis CI & Docker",
      "content_text": "I woke up this morning with one goal: to convert my website (morgangallant.com) into a Rust web server. I have been a long time fan of…",
      "url": "https://medium.com/@gallantmrgn/deploying-rust-server-to-google-app-engine-with-travis-ci-docker-b80acfce2ce5",
      "date_published": "2018-02-11T00:07:43.579+00:00",
      "author": {
        "name": "Morgan A. Gallant",
        "url": "https://medium.com/@gallantmrgn"
      },
      "tags": [
        "Web and Network Services"
      ]
    },
    {
      "id": "751253b7-494d-4930-9586-40c18cab9280",
      "title": "tealdeer - A very fast implementation of tldr in Rust.",
      "content_text": "A fast command line client for tldr: A collection of simplified and community-driven man pages.",
      "url": "https://github.com/dbrgn/tealdeer",
      "date_published": "2018-02-12T07:46:00+11:00",
      "author": {
        "name": "Danilo Bargen",
        "url": "https://github.com/dbrgn"
      },
      "tags": [
        "Tools and Applications"
      ]
    },
    {
      "id": "49ad5651-12e0-4374-9586-d9a86291c165",
      "title": "Practical Rust: Installation & Hello World",
      "content_text": "Recently, a new language called Rust has come into the spotlight, aiming to be a ‘blazingly fast’ language meant for systems programming…",
      "url": "https://medium.com/@gallantmrgn/practical-rust-installation-hello-world-d1e52aac1f9",
      "date_published": "2018-02-02T18:08:04.292+00:00",
      "author": {
        "name": "Morgan A. Gallant",
        "url": "https://medium.com/@gallantmrgn"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "019b1da3-b979-478b-89ed-7824c75df122",
      "title": "Corona: If you want to get async out out of your way",
      "content_text": "For some time now I develop a Rust library for asynchronous programming with coroutines, called Corona (note there’s a version 0.4.0-pre.1, but Crates prefer the „stable“ 0.3.1). I believe it is starting to be useful, so I wrote this description to show what it is good for and how it fits into the big picture of Rust. There’ll be some more changes, though, at least because Tokio just released a new version (and Futures plan to do so soon), so Corona will have to adapt.",
      "url": "https://vorner.github.io/corona-04.html",
      "date_published": "2018-02-11T19:51:00+11:00",
      "author": {
        "name": "Michal 'vorner' Vaner",
        "url": "https://vorner.github.io/"
      },
      "tags": [
        "Crates"
      ]
    },
    {
      "id": "b8e85b25-1d33-4b69-a3ba-b2cbac2bf62e",
      "title": "RLSL (Rust -> SPIR-V compiler) Progress report",
      "content_text": "This is a follow up post. RLSL is a Rust to SPIR-V compiler. SPIR-V is the shading language for Vulkan, similar to other shading languages like GLSL, HLSL but more low level. OpenGL, DX9/11/12, Vulkan, Metal are all graphic APIs that are able to use the GPU to draw pixels on the screen. Those APIs have certain stages that can be controlled by the developer by using the correct shading language.",
      "url": "https://maikklein.github.io/rlsl-progress-report/",
      "date_published": "2018-02-09T00:00:00+00:00",
      "author": {
        "name": "Maik Klein",
        "url": "https://maikklein.github.io/"
      },
      "tags": [
        "Games and Graphics"
      ]
    },
    {
      "id": "28ce1b60-8837-4443-87fb-669bf176db9b",
      "title": "Reflecting on ppbert",
      "content_text": "I had an itch: I was pretty-printing the BERT-encoded terms that we use in a production system at work and it was very slow. The Erlang shell took more than two minutes to dump the largest file. (It took about 0.1 second to read and parse the file; the rest was spent in io:format.) I decided to scratch that itch: I wrote ppbert, a command-line utility that reads BERT-encoded values and pretty-prints them. I’ve worked sporadically on ppbert for almost a year now, I use it daily at work, I’m happy with it, and I want to write about some of the things I learned during that journey.",
      "url": "https://vfoley.xyz/ppbert/",
      "date_published": "2018-02-09T00:00:00+00:00",
      "author": {
        "name": "Vincent Foley",
        "url": "http://vfoley.xyz/"
      },
      "tags": [
        "Tools and Applications",
        "Language"
      ]
    },
    {
      "id": "c7a9c9d2-8858-4f47-afa3-19ec1f2f6b86",
      "title": "Maximally minimal specialization: always applicable impls",
      "content_text": "So aturon wrote this beautiful post about what a good week it has been. In there, they wrote: \"Breakthrough #2: @nikomatsakis had a eureka moment and figured out a path to make specialization sound, while still supporting its most important use cases (blog post forthcoming!). Again, this suddenly puts specialization on the map for Rust Epoch 2018\". Sheesh I wish they hadn’t written that! Now the pressure is on. Well, here goes nothing =).",
      "url": "http://smallcultfollowing.com/babysteps/blog/2018/02/09/maximally-minimal-specialization-always-applicable-impls/",
      "date_published": "2018-02-09T00:00:00-05:00",
      "author": {
        "name": "Niko Matsakis",
        "url": "http://smallcultfollowing.com/babysteps/"
      },
      "tags": [
        "Language"
      ]
    },
    {
      "id": "325af8a8-af88-4a07-9c8f-16d2865f01f3",
      "title": "Closing out an incredible week in Rust",
      "content_text": "This week has been so amazing that I just had to write about it. Here’s a quick list of some of what went down in one week:",
      "url": "http://aturon.github.io/2018/02/09/amazing-week/",
      "date_published": "2018-02-09T00:00:00+00:00",
      "author": {
        "name": "Aaron Turon",
        "url": "http://aturon.github.io/"
      },
      "tags": [
        "Language"
      ]
    },
    {
      "id": "6b542e90-1f02-4368-90e4-a1931ccf1935",
      "title": "A Wee Allocator for WebAssembly",
      "content_text": "Introducing wee_alloc. wee_alloc is a work-in-progress memory allocator designed for WebAssembly. It has a tiny code size footprint, compiling down to only a kilobyte of .wasm code.",
      "url": "http://fitzgeraldnick.com/2018/02/09/wee-alloc.html",
      "date_published": "2018-02-09T00:00:00-08:00",
      "author": {
        "name": "Nick Fitzgerald",
        "url": "http://fitzgeraldnick.com/"
      },
      "tags": [
        "Web and Network Services"
      ]
    },
    {
      "id": "b7290658-fff8-4ee5-b8e5-eceefdc6beb6",
      "title": "Memory safe DMA transfers - Embedded in Rust",
      "content_text": "A blog about Rust and embedded stuff",
      "url": "http://blog.japaric.io/safe-dma/",
      "date_published": "2018-02-09T11:47:30+01:00",
      "author": {
        "name": "Jorge Aparicio",
        "url": "http://blog.japaric.io/"
      },
      "tags": [
        "Embedded"
      ]
    },
    {
      "id": "4924a3b4-b71f-4a15-ae2d-0a77bcb30e98",
      "title": "Async/Await V: Getting back to the futures",
      "content_text": "Two posts ago I proposed a particular interface for shipping self-referential generators this year. Immediately after that, eddyb showed me a better interface, which I described in the next post. Now, to tie everything together, its time to talk about how we can integrate this into the futures ecosystem. Starting point: this Generator API To begin, I want to document the generator API I’ll be using in this post, which is roughly what followed from my previous post:",
      "url": "https://boats.gitlab.io/blog/post/2018-02-08-async-v-getting-back-to-the-futures/",
      "date_published": "2018-02-08T00:00:00+00:00",
      "author": {
        "name": "boats",
        "url": "https://boats.gitlab.io/blog/"
      },
      "tags": [
        "Language"
      ]
    },
    {
      "id": "29eb1ede-d551-4b8d-aeec-c673aafb7e8f",
      "title": "Combine 3 - Partial parsing in Rust",
      "content_text": "Combine is a parser combinator library for the Rust programming language. I first announced version 3 of Combine back in August and back then I definitely expected to have a stable version by now. However other projects (cough gluon cough) got in the way and Combine fell to the wayside. It didn’t help that I didn’t have a killer feature for 3.0 either, user-defined error types make it possible to define parsers usable in #[no_std] crates which is great when you need it but it is still a fairly niche use-case.",
      "url": "https://marwes.github.io/2018/02/08/combine-3.html",
      "date_published": "2018-02-08T00:00:00+00:00",
      "author": {
        "name": "Markus Westerlind",
        "url": "https://marwes.github.io/"
      },
      "tags": [
        "Crates",
        "Computer Science"
      ]
    },
    {
      "id": "e6347974-c84a-438a-924a-52ef37f6c99a",
      "title": "I rewrote a Nintendo emulator with Rust / WebAssembly (Japanese)",
      "content_text": "概要 以前、JSで書いた(ファミコンのエミュレータを書いた - undefined)ファミコンのエミュレータをRustで書き直してみた。 また、技術的な内容はQiitaの方にも書いているので興味のある方は参照してみてください。(まだ Hello, World!までしか書けてませんが。) qiita.com もともとファミコンのエミュレータって新しい言語を習得するのにちょうどいい題材だったりするのでは、って話しからスタートしてて、よくわからないのでJSで書いてみて、ようやくRustで一通りは実装できた感じ。まだバグや未実装（音声周りやマッパー）も多いんですが、ひとまずはお腹いっぱいな感じ。 成果…",
      "url": "http://blog.bokuweb.me/entry/2018/02/08/101522",
      "date_published": "2018-02-08T10:15:22+09:00",
      "author": {
        "name": "bokuweb",
        "url": "http://blog.bokuweb.me/"
      },
      "tags": [
        "Web and Network Services"
      ]
    },
    {
      "id": "94324d77-490d-4897-bfd7-5a5b7c4c0cfb",
      "title": "6 months into Rust: what was good in 2017 and what will be better in 2018?",
      "content_text": "Last summer, I finally decided to start learning Rust. I published my first blog post about Rust in September, I then attended my first Rust conference to learn more about the language, and started three Rust projects on GitHub. I now have more experience about the Rust ecosystem, and I want to share some feedback. The call for community blog posts by the Rust team comes right in time!",
      "url": "https://gendignoux.com/blog/2018/02/05/rust-best-features-of-2017-and-beyond.html",
      "date_published": "2018-02-05T22:24:30+01:00",
      "author": {
        "name": "Guillaume Endignoux",
        "url": "https://gendignoux.com/blog/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "b0a2bc9c-effa-4859-b804-cbe839060855",
      "title": "Tokio Reform is Shipped and the Road to 0.2",
      "content_text": "I'm happy to announce that today, the changes proposed in the reform RFC have been released to crates.io as tokio 0.1. The primary changes are: Add a default global event loop, eliminating the need for setting up and managing your own event loop in the vast majority of cases, and decouple all task execution functionality from Tokio.",
      "url": "https://tokio.rs/blog/2018-02-tokio-reform-shipped/",
      "date_published": "2018-02-07T00:00:00+00:00",
      "author": {
        "name": "Carl Lerche",
        "url": "https://tokio.rs/"
      },
      "tags": [
        "Crates"
      ]
    },
    {
      "id": "ac0c5546-f21b-4b47-b4a4-950464472aad",
      "title": "Async/Await IV: An Even Better Proposal",
      "content_text": "I did not plan to write this blog post. I thought that the fourth post in my series would explain how we could go from the generator API in my previous post to a futures API in which you don’t have to heap allocate every async call. But eddyb surprised me, and now I have to revisit the API in the previous post, because we can implement everything we need from immovability with a safe interface afterall.",
      "url": "https://boats.gitlab.io/blog/post/2018-02-07-async-iv-an-even-better-proposal/",
      "date_published": "2018-02-07T00:00:00+00:00",
      "author": {
        "name": "boats",
        "url": "https://boats.gitlab.io/blog/"
      },
      "tags": [
        "Language"
      ]
    },
    {
      "id": "60238a1c-95ee-46d8-bf5c-e70fed87a103",
      "title": "Guitar Effects in Rust",
      "content_text": "In an effort to experiment with dsp, I wrote a guitar/bass effects processor this past weekend. The end result works very well (to my pleasant surprise). It doesn’t have 90% of the functionalities of any of rakarrack, guitar rig, garage band but overall it was a fun weekend hack.",
      "url": "http://rickyhan.com/jekyll/update/2018/02/06/rust-guitar-pedal-effects-dsp.html",
      "date_published": "2018-02-06T04:00:00+00:00",
      "author": {
        "name": "Ricky Han",
        "url": "http://rickyhan.com/"
      },
      "tags": [
        "Tools and Applications"
      ]
    },
    {
      "id": "6e3c698d-7f42-43d4-9c08-2ee084945e5c",
      "title": "A vision for portability in Rust",
      "content_text": "TL;DR: This post proposes to deprecate the std facade, instead having a unified std that uses target- and capability-based cfgs to control API availability. Leave comments on internals!",
      "url": "http://aturon.github.io/2018/02/06/portability-vision/",
      "date_published": "2018-02-06T00:00:00+00:00",
      "author": {
        "name": "Aaron Turon",
        "url": "http://aturon.github.io/"
      },
      "tags": [
        "Language"
      ]
    },
    {
      "id": "5e5df82f-aba3-4832-bbe6-e995b2e544ef",
      "title": "Criterion.rs v0.2 - a statistics-driven benchmarking library for Rust",
      "content_text": "Criterion.rs is a statistics-driven benchmarking library for Rust. It provides precise measurements of changes in the performance of benchmarked code, and gives strong statistical confidence that apparent performance changes are real and not simply noise. Clear output, a simple API and reasonable defaults make it easy to use even for developers without a background in statistics. Unlike the benchmarking harness provided by Rust, Criterion.rs can be used with stable versions of the compiler.",
      "url": "https://bheisler.github.io/post/criterion-rs-0-2/",
      "date_published": "2018-02-05T07:00:00-06:00",
      "author": {
        "name": "Brook Heisler",
        "url": "https://bheisler.github.io/"
      },
      "tags": [
        "Performance",
        "Crates"
      ]
    },
    {
      "id": "c0b3d7ad-673f-4eb9-aa54-45447d1eafb0",
      "title": "Rust Lifetimes for the Uninitialised",
      "content_text": "Lifetimes are a interesting subject: a lot of people seem to gain a day-to-day familiarity with them, without fully understanding what they are. Maybe, they are truly Rust's Monads. Let's talk about what they are, where you encounter them and then how to get competent with them.",
      "url": "http://asquera.de/blog/2018-01-29/rust-lifetimes-for-the-uninitialised/",
      "date_published": "2018-01-29T15:30:00+01:00",
      "author": {
        "name": "Florian Gilcher",
        "url": "http://asquera.de/blog"
      },
      "tags": [
        "Language",
        "Getting Started"
      ]
    },
    {
      "id": "92664a59-08e0-4185-aab2-cd0a29f303f8",
      "title": "Writing eBPF tracing tools in Rust",
      "content_text": "Writing eBPF tracing tools in Rust",
      "url": "https://jvns.ca/blog/2018/02/05/rust-bcc/",
      "date_published": "2018-02-05T10:23:44+00:00",
      "author": {
        "name": "Julia Evans",
        "url": "https://jvns.ca/"
      },
      "tags": [
        "Operating Systems"
      ]
    },
    {
      "id": "f4e99fe5-2dab-418d-9256-813a75036164",
      "title": "Introduction to Procedural Macros",
      "content_text": "As a newcomer to Rust, I heard the phrase “procedural macro” thrown around a lot without really understanding what it meant. I figured that I would learn about them if I ever needed them. Well, I’m working on the guts of relm, and a large chunk of it is procedural macros. I’ve learned enough about procedural macros to be dangerous, so I thought I would pass on some knowledge.",
      "url": "https://tinkering.xyz/posts/introduction-to-proc-macros/",
      "date_published": "2018-02-03T19:36:37-05:00",
      "author": {
        "name": "Zach Mitchell",
        "url": "https://tinkering.xyz/"
      },
      "tags": [
        "Language"
      ]
    },
    {
      "id": "25060712-7d38-4492-991d-a52a9111891c",
      "title": "Async/Await III: Moving Forward with Something Shippable",
      "content_text": "In the first post, we looked at the relationship between generators and a more general notion of self-references. In the second post, we narrowed down exactly what problem we need to solve to make generators work, and talked about some solutions that we’ve considered but don’t feel like we could ship in the near future.\nIn the original post, I promised that I would have a near term solution by the end of this series.",
      "url": "https://boats.gitlab.io/blog/post/2018-01-30-async-iii-moving-forward/",
      "date_published": "2018-02-04T00:00:00+00:00",
      "author": {
        "name": "boats",
        "url": "https://boats.gitlab.io/blog/"
      },
      "tags": [
        "Language"
      ]
    },
    {
      "id": "434c400b-b4ac-49c9-87fa-db2a8b5f1ba7",
      "title": "DataFusion: Big Data Platform for Rust",
      "content_text": "DataFusion is an open-source Big Data platform implemented in the Rust programming language with a similar programming style to Apache Spark.",
      "url": "https://www.datafusion.rs/",
      "date_published": "2018-02-04T16:51:47+00:00",
      "author": {
        "name": "Andy Grove",
        "url": "https://www.datafusion.rs/"
      },
      "tags": [
        "Tools and Applications",
        "Web and Network Services"
      ]
    },
    {
      "id": "303b0429-9b0c-46f8-a555-fbab8c2bdf90",
      "title": "retrobasic - A BASIC interpreter written in Rust",
      "content_text": "retrobasic is a BASIC interpreter written in Rust. It is based on the original BASIC '64 implementation, and modified as needed to make it more compatible with some of the classic BASIC games.",
      "url": "https://github.com/seasalim/retrobasic",
      "date_published": "2018-02-04T17:21:55+00:00",
      "author": {
        "name": "seasalim",
        "url": "https://github.com/seasalim"
      },
      "tags": [
        "Tools and Applications"
      ]
    },
    {
      "id": "b4def99b-cdec-46c6-9816-a6c85c999ae9",
      "title": "Beginner Bites: A taste of Rust, a safe, concurrent and practical language!",
      "content_text": "Experience a sampler of Rust. You’ll get set up, then solve the first Project Euler problem in Rust. This is a language you can’t miss.",
      "url": "https://hackernoon.com/a-taste-of-rust-6d8fc60e050",
      "date_published": "2018-02-04T11:01:00.900+00:00",
      "author": {
        "name": "Andrew Jakubowicz",
        "url": "https://hackernoon.com/@spyr1014"
      },
      "tags": [
        "Getting Started"
      ]
    },
    {
      "id": "c73d7d0b-4f7a-4448-acee-d98dbb499461",
      "title": "Adventures in Rust: A Basic 2D Game",
      "content_text": "In an effort to do more fun side projects, I’ve been learning Rust, a wonderful systems programming language developed by the Mozilla Foundation. It’s been a while since I’ve touched a compiled language as my day-to-day often deals with Python and Javascript variants. I was inspired after seeing a lot of interesting articles about Rust usage and decided to dive into learning Rust by creating a very basic 2D game, inspired by the classic Defender arcade game.",
      "url": "https://a5huynh.github.io/2018/02/02/adventures-in-rust.html",
      "date_published": "2018-02-02T00:00:00+00:00",
      "author": {
        "name": "Andrew Huynh",
        "url": "https://a5huynh.github.io/"
      },
      "tags": [
        "Games and Graphics"
      ]
    },
    {
      "id": "4aeb0aa5-6a72-41c9-87bc-a2e24b5e33d3",
      "title": "Writing a command-line program in Rust - Federico's Blog",
      "content_text": "As a library writer, it feels a bit strange, but refreshing, to write a program that actually has a main() function. My experience with Rust so far has been threefold:",
      "url": "https://people.gnome.org/~federico/blog/writing-a-command-line-program-in-rust.html",
      "date_published": "2018-02-03T11:41:20-06:00",
      "author": {
        "name": "Federico Mena Quintero",
        "url": "https://people.gnome.org/~federico/blog/index.html"
      },
      "tags": [
        "Tools and Applications"
      ]
    },
    {
      "id": "b8c9dfda-526c-453c-a93b-5c96a207643e",
      "title": "Hairy Stuff",
      "content_text": "Last month I was working on a lot of new test scenes for my Rust implementation of the PBRT renderer. But a big chunk of my time went into implementing the curve shape needed for the geometry of hair, and a material, which implements a hair scattering model.",
      "url": "https://www.janwalter.org/jekyll/rendering/pbrt/2018/02/01/hairy-stuff.html",
      "date_published": "2018-02-01T13:30:00+01:00",
      "author": {
        "name": "Jan Walter",
        "url": "https://www.janwalter.org/"
      },
      "tags": [
        "Games and Graphics"
      ]
    },
    {
      "id": "444386e2-51fc-488e-ac19-0aa71a4d89a3",
      "title": "PoC: compiling to eBPF from Rust",
      "content_text": "I have been playing with eBPF (extended Berkeley Packet Filters), a neat feature present in recent Linux versions (it evolved from the much older BPF filters). It is a virtual machine running in th…",
      "url": "https://unhandledexpression.com/2018/02/02/poc-compiling-to-ebpf-from-rust/",
      "date_published": "2018-02-02T20:33:08+00:00",
      "author": {
        "name": "Geoffroy Couprie",
        "url": "https://unhandledexpression.com/"
      },
      "tags": [
        "Operating Systems"
      ]
    },
    {
      "id": "93d7f09d-e1eb-4d6a-a792-5765326730be",
      "title": "Make your own make",
      "content_text": "An obvious idea is to use Rust for task automation. Originally, I have proposed creating a special Cargo subcommand to execute build tasks, implemented as Rust programs, in this thread. However, since then I realized that there are built-in tools in Cargo which allow one to get a pretty ergonomic solution. Namely, the combination of workspaces, aliases and ability to define binaries seems to do the trick.",
      "url": "https://matklad.github.io/2018/01/03/make-your-own-make.html",
      "date_published": "2018-01-03T10:52:50+00:00",
      "author": {
        "name": "Aleksey Kladov",
        "url": "https://matklad.github.io/"
      },
      "tags": [
        "Tools and Applications"
      ]
    },
    {
      "id": "d2fc34d4-c1ec-4c3d-8e39-b420b8f20fe8",
      "title": "Memory Safety in Rust: A Case Study with C",
      "content_text": "To demonstrate the value of Rust's memory safety rules, I contrast the implementation of a simple vector library in C and Rust, highlighting where and how Rust's static analysis can prevent tricky memory errors.",
      "url": "http://willcrichton.net/notes/rust-memory-safety/",
      "date_published": "2018-02-02T00:00:00+00:00",
      "author": {
        "name": "Will Crichton",
        "url": "http://willcrichton.net/notes/"
      },
      "tags": [
        "Computer Science"
      ]
    },
    {
      "id": "1ccb8993-1118-4eb4-a1fb-0c6146948662",
      "title": "Benchmark of different Async approaches in Rust",
      "content_text": "The story about Rust’s async is still a bit in flux. There’s a bunch of libraries with their pros and cons and different approaches. Even I’m a bit to blame for that, as I’m writing one of my own, called Corona.",
      "url": "https://vorner.github.io/async-bench.html",
      "date_published": "2018-02-03T11:16:55+00:00",
      "author": {
        "name": "Michal 'vorner' Vaner",
        "url": "https://vorner.github.io/"
      },
      "tags": [
        "Performance"
      ]
    },
    {
      "id": "0cced83f-3736-4917-87a0-408fb4d9f6bb",
      "title": "Introduction to lyon: 2D vector graphics rendering on the GPU in Rust",
      "content_text": "Lyon is a side-project that I have been working on for quite a while. The goal is to play with rendering 2D vector graphics on the GPU, and it's been a lot of fun so far. I haven't talked a lot about it online (except for a couple of reddit threads a year or two ago) so I figured it would be a good topic to get this blog started.",
      "url": "https://nical.github.io/posts/lyon-intro.html",
      "date_published": "2018-01-22T00:00:00+01:00",
      "author": {
        "name": "Nical",
        "url": "https://nical.github.io/index.html"
      },
      "tags": [
        "Games and Graphics"
      ]
    },
    {
      "id": "5c8f0581-5b1d-485b-852c-83c0deef73d5",
      "title": "Rust and WebAssembly with Turtle - /var/blog",
      "content_text": "In this post, I'll walk through a few of the highlights of getting Turtle, a Rust library for creating animated drawings, to run in the browser with WebAssembly.",
      "url": "https://varblog.org/blog/2018/01/08/rust-and-webassembly-with-turtle/",
      "date_published": "2018-01-08T09:54:00-06:00",
      "author": {
        "name": "Marshall Pierce",
        "url": "https://varblog.org/"
      },
      "tags": [
        "Web and Network Services"
      ]
    },
    {
      "id": "2168f429-844d-4629-97da-c149e9026cfd",
      "title": "mdcat - Cat for markdown: Show markdown documents in TTYs",
      "content_text": "Cat for markdown: Show markdown documents in TTYs",
      "url": "https://github.com/lunaryorn/mdcat",
      "date_published": "2018-02-03T18:23:00+11:00",
      "author": {
        "name": "Sebastian Wiesner",
        "url": "https://swsnr.de/"
      },
      "tags": [
        "Tools and Applications"
      ]
    },
    {
      "id": "e1a29851-ab4c-4739-a41f-56e9c783f5e4",
      "title": "Faster Progress Report 2",
      "content_text": "faster began as a yak shave, created to aid base💯 in its quest to become the fastest meme on Github. Writing an explicit AVX2-accelerated version of base💯's encoder and decoder, then realizing I'd have to do the same thing again to see the speedups on my Ivy Bridge desktop, pushed me to make this library. Months later, it has blossomed into its own project, and has eclipsed base💯 in both popularity and promise.",
      "url": "https://adamniederer.com/blog/faster-pr-2.html",
      "date_published": "2018-01-28T22:14:41+00:00",
      "author": {
        "name": "Adam Niederer",
        "url": "https://adamniederer.com/blog/blog.html"
      },
      "tags": [
        "Performance",
        "Crates"
      ]
    },
    {
      "id": "d4191312-2442-4eb8-b313-67ba224829b6",
      "title": "Experimenting with the New I/O Framework (in Rust) for embedded systems",
      "content_text": "Notes on Code, by Pramode C.E",
      "url": "http://pramode.in/2018/01/31/ti-launchpad-with-rust-new-io/",
      "date_published": "2018-01-31T00:00:00-05:00",
      "author": {
        "name": "Pramode C.E",
        "url": "http://pramode.in/"
      },
      "tags": [
        "Embedded"
      ]
    },
    {
      "id": "fb492342-c776-4f9a-8792-d82efebf109f",
      "title": "Thoughts on Rust",
      "content_text": "I’ve been working on some rust projects recently and I really really love this language. I’d love it if one day I could get paid just to write rust! Until then, I’ll make do with …",
      "url": "https://barel.la/blog/2018/01/thoughts-on-rust/",
      "date_published": "2018-02-01T04:39:06+00:00",
      "author": {
        "name": "Dan Barella",
        "url": "https://barel.la/blog/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "99cd44d4-1722-4d1e-a002-693fac055af1",
      "title": "Rust should be an excellent open source citizen #rust2018",
      "content_text": "Here’s my late #rust2018 post. I contribute code to a lot of projects in a lot of different languages. I think it’s really important not to think about Rust in isolation, but in the context of the greater open source world. Here area few specific ways I think about this:",
      "url": "http://kamalmarhubi.com/blog/2018/01/31/rust2018/",
      "date_published": "2018-01-31T00:00:00-05:00",
      "author": {
        "name": "Kamal Marhubi",
        "url": "http://kamalmarhubi.com/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "cdf001ee-aea6-47e3-be58-527a3b7fdc08",
      "title": "Rust 2018: Libraries in the 2018 Epoch",
      "content_text": "The call for community blog posts has inspired lots of great responses. Most of the things that I feel are important have already been said. This post is a collection of thoughts on what I feel is important for Rust to flourish in the future. It is perhaps a bit late in the process, but it may add some new perspectives.",
      "url": "https://blog.zayenz.se/post/rust-2018/",
      "date_published": "2018-01-23T00:00:00+00:00",
      "author": {
        "name": "Zayenz",
        "url": "https://blog.zayenz.se/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "c752755c-985e-44d4-a15f-1dac8fffa86c",
      "title": "Rust is for Big Data (#rust2018)",
      "content_text": "This blog post isn’t so much about what I want from the Rust language in 2018, but more about where I see an opportunity for Rust to gain more widespread use in 2018.",
      "url": "https://andygrove.io/rust-is-for-big-data/",
      "date_published": "2018-01-29T06:07:21+11:00",
      "author": {
        "name": "Andy Grove",
        "url": "https://andygrove.io/blog"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "b02d9dda-9c01-481b-8111-0241bf8e99d4",
      "title": "Rust2018 - A year of talks",
      "content_text": "Before I address my hopes for Rust in 2018, I thought I'd look back at a year of meet ups that we've organised for London's Rust user group.",
      "url": "https://booyaa.wtf/2018/rust2018-a-year-of-talks/",
      "date_published": "2018-01-28T19:49:54+00:00",
      "author": {
        "name": "@booyaa",
        "url": "https://github.com/booyaa"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "e200a902-0b10-41fa-99ce-241d38311eea",
      "title": "On Safety, and How Rust Can Help",
      "content_text": "I’ll first talk about my opinions about safety as an abstract concept and my experiences with practicing safety in various environments; I’ll then talk about my experiences programming at work in C and Ruby; then I’ll draw upon these to talk about what Rust can currently offer my work and what I believe it still needs in order for it to strengthen its utility and efficacy in our contexts.",
      "url": "https://myrrlyn.net/blog/misc/rust-2018",
      "date_published": "2018-01-28T07:25:16+00:00",
      "author": {
        "name": "Alexander Payne",
        "url": "https://myrrlyn.net/blog"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "9de23e26-5e53-4569-afb2-0576494c75f5",
      "title": "#Rust2018: no need to panic. • r/rust",
      "content_text": "Since you asked for blog posts, and I already read many of them that didn't share my concerns, here is my take. # What I did in 2017 (and also a...",
      "url": "https://www.reddit.com/r/rust/comments/7tcyh1/rust2018_no_need_to_panic/",
      "date_published": "2018-01-27T14:24:20+00:00",
      "author": {
        "name": "SelfDistinction",
        "url": "https://www.reddit.com/user/SelfDistinction"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "9a9ed680-6525-4c70-ae8a-c4c8f6941cf1",
      "title": "Thoughts about #Rust2018",
      "content_text": "I like the concepts behind rust. I haven't had as much chance to use it as I'd like - it isn't one of the approved languages at work, and ...",
      "url": "https://lliwynd.blogspot.com.au/2018/01/thoughts-about-rust2018.html",
      "date_published": "2018-01-27T14:35:00+11:00",
      "author": {
        "name": "William Uther",
        "url": "https://lliwynd.blogspot.com.au/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "d2189bca-0b13-451d-b70c-70ec43f7a207",
      "title": "Rust 2018: Improving Safety and Ergonomics for Low-Level Programming - Bobbin Blog",
      "content_text": "There’s been a lot written about what can be done to make Rust’s tooling, libraries and infrastructure better for embedded programming, but I’d like to cover a slightly different topic: what can be done to make Rust the language itself safer and easier to use for low-level programming?",
      "url": "http://www.bobbin.io/blog/post/rust_2018_low_level/",
      "date_published": "2018-01-26T14:00:00-04:00",
      "author": {
        "name": "Jonathan Soo",
        "url": "http://www.bobbin.io/blog/"
      },
      "tags": [
        "Rust 2018",
        "Embedded"
      ]
    },
    {
      "id": "a9de17fb-57cf-442a-988c-8ab1ec79b3db",
      "title": "Crate Management for #rust2018",
      "content_text": "When I started with Rust, I was planning on blogging about my experience. As I learned though, I found most of the documentation I needed was in blog posts that, though helpful, would give different suggestions without a hint as to why they solved the problems differently. This is frustrating for someone new because you just want to get your task done and not have to first research a whole other area. I realized that the more valuable route for me would be in improving documentation and tooling to serve as living documentation.",
      "url": "https://epage.github.io/blog/2018/01/crate-management/",
      "date_published": "2018-01-26T04:20:00+00:00",
      "author": {
        "name": "Ed Page",
        "url": "https://epage.github.io/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "ae85973e-7540-4027-b53a-ee41a249d124",
      "title": "Rust 2018: Core, Embedded+SIMD, Intermesiate documenation, Async • r/rust",
      "content_text": "Hi there! I'm Nico, and I've been lurking around these parts for about a year now. I thought I'd give my 2 cents on Rust's 2018 plans. Note: this...",
      "url": "https://www.reddit.com/r/rust/comments/7syxw4/rust_2018_core_embeddedsimd_intermesiate/",
      "date_published": "2018-01-25T20:12:01+00:00",
      "author": {
        "name": "Nico",
        "url": "https://www.reddit.com/user/nicoburns"
      },
      "tags": [
        "Rust 2018",
        "Embedded"
      ]
    },
    {
      "id": "35094e1a-b385-47a6-a93f-67f8842992d6",
      "title": "My #Rust2018 wishlist • r/rust",
      "content_text": "This addition to std could significantly change how people use rust. \"Secretly\" it requires some advanced features though. impl<T, const C:...",
      "url": "https://www.reddit.com/r/rust/comments/7sx6s9/my_rust2018_wishlist/",
      "date_published": "2018-01-25T16:22:17+00:00",
      "author": {
        "name": "Epicat Supercell",
        "url": "https://www.reddit.com/user/EpicatSupercell"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "1151cad4-ce36-4944-96d3-e6062f1daf97",
      "title": "The Job Advertising Story of Rust – Vignesh Sankaran – Medium",
      "content_text": "Note: This is the first blog post that I’ve ever written. Feedback is much appreciated :).",
      "url": "https://medium.com/@vign_esh/the-job-advertising-story-of-rust-5c6394e8ecab",
      "date_published": "2018-01-22T10:44:36.238+00:00",
      "author": {
        "name": "Vignesh Sankaran",
        "url": "https://medium.com/@vign_esh"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "a59a299c-28d1-4c41-9563-47faea69a0b7",
      "title": "Embedded Rust in 2018 - Embedded in Rust",
      "content_text": "A blog about Rust and embedded stuff",
      "url": "http://blog.japaric.io/embedded-rust-in-2018/",
      "date_published": "2018-01-21T22:10:38+01:00",
      "author": {
        "name": "Jorge Aparicio",
        "url": "http://blog.japaric.io/"
      },
      "tags": [
        "Rust 2018",
        "Embedded"
      ]
    },
    {
      "id": "e2276407-cab7-48f6-8a4e-b981fbed0417",
      "title": "Rust and its stance in data science – Eduardo Pinho – Medium",
      "content_text": "This isn’t something that I would do very often, but a call was made, and I would like to take that chance to fill in some ideas with…",
      "url": "https://medium.com/@e_net4/rust-and-its-stance-in-data-science-76d2c5ad2363",
      "date_published": "2018-01-20T16:55:44.934+00:00",
      "author": {
        "name": "Eduardo Pinho",
        "url": "https://medium.com/@e_net4"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "268f9a5c-3a44-4ca8-b500-68fd045a2d47",
      "title": "Making Rust more awesome in 2018 - My wishlist· creativcoder's blog",
      "content_text": "Rustaceans may already be familiar with Read Rust 2018. Its really awesome to see all blog posts by other people. I’m yet to finish reading all of them :P\nAdding to the chain of wishlist and suggestions for Rust’s roadmap for 2018, here’s my Wishlist:",
      "url": "https://creativcoder.github.io/post/rust-2018/",
      "date_published": "2018-01-20T18:22:00+00:00",
      "author": {
        "name": "Rahul Sharma",
        "url": "https://creativcoder.github.io/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "0c26d758-55c5-4591-9c4f-5f0d2a6cc347",
      "title": "Rust 2018",
      "content_text": "What has gotten really, really good in rust-land as I remember this year:",
      "url": "http://techne.btbytes.com/2018/01/20/rust2018.html",
      "date_published": "2018-01-20T19:57:35-05:00",
      "author": {
        "name": "Pradeep Gowda",
        "url": "http://techne.btbytes.com/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "ce30f9ab-eef4-47c0-84e9-ffb704317314",
      "title": "Rust 2018 - Growing in elegance and responsibility",
      "content_text": "First; I have the utmost respect for the fact that I'm mostly sitting here wishing, while other people do the actual work. But since you asked...",
      "url": "https://gist.github.com/diwic/6aa9da5d088c09e2fc93858928878b48",
      "date_published": "2018-01-11T07:41:14+00:00",
      "author": {
        "name": "Diwic",
        "url": "https://github.com/diwic"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "3f3b1ba5-ee90-4ece-b303-2c083010602e",
      "title": "Rust in 2018, another point of view",
      "content_text": "I wanted to write a post laying down my thoughts about Rust for a long time, and it seems like the perfect time to do so. Most of the things I've said have been touched upon recently, and probably more aptly, but here it is nonetheless!",
      "url": "https://kelseasy.github.io/001-Rust2018.html",
      "date_published": "2018-01-19T22:57:00+00:00",
      "author": {
        "name": "Kelsey Zapata",
        "url": "https://kelseasy.github.io/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "329c3ef3-1602-477e-9a38-e5becaf2aab1",
      "title": "Rust2018 And The Great Cli Awakening",
      "content_text": "This is a response to the #Rust2018 call for blog posts with a little bit of my experience and how I see the 2018 year mo...",
      "url": "http://vitiral.github.io/2018/01/17/rust2018-and-the-great-cli-awakening.html",
      "date_published": "2018-01-17T00:00:00+00:00",
      "author": {
        "name": "Garrett Berg",
        "url": "http://vitiral.github.io/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "a1e767fe-7557-4092-8f54-2071617c89b3",
      "title": "How can I help Stabilize Things?",
      "content_text": "A friend and I are working on adding Rust support to Metaparticle. We did a simple search for “decorators in Rust” and found this repo, which seemed promising. My friend added it, but s…",
      "url": "https://willmurphyscode.net/2018/01/18/how-can-i-help-stabilize-things/",
      "date_published": "2018-01-18T12:23:55+00:00",
      "author": {
        "name": "willmurphyscode",
        "url": "https://willmurphyscode.net/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "41624f5a-61da-4a5b-a347-5918dccfe3a9",
      "title": "Technical Debt",
      "content_text": "I have to 100% agree with @nrc's post. I feel like Rust has a lot of great things in the pipeline, but it worries me that there are so many open tracking issues and open issues in general (over 3100 at time of writing).\n\nA lot has been written already about this, so instead I will focus on a few areas of technical debt that I see as particularly high-impact.",
      "url": "https://gist.github.com/mark-i-m/5bccf4dd7d97751eba542fea84b41a9d",
      "date_published": "2018-01-18T00:58:22+00:00",
      "author": {
        "name": "mark-i-m",
        "url": "https://github.com/mark-i-m"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "56bc0e93-0a95-40ce-b60e-7f50c6e41560",
      "title": "matraszek.net - Rust 2018",
      "content_text": "I am pretty amazed that the Rust team always tries to get information about Rust usage from its users. Having a great vision is important, but it may not be enough to succeed. It is crucial to convince people to use Rust, and to know how to do that, we must take the perspective of the people who DO NOT use Rust.",
      "url": "http://matraszek.net/posts/rust-2018.html",
      "date_published": "2018-01-16T23:31:00+01:00",
      "author": {
        "name": "Jakub Matraszek",
        "url": "http://matraszek.net/posts/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "db216954-cdc9-4253-a155-6e9c7a25cd39",
      "title": "Retooling the Rust Libs Team team for 2018 · Aaron Turon",
      "content_text": "The Libs Team met today to discuss a weighty topic: what is its mission as a team, and are we set up to achieve it?\n\nAs team lead, I took the liberty of proposing a mission statement:\n\nTo improve the quality of the crate ecosystem, as a product.",
      "url": "http://aturon.github.io/blog/2018/01/16/libs-mission/",
      "date_published": "2018-01-16T00:00:00-08:00",
      "author": {
        "name": "Aaron Turon",
        "url": "http://aturon.github.io/blog/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "b82f509d-28c8-4859-afe4-a9d4e47538d0",
      "title": "Rust 2018 - Just 2 \"little things\" • r/rust",
      "content_text": "Well. Just two \"minor\" points: 1. Game Development Libraries 2. Rust idomatic GUI Frameworks",
      "url": "https://www.reddit.com/r/rust/comments/7qv1gu/rust_2018_just_2_little_things/",
      "date_published": "2018-01-16T19:58:55+00:00",
      "author": {
        "name": "CodingChris",
        "url": "https://www.reddit.com/user/CodingChris"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "9b240369-ee8e-4d0d-8914-92bbb0145411",
      "title": "Fortanix Blog | Secure by design:  Rust and Runtime Encryption",
      "content_text": "At Fortanix, we are big proponents of deterministic security.  Designing in security from the get-go by using secure programming principles is a big part of that.",
      "url": "https://www.fortanix.com/blog/2018/01/secure-by-design-rust-and-runtime-encryption/",
      "date_published": "2018-01-16T00:00:00+00:00",
      "author": {
        "name": "Jethro Beekman",
        "url": "https://www.fortanix.com/blog/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "35c2903a-687a-448d-b594-c46ee423989d",
      "title": "Using static typing to protect against code injection attacks",
      "content_text": "Code injection attack is a method of taking advantage of a flaw where an application can be tricked to relay malicious code from a system…",
      "url": "https://medium.com/sensorfu/using-static-typing-to-protect-against-code-injection-attacks-353002ca6f2b",
      "date_published": "2018-01-16T12:33:25.545+00:00",
      "author": {
        "name": "Ossi Herrala",
        "url": "https://medium.com/@oherrala"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "11b9b0c3-6cde-450a-91b8-41e4bfc0a514",
      "title": "Rust 2018 - Sergey Potapov",
      "content_text": "With this post, I would like to give my feedback to the rust community in the\nscope of A Call for Community Blogposts. This article is structured in …",
      "url": "http://greyblake.com/blog/2018/01/16/rust-2018/",
      "date_published": "2018-01-16T00:08:00+01:00",
      "author": {
        "name": "Sergey Potapov",
        "url": "http://greyblake.com/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "5fdd7918-2122-4ff3-875c-0facf2bcd1f1",
      "title": "#Rust2018 - Exploring New Contribution and Feedback Models",
      "content_text": "Since I'm coming pretty late to the #Rust2018 party, most of the things I wanted to say have already been said! Ashley's kick-off post was kind of a meta-#Rust2018 for me, calling for us to experiment with new ways to get community feedback in Rust. I personally really enjoyed",
      "url": "http://yehudakatz.com/2018/01/15/rust-2018/",
      "date_published": "2018-01-15T20:40:51+00:00",
      "author": {
        "name": "Yehuda Katz",
        "url": "http://www.yehudakatz.com/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "40d80139-ee61-4eb1-9a66-eb3fba32430f",
      "title": "Rust in 2018: Let’s fix where the bullet holes aren’t",
      "content_text": "Although I’m a rust beginner, I’ve thoroughly enjoyed reading all the Rust 2018 blogposts lately. And as a systems engineer who leans…",
      "url": "https://medium.com/@cevans3326/rust-in-2018-lets-fix-where-the-bullet-holes-aren-t-7e94cea0bd53",
      "date_published": "2018-01-16T05:49:36.867+00:00",
      "author": {
        "name": "Chris Evans",
        "url": "https://medium.com/@cevans3326"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "3936cf7f-ef74-4203-9302-bcce349e9ca5",
      "title": "A Year with Rust Game Dev",
      "content_text": "Never Slow Down.",
      "url": "http://druerridge.com/?p=536",
      "date_published": "2018-01-14T00:00:00+00:00",
      "author": {
        "name": "Dru Erridge",
        "url": "http://druerridge.com/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "c7becfa2-4e61-490a-838c-7b207956e21f",
      "title": "Rust MMXVIII, but, like, from a casual perspective – Yoshua Wuyts – Medium",
      "content_text": "*ring ring*",
      "url": "https://medium.com/@yoshuawuyts/rust-mmxviii-but-like-from-my-perspective-6363f485ab2b",
      "date_published": "2018-01-14T14:46:43.092+00:00",
      "author": {
        "name": "Yoshua Wuyts",
        "url": "https://medium.com/@yoshuawuyts"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "e7a79828-6bc7-4b09-ac5a-4be76f4a18d4",
      "title": "My Rust hopes for 2018 • r/rust",
      "content_text": "There are plenty of exciting language features which should land in 2018, I'd love to see further reductions in compile times, and there are a lot...",
      "url": "https://www.reddit.com/r/rust/comments/7qd725/my_rust_hopes_for_2018/",
      "date_published": "2018-01-14T17:32:16+00:00",
      "author": {
        "name": "theotherphil",
        "url": "https://www.reddit.com/user/theotherphil"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "87cb487b-6922-4675-b3d9-9a6767bb5a1c",
      "title": "Rust in 2018 – Dirkjan Ochtman",
      "content_text": "In a call for blog posts, the Rust community team asked community members to write up their vision for what the Rust community should focus on this year. I've wanted to contribute my thoughts and have been thinking about what to write ever since. I've been able to benefit from the many people who already posted their thoughts to sharpen my own thinking. I came up with 5 categories:",
      "url": "https://dirkjan.ochtman.nl/writing/2018/01/14/rust-in-2018.html",
      "date_published": "2018-01-14T00:00:00+01:00",
      "author": {
        "name": "Dirkjan Ochtman",
        "url": "https://dirkjan.ochtman.nl/writing"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "4bf00d31-d65c-43fc-b95a-5caa3df0ac4b",
      "title": "Rust2018 – Doug Tangren – Medium",
      "content_text": "Rust, in no small way, has captured quite a bit of my imagination in the last 4 and a half years. The language and community has a lot of…",
      "url": "https://medium.com/@softprops/rust2018-75393b4a086f",
      "date_published": "2018-01-14T22:07:16.240+00:00",
      "author": {
        "name": "Doug Tangren",
        "url": "https://medium.com/@softprops"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "f3f500d5-d108-4f83-808e-e15ad520cce7",
      "title": "Embedded Rust in 2018",
      "content_text": "I recently picked up an embedded project that I hadn't touched for a few months, so I could add some new features. I was disappointed to not...",
      "url": "http://railwayelectronics.blogspot.com.au/2018/01/i-recently-picked-up-embedded-project.html",
      "date_published": "2018-01-14T00:00:00+00:00",
      "author": {
        "name": "theJPster",
        "url": "http://railwayelectronics.blogspot.com.au/"
      },
      "tags": [
        "Rust 2018",
        "Embedded"
      ]
    },
    {
      "id": "4d4b233f-fba3-4e3e-9e80-fe79603a38b0",
      "title": "#Rust2018: A Neon Wish List",
      "content_text": "While I’ve been thoroughly enjoying the Rust community’s spirited #Rust2018 blog-fest, I wasn’t really thinking of participating myself until Julia Evans pointed out the leadership wants to hear from everyone—even if I might not have anything especially new to add. So here’s my little wish list for Rust in 2018. Since I’m not in Rust’s leadership, I don’t have to worry about synthesizing some grand narrative for the whole of Rust. So I’ll just focus on a few things that would be personally useful to me. In particular, I’ll stick to topics that would be helpful for my Neon project, a set of bindings for writing native Node extension modules in Rust.",
      "url": "http://calculist.org/blog/2018/01/13/rust-2018-a-neon-wish-list/",
      "date_published": "2018-01-13T17:45:00-08:00",
      "author": {
        "name": "David Herman",
        "url": "http://calculist.org/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "6b8e7f04-ece2-4dd1-9256-4ce6881d3c11",
      "title": "Most desired from Rust in 2018",
      "content_text": "Recently there was a call for community blog posts themed about ideas and expectation for Rust in the coming year. I definitely can't count myself as part of community yet as my experience with Rust so far has been purely about experimenting and research but it feels like a great opportunity to share my thoughts so far.",
      "url": "https://blog.mist.global/articles/Most_desired_from_Rust_in_2018.html",
      "date_published": "2018-01-14T12:17:42+00:00",
      "author": {
        "name": "Mihails Strasuns",
        "url": "https://blog.mist.global/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "2a2b7699-5a1a-4379-8a33-3faf4badd512",
      "title": "2018: The year we learn Rust 1.0",
      "content_text": "This is my reply to Rusts call for community blog posts.\n\nI’m known for being quite happy with Rust as is. Indeed, my first post on focusing on stable Rust was more than 2 years ago ;).\n\nAlso, note that I’ve been interested (and practically involved) in the growing and adoption of programming languages since around 2004, which was when I started doing users support for Ruby in Germany.",
      "url": "http://yakshav.es/rust-2018/",
      "date_published": "2018-01-12T11:33:54+00:00",
      "author": {
        "name": "Florian Gilcher",
        "url": "http://yakshav.es/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "59a502dd-84c7-4ad1-9a78-7d042495a25b",
      "title": "Rust - My wish list for 2018  · Murali's Blog ",
      "content_text": "I am excited about Rust after spending a little time with it last year. Here are my thoughts on how it can improve in 2018.",
      "url": "http://www.mmrath.com/post/rust-my-wish-list-for-2018/",
      "date_published": "2018-01-06T00:00:00+00:00",
      "author": {
        "name": "Murali Mohan Rath",
        "url": "http://www.mmrath.com/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "79f7ee1c-a798-4241-bc2a-902f8a16c548",
      "title": "Rust 2018 - machine learning perspective • r/rust",
      "content_text": "Since we have this January blogging stream, I would like to talk about using Rust for machine learning. First, I would like to point out, that I...",
      "url": "https://www.reddit.com/r/rust/comments/7p6rpw/rust_2018_machine_learning_perspective/",
      "date_published": "2018-01-09T12:26:35+00:00",
      "author": {
        "name": "osamc",
        "url": "https://www.reddit.com/user/osamc"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "072421d7-7def-43b7-b3f8-441d735cba8c",
      "title": "Happy New Year 2018",
      "content_text": "For me it's also a chance to do a review of the year 2017. Most of it I spend on a Rust implementation of PBRT (beside working for The Mill and making sure we can deliver our moving images, rendered most of the time with Arnold).",
      "url": "https://www.janwalter.org/jekyll/review/2017/2018/01/01/happy-new-year-2018.html",
      "date_published": "2018-01-01T00:00:00+00:00",
      "author": {
        "name": "Jan Walter",
        "url": "https://www.janwalter.org/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "92c745cd-26fa-41e0-8b1b-a9827873af6e",
      "title": "Rust 2018",
      "content_text": "There’s a call for the community to write what they’d like to see in Rust in the following year. So, here it goes. And yes, this is a bit personal, what I would like to see in Rust ‒ I fully respect that others have different needs and that not my every wish need to be granted, because someone else will have a better idea for sure.",
      "url": "https://vorner.github.io/rust-2018.html",
      "date_published": "2018-01-08T21:40:00+00:00",
      "author": {
        "name": "Michal 'vorner' Vaner",
        "url": "https://vorner.github.io/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "afadc638-f50b-42a3-a058-a475109ce9a7",
      "title": "Rust 2018: maybe don’t be too stable",
      "content_text": "I initially did not want to write a post with what I want and foresee for Rust in 2018, because I’m already very happy with it! I have spent more than 4 years tinkering with the language, exp…",
      "url": "https://unhandledexpression.com/2018/01/10/rust-2018-maybe-dont-be-too-stable/",
      "date_published": "2018-01-10T18:25:14+00:00",
      "author": {
        "name": "Geoffroy Couprie",
        "url": "https://unhandledexpression.com/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "4a40cb13-61ed-461e-9117-57e3a530ab61",
      "title": "Snips big wish for #Rust2018: libraries or portability, pick two",
      "content_text": "Snips engineering team works on shipping vocal assistants to mobile platforms (iOS and android) and a growing diversity of single board…",
      "url": "https://medium.com/snips-ai/snips-big-wish-for-rust2018-libraries-or-portability-pick-two-814d104586d9",
      "date_published": "2018-01-09T17:38:31.679+00:00",
      "author": {
        "name": "Mathieu Poumeyrol",
        "url": "https://medium.com/@mathieu.poumeyrol"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "9bd09566-0ba0-47a2-9400-a01a0e218e51",
      "title": "Rust incremental-difficulty tutorial series – Theodore Keloglou – Medium",
      "content_text": "A response to Rust’s Call for Community Blogposts #Rust2018",
      "url": "https://medium.com/@sirodoht/rust-incremental-difficulty-tutorial-series-8c09ecdd38e7",
      "date_published": "2018-01-03T23:16:35.588+00:00",
      "author": {
        "name": "Theodore Keloglou",
        "url": "https://medium.com/@sirodoht"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "6aea5335-d3b5-4c36-be35-8461d9206149",
      "title": "Rust and crate of wishes for 2018 – Nabeel Ali Memon – Medium",
      "content_text": "I appreciate the great community effort being fostered by Mozilla’s Rust team and the cool Rust community outside that have been helpful in…",
      "url": "https://medium.com/@nimtiazm/rust-and-crate-of-wishes-for-2018-1258f6977d42",
      "date_published": "2018-01-13T09:14:15.330+00:00",
      "author": {
        "name": "Nabeel Ali Memon",
        "url": "https://medium.com/@nimtiazm"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "28b10d91-030e-4828-b02e-4d173b8cfab9",
      "title": "Rust in 2018 – Black Djikstra – Medium",
      "content_text": "As a beginner in rust, it has been the gateway to so many interesting concepts.",
      "url": "https://medium.com/@blackdjikstra/rust-in-2018-d6c0be87cba8",
      "date_published": "2018-01-12T23:05:58.997+00:00",
      "author": {
        "name": "Black Djikstra",
        "url": "https://medium.com/@blackdjikstra"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "914dd414-184a-4d72-adfe-cea12e7a9fe4",
      "title": "What Rust Needs in 2018 to Succeed — Llogiq on stuff",
      "content_text": "In the spirit of the current Rust blog post extravaganza, here are my 2¢ on the most important work to make Rust win big",
      "url": "https://llogiq.github.io/2018/01/09/rust.html",
      "date_published": "2018-01-09T00:00:00+00:00",
      "author": {
        "name": "llogiq",
        "url": "https://llogiq.github.io/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "0304d95e-71f7-47c8-b415-5d6d2ffb5e85",
      "title": "Looking in on Rust in 2018",
      "content_text": "With the call for #Rust2018 blog posts on how this year’s roadmap should look, I figured I’d chime in with a few items. Now, I’m not using Rust in any shape or form in my day-to-day life (though I’d like to!), but I follow along with the community because so many exciting things happen, and I find Rust itself to be a breath of fresh air. In other words, my view is shaped mostly by my role as observer (rather than active participant), and the primary need I want to address is to make it easier to convince coworkers and higher-ups to give Rust a shot.",
      "url": "https://kasma1990.gitlab.io/2018/01/07/looking-in-on-rust-in-2018/",
      "date_published": "2018-01-07T00:00:00+00:00",
      "author": {
        "name": "Kasper Andersen",
        "url": "https://kasma1990.gitlab.io/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "f281d4cb-864b-4afa-98be-67a773a5bbf5",
      "title": "My desired features for a Rust debugger",
      "content_text": "Backward stepping Most debuggers provide the following commands: Step into the next function (reaching its beginning-point) Hop over the next function call Jump to the end of the current function R…",
      "url": "https://carlomilanesi.wordpress.com/2018/01/04/my-desired-features-for-a-rust-debugger/",
      "date_published": "2018-01-04T02:36:54+00:00",
      "author": {
        "name": "Carlo Milanesi",
        "url": "https://carlomilanesi.wordpress.com/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "547cd24b-800d-406a-8608-62197c4a23f2",
      "title": "Rust in 2018: feature polish and notes on abstraction",
      "content_text": "Despite the overwhelming success of the impl period, many of the features tackled are massive undertakings which could not possibly have been polished in suc...",
      "url": "https://byte.observer/posts/2018/01/12/rust-2018",
      "date_published": "2018-01-12T04:11:49+00:00",
      "author": {
        "name": "Noah Weninger",
        "url": "https://byte.observer/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "92a3a3bb-1858-49c7-9a91-7750060fdedf",
      "title": "2017 in Rust",
      "content_text": "Inspired by the Call for Community Blogposts I want to summarize my experiences and thoughts on Rust in 2017 and what I am excited about for 2018.\nReflecting 2017 2017 was an amazing year for Rust. We got 8 releases of rust itself! We got basic procedural macros allowing custom derive (also known as “macros 1.1”) in the first release last year (1.15.0). This made serde 1.0 possible, if I’m not mistaken?",
      "url": "https://beyermatthias.de/blog/2018/01/05/2017-in-rust/",
      "date_published": "2018-01-05T19:00:00+00:00",
      "author": {
        "name": "Matthias Beyer",
        "url": "https://beyermatthias.de/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "fa1c0f13-5a61-40d8-8ac5-0c702578abd8",
      "title": "What I’d Like To See In Rust",
      "content_text": "blog post on thoughts for rust 2018",
      "url": "https://austinstig.github.io/rs2018/post",
      "date_published": "2018-01-04T15:59:54+00:00",
      "author": {
        "name": "austinstig",
        "url": "https://github.com/austinstig"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "75ae624e-fe9b-4705-9bc2-99066deeb214",
      "title": "Rusting as a student - ",
      "content_text": "At the request of the Rust team, the community was tasked with writing blog posts talking about the future and history of rust as it would pertain to improving the language in 2018. I thought I'd take the opportunity to finally begin writing, since it seems like blogging is all the rage nowadays.",
      "url": "http://samuelresendez.me/scribbles/sophomore_rust.html",
      "date_published": "2018-01-13T04:04:26+00:00",
      "author": {
        "name": "samuelresendez",
        "url": "http://samuelresendez.me/scribbles/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "e769013d-619e-4180-8ca7-3960e1440ea1",
      "title": "Fast Rust in 2018",
      "content_text": "Rust is already a fast language, but there are still many opportunities to make it the fast language. While many people will rightfully focus on usability, tooling, and community goals for 2018, I will focus on some exciting changes which will make Rust the star of HPC.",
      "url": "https://adamniederer.com/blog/rust-2018.html",
      "date_published": "2018-01-12T07:07:37+00:00",
      "author": {
        "name": "Adam Niederer",
        "url": "https://adamniederer.com/blog/blog.html"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "cb089afe-f076-4527-bb9a-342be41414e1",
      "title": "Rust in 2018: it's way easier to use! - Julia Evans",
      "content_text": "Rust in 2018: it's way easier to use!",
      "url": "https://jvns.ca/blog/2018/01/13/rust-in-2018--way-easier-to-use/",
      "date_published": "2018-01-14T06:05:00+00:00",
      "author": {
        "name": "Julia Evans",
        "url": "https://jvns.ca/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "8a17aa75-d002-4e09-bfdf-d5d38241950c",
      "title": "rust2018.md",
      "content_text": "First a few words about me. I was and still am a student, and most of my coding is for learning and because it is fun. Also, coding is a great excuse for procrastinating something more important :). Having contributed to open source codebases has helped me determine that I want to do this in a day job once I'm done with my studies.",
      "url": "https://gist.github.com/est31/c063704716b6880fd74ce2ba11b11298",
      "date_published": "2018-01-08T02:42:14+00:00",
      "author": {
        "name": "est31",
        "url": "https://github.com/est31"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "1cc61fb9-22bb-476d-b133-c1c38d2e9f64",
      "title": "Goals and Directions for Rust in 2018 - WezM.net by Wesley Moore",
      "content_text": "Reflecting on Rust in 2017 and what might be worth focussing on in 2018.",
      "url": "http://www.wezm.net/technical/2018/01/goals-directions-rust-2018/",
      "date_published": "2018-01-07T13:07:00+11:00",
      "author": {
        "name": "Wesley Moore",
        "url": "http://www.wezm.net/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "438424a8-c55f-49c7-9860-683e805bc36e",
      "title": "#Rust2018 goals for 2018 • r/rust",
      "content_text": "My 2 cents: Totally agree with people who say we need an \"impl year\", but also I would love to see wasm become a first class platform. I think...",
      "url": "https://www.reddit.com/r/rust/comments/7oyj9j/rust2018_goals_for_2018/",
      "date_published": "2018-01-08T13:35:48+00:00",
      "author": {
        "name": "richhyd",
        "url": "https://www.reddit.com/user/richhyd"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "91e2a724-3253-43ec-8b62-bd6285d7895c",
      "title": "Rust2018: back to the roots • r/rust",
      "content_text": "I can think of many goals for Rust in 2018, but for me at least 2017 went through pretty quickly, so I asked myself the question: If I could...",
      "url": "https://www.reddit.com/r/rust/comments/7p6n90/rust2018_back_to_the_roots/",
      "date_published": "2018-01-09T11:59:53+00:00",
      "author": {
        "name": "0b_0101_001_1010",
        "url": "https://www.reddit.com/user/0b_0101_001_1010"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "9415f407-45c8-430e-b4e2-a6947848acaf",
      "title": "A traveller's journey into Rust 2017, 2018",
      "content_text": "A Year Of Rust",
      "url": "https://blog.x5ff.xyz/blog/a-journey-into-rust-2018/",
      "date_published": "2018-01-08T00:00:00+00:00",
      "author": {
        "name": "Claus",
        "url": "https://blog.x5ff.xyz/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "c6752215-9ccb-4c67-b512-bd2cfdcaae86",
      "title": "Rust2018 Wishpost: Better Debug derive • r/rust",
      "content_text": "It was asked that everyone talk about what they want to see happen with Rust in 2018, and I'm sure a lot of folks will be saying a lot of things....",
      "url": "https://www.reddit.com/r/rust/comments/7p4imw/rust2018_wishpost_better_debug_derive/",
      "date_published": "2018-01-09T04:05:10+00:00",
      "author": {
        "name": "Lokathor",
        "url": "https://www.reddit.com/user/Lokathor"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "f114d011-5554-4169-8cca-d01512308bab",
      "title": "Rust in 2018 - In Pursuit of Laziness",
      "content_text": "A week ago we put out a call for blog posts for what folks think Rust should do in 2018. This is mine. Overall focus I think 2017 was a great year …",
      "url": "https://manishearth.github.io/blog/2018/01/10/rust-in-2018/",
      "date_published": "2018-01-10T00:00:00+00:00",
      "author": {
        "name": "Manish Goregaokar",
        "url": "https://manishearth.github.io/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "9f51e626-4330-4ddd-984a-34e3b582b171",
      "title": "#Rust2018 FtW (For the Web) • r/rust",
      "content_text": "*below post is going to update quite often accordingly* This idea is actually something i got from someone else - \"now that Rust is getting...",
      "url": "https://www.reddit.com/r/rust/comments/7q53d6/rust2018_ftw_for_the_web/",
      "date_published": "2018-01-13T15:36:28+00:00",
      "author": {
        "name": "tuxmanexe",
        "url": "https://www.reddit.com/user/tuxmanexe"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "ae0144fa-a8c5-416f-8c2c-02ae2ad11c79",
      "title": "A libz blitz retrospective",
      "content_text": "This post is my personal retrospective of the libz blitz and my part in it. It's also a loose response to the #Rust2018 call for blog posts and a chance to show off my amazingly poor drawing skills. For the part most relevant to #Rust2018, see the last section.",
      "url": "https://gist.github.com/KodrAus/953e8182e81d8d9147cd32822748665f#a-libz-blitz-retrospective",
      "date_published": "2018-01-13T23:50:22+00:00",
      "author": {
        "name": "Ashley Mannix",
        "url": "https://github.com/KodrAus"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "b1a7569d-c5e6-41d9-99ea-18c4b7e9105e",
      "title": "Rust in 2018: Streamline Collaboration and Empower Intermediate Users",
      "content_text": "I wrote about the ...",
      "url": "https://matthias-endler.de/2018/rust-2018/",
      "date_published": "2018-01-09T00:00:00+00:00",
      "author": {
        "name": "Matthias Endler",
        "url": "https://matthias-endler.de/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "c506e8b8-69f1-4f39-803a-6e3a34c06145",
      "title": "Pollen Robotics call for #Rust2018: toward stability on embedded systems",
      "content_text": "Robotics developers face two main problems:",
      "url": "https://medium.com/pollenrobotics/rust-for-robotics-and-embedded-systems-in-2018-96e9be8464",
      "date_published": "2018-01-12T13:32:49.383+00:00",
      "author": {
        "name": "Pierre Rouanet",
        "url": "https://medium.com/@pierre.rouanet"
      },
      "tags": [
        "Rust 2018",
        "Embedded"
      ]
    },
    {
      "id": "067c467f-3922-40d0-a0e6-f35eafeaffc7",
      "title": "Next for Rust",
      "content_text": "Next for Rust in 2018",
      "url": "http://gilescope.ninja/rust/2018/01/11/Next-for_Rust.html",
      "date_published": "2018-01-11T16:33:12+00:00",
      "author": {
        "name": "gilescope",
        "url": "http://gilescope.ninja/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "681f1733-be53-4798-9198-6a1562783fd5",
      "title": "Branchless #Rust2018",
      "content_text": "About an oportunity for Rust, as part of the #Rust2018 request",
      "url": "https://bluejekyll.github.io/blog/rust/2018/01/10/branchless-rust.html",
      "date_published": "2018-01-10T07:00:00+00:00",
      "author": {
        "name": "Benjamin Fry",
        "url": "https://bluejekyll.github.io/blog/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "bea672e3-d5bb-4008-9439-76fe914f46a7",
      "title": "#Rust2018",
      "content_text": "I don’t have a wish list of Rust features that don’t already exist. Rather, I mainly wish that in 2018, Rust committed to certain things that already work in nightly Rust and have worked for a couple of years now.",
      "url": "https://hsivonen.fi/rust2018/",
      "date_published": "2018-01-11T00:00:00+00:00",
      "author": {
        "name": "Henri Sivonen",
        "url": "https://hsivonen.fi/author/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "80e6cc62-73cd-4b55-bcbf-5770348ed843",
      "title": "#rust2018 - cross compiling? • r/rust",
      "content_text": "I don’t have a blog or anything, I just wanted to mention an aspect of rust that could use some love this year - cross compiling. Right now...",
      "url": "https://www.reddit.com/r/rust/comments/7phh1l/rust2018_cross_compiling/",
      "date_published": "2018-01-10T18:16:51+00:00",
      "author": {
        "name": "lurebat",
        "url": "https://www.reddit.com/user/lurebat"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "df1ee60b-5fb1-49a4-a0e8-1f05961ed250",
      "title": "Rust In 2018",
      "content_text": "Rust in 2018 This short post is a reflection on Rust in 2017 and some ideas I would love to see in 2018 written in the spirit of this blog post. I will keep things brief and try not to repeat what others have already shared. There have been many wonderful ideas that makes me even more enthusiastic about Rust so I hope that I can add to the excitement with a few of my own.",
      "url": "https://gsquire.github.io/static/post/rust-in-2018/",
      "date_published": "2018-01-10T19:05:55-08:00",
      "author": {
        "name": "Garrett Squire",
        "url": "https://gsquire.github.io/static/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "8104012c-3de8-4824-b11f-9bbaafff2408",
      "title": "Refutable Let and Rust in 2018",
      "content_text": "Examining RFC 1303 Add a `let...else` expression",
      "url": "https://dev.to/cad97/refutable-let-and-rust-in-2018-4l3k",
      "date_published": "2018-01-11T00:00:00+00:00",
      "author": {
        "name": "Christopher Durham",
        "url": "https://dev.to/cad97"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "19c0f10d-e9a9-4f53-9f6f-08a106809a30",
      "title": "Rust 2018",
      "content_text": "Instead of fire flowers,this year the Rust Team made a public call for blogposts, asking the community to write posts thatreflect on Rust in 2017 and what they wish for Rust in 2018. What follows are some of the things I personally see as important,and that I’d love to prioritize on in the following months.",
      "url": "https://deterministic.space/rust-2018.html",
      "date_published": "2018-01-10T00:00:00+01:00",
      "author": {
        "name": "Pascal Hertleif",
        "url": "https://deterministic.space/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "818cfee5-06f3-4d25-b4b9-cafb65a57697",
      "title": "#Rust2018 — Aimlessly Going Forward",
      "content_text": "I use Rust to write simple computer games as a hobby. I'm not a professional or even an experienced game developer. The reason I picked up Rust is because I wanted something that...",
      "url": "https://aimlesslygoingforward.com/blog/2018/01/10/rust-2018/",
      "date_published": "2018-01-10T00:00:00+00:00",
      "author": {
        "name": "Tomas Sedovic",
        "url": "https://aimlesslygoingforward.com/blog/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "60351f3f-c088-42df-819e-a3ad0c44772a",
      "title": "Rust in 2018: a people perspective · Aaron Turon",
      "content_text": "The call for #Rust2018 blog posts has generated a fantastic set of responses so far, and there’s already an emerging consensus around much of the technical focus for the year. Since I largely agree with what others have said on that front, I want to focus my post on the people side of things: what kind of impact do we want to make on people, both contributors and customers, in 2018?",
      "url": "http://aturon.github.io/blog/2018/01/09/rust-2018/",
      "date_published": "2018-01-09T00:00:00-08:00",
      "author": {
        "name": "Aaron Turon",
        "url": "http://aturon.github.io/blog/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "b17769a4-33cf-476a-ab72-88760bf8e8ec",
      "title": "Talking about how we talk about Rust in 2018",
      "content_text": "In this post, I want to talk about how we talk about Rust in 2018. I think there are some ways we can change what we’re saying and how we’re saying it. These changes will help Rust be more approachable for beginners and an even nicer place in general.",
      "url": "http://www.jonathanturner.org/2018/01/how-we-talk-about-rust-in-2018.html",
      "date_published": "2018-01-10T00:00:00+00:00",
      "author": {
        "name": "Jonathan Turner",
        "url": "http://www.jonathanturner.org/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "bd4a7ce1-c702-4965-b9c4-01e0ffca352b",
      "title": "My Goals for Rust in 2018",
      "content_text": "The Rust project has requested blog posts about the project’s goals for 2018. I found myself in pretty much complete agreement with Nick Cameron’s post, so I thought instead I would write about my own personal goals for Rust in 2018. I am fortunate enough to work on Rust full-time; modulated by the work that needs to get done to accomplish larger team goals, these are some things that I’m individually very motivated to make progress on in 2018.",
      "url": "https://boats.gitlab.io/blog/post/2018-01-08-goals-for-rust/",
      "date_published": "2018-01-09T00:00:00+00:00",
      "author": {
        "name": "withoutboats",
        "url": "https://boats.gitlab.io/blog/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "8595c82d-ae75-4e7c-8e19-e7458849d61b",
      "title": "Looking back at Rust in 2018 • Steve Klabnik",
      "content_text": "A careful reader will note the date of this post; it’s fundamentally in response to this call for blog posts, with a rhetorical device of looking backwards as if my personal plans for Rust came true. If you’re reading this in 2019 or beyond, this... | Steve Klabnik | &ldquo;The most violent element in society is ignorance.&rdquo; - Emma Goldman",
      "url": "http://words.steveklabnik.com/looking-back-at-rust-in-2018",
      "date_published": "2018-01-09T00:00:00+00:00",
      "author": {
        "name": "Steve Klabnik",
        "url": "http://words.steveklabnik.com/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "fa46df66-4a9e-4500-8d64-270c723b1071",
      "title": "#Rust2018",
      "content_text": "As part of #Rust2018, I thought I would try to writeup my own (current) perspective. I’ll try to keep things brief. First and foremost, I think that this yea...",
      "url": "http://smallcultfollowing.com/babysteps/blog/2018/01/09/rust2018/",
      "date_published": "2018-01-09T00:00:00+01:00",
      "author": {
        "name": "Niko Matsakis",
        "url": "http://smallcultfollowing.com/babysteps/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "8c52a558-78c4-4c5a-b06b-7d254af78db3",
      "title": "#Rust2018 : Don’t be the new Haskell – Hacker Noon",
      "content_text": "TLDR: Big companies adoption determine the success of the language, not the quality of the language. Let’s target big companies / projects…",
      "url": "https://hackernoon.com/rust-2018-dont-be-the-new-haskell-a383dbd74481",
      "date_published": "2018-01-09T03:02:35.835+00:00",
      "author": {
        "name": "Tibo Delor",
        "url": "https://hackernoon.com/@tibotz"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "de1fbb2e-47e5-4477-8b2c-533a82b479aa",
      "title": "Why Rust? A Two Year Retrospective",
      "content_text": "Why Rust? That was a question I asked exactly two years ago when I started Way Cooler (by the way, happy 2nd birthday Way Cooler!).",
      "url": "http://way-cooler.org/blog/2018/01/09/way-cooler-turns-two.html",
      "date_published": "2018-01-09T00:00:00+00:00",
      "author": {
        "name": "Preston Carpenter",
        "url": "https://timidger.github.io/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "342a3884-6f24-4d2e-8a60-11d9ec06f5ee",
      "title": "Adding Superheroes to the Rust Brazilian Community – Mozilla Brasil",
      "content_text": "In December, Mozilla Brazil in partnership with the Rust Lang BR community launched a project that brings together Rust programmers and community leaders from regions all over Brazil to advance ...",
      "url": "https://mozillabr.org/2018/01/adding-superheroes-to-the-rust-brazilian-community/",
      "date_published": "2018-01-08T18:16:39-02:00",
      "author": {
        "name": "Geraldo Barros",
        "url": "https://mozillabr.org/author/geraldobarros/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "36658802-1c32-4af9-b41f-f2ce2adca813",
      "title": "Rust 2018: Use Relentless Positivity",
      "content_text": "Rust is a fantastic programming language, but I believe that adoption is held back largely due to a reputation for being difficult to learn. Let's fix that....",
      "url": "http://always-learning.timmcnamara.co.nz/2018/01/08/rust-2018/",
      "date_published": "2018-01-08T09:29:29.468+00:00",
      "author": {
        "name": "Tim McNamara",
        "url": "http://always-learning.timmcnamara.co.nz/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "87167446-604f-4bda-b1b1-2f13ea712655",
      "title": "New faces for our lovely bots in #Rust2018 [Totoroot]",
      "content_text": "A blog about programming and stuff. I'm in love with Rust, so most of my programming related posts are about that language.\n",
      "url": "https://lukaskalbertodt.github.io/2018/01/07/new-faces-for-bots-rust2018.html",
      "date_published": "2018-01-07T00:00:00+00:00",
      "author": {
        "name": "Lukas Kalbertodt",
        "url": "http://lukaskalbertodt.github.io/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "6b64ad00-dbd7-4974-8e82-503c2faa9798",
      "title": "Rust in 2018",
      "content_text": "The Rust project is soliciting wishlists for 2018. Rather than list big things that everybody wants like NLL or a more stable tokio, I’m going to list some things that I think are small and could be...",
      "url": "http://blog.kylehuey.com/post/169445545152/rust-in-2018",
      "date_published": "2018-01-07T00:00:00+00:00",
      "author": {
        "name": "Kyle Huey",
        "url": "http://blog.kylehuey.com/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "3b88c9f8-870f-4b97-a9e3-34cf5fc5f118",
      "title": "the new wave of rust | quiet misdreavus miniblog",
      "content_text": "I’m generally terrible at big-picture planning, so instead I’d like to talk about what I want to accomplish in the Rust world in 2018. Whether this slots into anyone else’s planning is another matter, but I’ll leave that as an exercise for the reader.",
      "url": "https://quietmisdreavus.net/code/2018/01/07/the-new-wave-of-rust/",
      "date_published": "2018-01-07T00:00:00+00:00",
      "author": {
        "name": "QuietMisdreavus",
        "url": "https://quietmisdreavus.net/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "52d67205-01cc-4100-aee3-646795db6b95",
      "title": "Rust and the web in 2018 – Rasmus.krats.se",
      "content_text": "My wish for Rust in 2018 is a nice and convenient web service framework that runs on stable rust and gets maintenance and regular updates for many years to come. My intent for 2018 is to continue to maintain and improve ructe (and rsass), and try to integrate it with the best such framework i can find.",
      "url": "https://rasmus.krats.se/2018/rustweb.en",
      "date_published": "2018-01-07T22:50:00+00:00",
      "author": {
        "name": "Rasmus Kaj",
        "url": "https://rasmus.krats.se/en"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "9d6a825b-75f7-4e63-8ada-4fa21202f843",
      "title": "Rust 2018",
      "content_text": "I want 2018 to be boring. I don't want it to be slow, I want lots of work to happen, but I want it to be 'boring' work. We got lots of big new things in 2017 and it felt...",
      "url": "https://www.ncameron.org/blog/rust-2018/",
      "date_published": "2018-01-07T22:39:37.752+00:00",
      "author": {
        "name": "Nick Cameron",
        "url": "http://www.ncameron.org/blog/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "80b271ae-2668-4577-9512-f7562e651253",
      "title": "Rust 2018 - Suspect Semantics",
      "content_text": "In this post I share a few small thoughts on what Rust should do in 2018, and more broadly about the current direction of the language. Tooling A …",
      "url": "http://www.suspectsemantics.com/blog/2018/01/07/rust-2018/",
      "date_published": "2018-01-07T13:34:15-08:00",
      "author": {
        "name": "Andrew Brinker",
        "url": "http://www.suspectsemantics.com/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "6e9f2101-5cff-4356-95ea-43146f207fc5",
      "title": "Rust 2018 · Matthew Mayer's tech blog",
      "content_text": "Per the call for blog posts, I’ve got thoughts and ideas on where Rust can go in the upcoming year. My wants haven’t changed much over the last year or so: give me non-embarassing compilation speed! 😁\n\nBefore getting started, I’m very appreciative of the hard work put into the overall Rust community and ecosystem, including the behind-the-scenes work. It’s difficult to understate just how much time and energy people volunteer in pursuit of a better, Rust-ier world.",
      "url": "https://matthewkmayer.github.io/blag/public/post/rust-2018/",
      "date_published": "2018-01-07T00:00:00+00:00",
      "author": {
        "name": "Matthew Mayer",
        "url": "https://matthewkmayer.github.io/blag/public"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "dbe7f7e3-229a-4d77-8d9f-7d857c051b54",
      "title": "#Rust2018 blog post",
      "content_text": "#Rust2018 blog post",
      "url": "https://gist.github.com/cessen/394829673855e56157f63b4447f91e67",
      "date_published": "2018-01-07T06:23:37+00:00",
      "author": {
        "name": "Nathan Vegdahl",
        "url": "https://github.com/cessen"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "4880546f-66a5-461b-a3b0-c0e31379b23d",
      "title": "Improving how we improve Rust in 2018",
      "content_text": "The past few years, I’ve been lucky to be part of the Rust community survey process. In 2016, this data helped show the need to improve usability. We had good foundations, but they were too hard to get at. In 2017, we saw a renewed need to reach out to companies, to improve documentation, and a continued importance of pushing to making Rust more usable.",
      "url": "http://www.jonathanturner.org/2018/01/rust2018-and-data.html",
      "date_published": "2018-01-07T00:00:00+00:00",
      "author": {
        "name": "Jonathan Turner",
        "url": "http://www.jonathanturner.org/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "2fae2fb9-686e-4b6e-a4e9-7cc28275bf44",
      "title": "Rust, Looking Forward in 2018",
      "content_text": "This past year I was pretty well a full-time Rust developer working on a handful of key projects: postmates/cernan postmates/hopper postmates/quantiles Each of these saw a non-trivial amount of work poured into them by myself and others. I wrote some – but not enough – about the work that",
      "url": "http://blog.troutwine.us/2018/01/06/rust-looking-forward-in-2018/",
      "date_published": "2018-01-06T02:09:25+00:00",
      "author": {
        "name": "Brian L. Troutwine",
        "url": "http://blog.troutwine.us/author/blt/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "88162fa2-6b84-4c3e-82e8-9e4443cb11c0",
      "title": "More Rust in 2018",
      "content_text": "Recently, the Rust teams put out a call for community thoughts on what Rust’s 2018 goals shouldbe, andwe’d like to weigh in from our perspective as a Rust-fo...",
      "url": "http://integer32.com/2018/01/05/more-rust-in-2018.html",
      "date_published": "2018-01-05T00:00:00+00:00",
      "author": {
        "name": "Carol Nichols",
        "url": "http://integer32.com/blog/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "3f34d83f-f520-4bfa-a6a8-f08e3a0bea9d",
      "title": "Rustに何が欲しいだろう | κeenのHappy Hacκing Blog",
      "content_text": "κeenです。New Year’s Rust: A Call for Community Blogpostsの一環のつもりです。 恐らく英語の記事が望まれてるんだろうなと思いつつも試しに日本から声を上げてみます。 私はRustは1.0前後の頃から触っていて、ドキュメントの翻訳をしたりここ1年くらいはIdein Inc.での業務でも使っています。\n\n1年ほど使ってみて何が足りないか考えてみます。",
      "url": "https://keens.github.io/blog/2018/01/05/rustninanigahoshiidarou/",
      "date_published": "2018-01-05T00:00:00+00:00",
      "author": {
        "name": "κeen",
        "url": "https://keens.github.io/"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "56870365-7dc4-4449-9f18-19caa0414b6b",
      "title": "My journey with Rust in 2017 — The good, the bad, the weird",
      "content_text": "Note: This post is not only about Rust, but rather my experiences, problems and solutions throughout 2017.",
      "url": "https://codeburst.io/my-journey-with-rust-in-2017-the-good-the-bad-the-weird-f07aa918f4f8",
      "date_published": "2018-01-04T00:31:28.519+00:00",
      "author": {
        "name": "Felix Schütt",
        "url": "https://codeburst.io/@fschutt"
      },
      "tags": [
        "Rust 2018"
      ]
    },
    {
      "id": "6d59f1d8-c073-47db-b3f5-0001878fd372",
      "title": "New Year's Rust: A Call for Community Blogposts - The Rust Programming Language Blog",
      "content_text": "Starting today and running until the end of January we’d like to ask the community to write blogposts reflecting on Rust in 2017 and proposing goals and directions for Rust in 2018.",
      "url": "https://blog.rust-lang.org/2018/01/03/new-years-rust-a-call-for-community-blogposts.html",
      "date_published": "2018-01-03T00:00:00+00:00",
      "author": {
        "name": "Rust Blog",
        "url": "https://blog.rust-lang.org/"
      },
      "tags": [
        "Rust 2018"
      ]
    }
  ]
}